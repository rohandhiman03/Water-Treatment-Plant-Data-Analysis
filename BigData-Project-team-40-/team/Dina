{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dinaomidvartehrani/BigData-Project-team-40-/blob/main/BigData-Project-team-40-/team/Dina\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "oCyPfOF-ggQz"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.manifold import TSNE\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Preprocessing**"
      ],
      "metadata": {
        "id": "BVTKScO4QIsg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2012, 2013, 2014, 2015, and 2020 have 366 dyas"
      ],
      "metadata": {
        "id": "niIvjyngzAZV"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2009**"
      ],
      "metadata": {
        "id": "0IPOqMVTSQNa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_09 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2009')\n",
        "data_09.to_csv('2009.csv', index=False)"
      ],
      "metadata": {
        "id": "6-m2v0_FkFjf"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009 = pd.read_csv('/content/2009.csv')"
      ],
      "metadata": {
        "id": "7gGAeNo7okj_"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 540
        },
        "id": "86EtwvpBn73J",
        "outputId": "f8e93637-8113-483d-f536-9a45df91904d"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO  \\\n",
              "0                                                NaN                                                              \n",
              "1                                               Date                                                              \n",
              "2                                2009-01-01 00:00:00                                                              \n",
              "3                                2009-01-02 00:00:00                                                              \n",
              "4                                2009-01-03 00:00:00                                                              \n",
              "\n",
              "  Unnamed: 1 Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5   Unnamed: 6  \\\n",
              "0         pH        NaN        NaN        NaN        NaN          NaN   \n",
              "1        Raw        PTC   PTC (OL)        SWC     Filter  Finish (OL)   \n",
              "2       6.99       6.44        NaN        NaN        NaN          NaN   \n",
              "3       7.18       6.41        NaN        NaN        NaN          NaN   \n",
              "4       6.63       6.52        NaN        NaN        NaN          NaN   \n",
              "\n",
              "  Unnamed: 7 Unnamed: 8 Unnamed: 9  ... Unnamed: 48 Unnamed: 49 Unnamed: 50  \\\n",
              "0        NaN   Chlorine        NaN  ...         NaN         NaN         NaN   \n",
              "1     Finish       Free      Total  ...      Finish      Filter    Backwash   \n",
              "2       7.35       1.82        NaN  ...      14.312         NaN         NaN   \n",
              "3       7.22       1.79        NaN  ...      14.201         NaN         NaN   \n",
              "4       7.34       1.82        NaN  ...       14.34         NaN         NaN   \n",
              "\n",
              "        Unnamed: 51 Unnamed: 52 Unnamed: 53       Unnamed: 54 Unnamed: 55  \\\n",
              "0  Flows from plant         NaN         NaN  Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW          Chlorine        Alum   \n",
              "2               NaN         NaN         NaN               NaN       14.68   \n",
              "3               NaN         NaN         NaN               NaN       14.68   \n",
              "4               NaN         NaN         NaN               NaN       14.68   \n",
              "\n",
              "  Unnamed: 56 Unnamed: 57  \n",
              "0         NaN         NaN  \n",
              "1   Limestone        Lime  \n",
              "2       14.88        6.76  \n",
              "3       14.88        6.76  \n",
              "4       14.88        6.76  \n",
              "\n",
              "[5 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-227ba712-7bc2-4130-90a0-f6df10ad860d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 48</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Free</td>\n",
              "      <td>Total</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Limestone</td>\n",
              "      <td>Lime</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.99</td>\n",
              "      <td>6.44</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.312</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>7.18</td>\n",
              "      <td>6.41</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.22</td>\n",
              "      <td>1.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.201</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.63</td>\n",
              "      <td>6.52</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.34</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.34</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-227ba712-7bc2-4130-90a0-f6df10ad860d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-227ba712-7bc2-4130-90a0-f6df10ad860d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-227ba712-7bc2-4130-90a0-f6df10ad860d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009 = data_2009.drop(data_2009.index[0])"
      ],
      "metadata": {
        "id": "iHg1PA4n60k4"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009.columns = pd.MultiIndex.from_tuples([('Date',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used', ' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "mOKrYetC4pqy"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009 = data_2009.drop(data_2009.index[0])"
      ],
      "metadata": {
        "id": "u-b_DRgo7E11"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 690
        },
        "id": "QnmCVONS6jJS",
        "outputId": "30d69ed8-b916-4692-8c98-b9cb4ad77380"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date                 pH                                   \\\n",
              "                                        Raw                PTC PTC (OL)  SWC   \n",
              "2    2009-01-01 00:00:00               6.99               6.44      NaN  NaN   \n",
              "3    2009-01-02 00:00:00               7.18               6.41      NaN  NaN   \n",
              "4    2009-01-03 00:00:00               6.63               6.52      NaN  NaN   \n",
              "5    2009-01-04 00:00:00  6.734999999999999              6.515      NaN  NaN   \n",
              "6    2009-01-05 00:00:00               6.84               6.51      NaN  NaN   \n",
              "..                   ...                ...                ...      ...  ...   \n",
              "362  2009-12-27 00:00:00               6.74  6.824999999999999      NaN  NaN   \n",
              "363  2009-12-28 00:00:00               6.74               6.76      NaN  NaN   \n",
              "364  2009-12-29 00:00:00               6.75                6.8      NaN  NaN   \n",
              "365  2009-12-30 00:00:00               6.75               6.81      NaN  NaN   \n",
              "366  2009-12-31 00:00:00               6.79               6.69      NaN  NaN   \n",
              "\n",
              "                                         Chlorine        ...  \\\n",
              "    Filter Finish (OL) Finish                Free Total  ...   \n",
              "2      NaN         NaN   7.35                1.82   NaN  ...   \n",
              "3      NaN         NaN   7.22                1.79   NaN  ...   \n",
              "4      NaN         NaN   7.34                1.82   NaN  ...   \n",
              "5      NaN         NaN   7.29  1.7850000000000001   NaN  ...   \n",
              "6      NaN         NaN   7.24                1.75   NaN  ...   \n",
              "..     ...         ...    ...                 ...   ...  ...   \n",
              "362    NaN         NaN  7.035                1.78   NaN  ...   \n",
              "363    NaN         NaN   6.98                1.92   NaN  ...   \n",
              "364    NaN         NaN   6.88                1.79   NaN  ...   \n",
              "365    NaN         NaN   7.28                1.67   NaN  ...   \n",
              "366    NaN         NaN   7.59                1.77   NaN  ...   \n",
              "\n",
              "    Flows within plant                 Flows from plant               \\\n",
              "                Finish Filter Backwash         Bishop s Botwood  GFW   \n",
              "2               14.312    NaN      NaN              NaN     NaN  NaN   \n",
              "3               14.201    NaN      NaN              NaN     NaN  NaN   \n",
              "4                14.34    NaN      NaN              NaN     NaN  NaN   \n",
              "5               14.113    NaN      NaN              NaN     NaN  NaN   \n",
              "6               13.886    NaN      NaN              NaN     NaN  NaN   \n",
              "..                 ...    ...      ...              ...     ...  ...   \n",
              "362            15.4265    NaN      NaN              NaN     NaN  NaN   \n",
              "363             15.373    NaN      NaN              NaN     NaN  NaN   \n",
              "364             15.708    NaN      NaN              NaN     NaN  NaN   \n",
              "365             16.529    NaN      NaN              NaN     NaN  NaN   \n",
              "366             15.761    NaN      NaN              NaN     NaN  NaN   \n",
              "\n",
              "    Chemical Dosages                          \n",
              "            Chlorine   Alum Limestone   Lime  \n",
              "2                NaN  14.68     14.88   6.76  \n",
              "3                NaN  14.68     14.88   6.76  \n",
              "4                NaN  14.68     14.88   6.76  \n",
              "5                NaN  14.68     14.88   6.76  \n",
              "6                NaN  14.68     14.88   6.76  \n",
              "..               ...    ...       ...    ...  \n",
              "362              NaN   10.4     21.26  11.66  \n",
              "363              NaN   10.4     21.26  11.66  \n",
              "364              NaN   10.4     21.26  11.66  \n",
              "365              NaN   10.4     21.26  11.66  \n",
              "366              NaN   10.4     21.26  10.78  \n",
              "\n",
              "[365 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-45d0ea28-8ade-40a7-94b3-b6a4fc1bd1b9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.99</td>\n",
              "      <td>6.44</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.312</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>7.18</td>\n",
              "      <td>6.41</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.22</td>\n",
              "      <td>1.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.201</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.63</td>\n",
              "      <td>6.52</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.34</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.34</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.734999999999999</td>\n",
              "      <td>6.515</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.7850000000000001</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.113</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>6.84</td>\n",
              "      <td>6.51</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.24</td>\n",
              "      <td>1.75</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.886</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2009-12-27 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.824999999999999</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.035</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.4265</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.98</td>\n",
              "      <td>1.92</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.373</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.88</td>\n",
              "      <td>1.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.708</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.81</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.28</td>\n",
              "      <td>1.67</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>16.529</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.79</td>\n",
              "      <td>6.69</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>1.77</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.761</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45d0ea28-8ade-40a7-94b3-b6a4fc1bd1b9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-45d0ea28-8ade-40a7-94b3-b6a4fc1bd1b9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-45d0ea28-8ade-40a7-94b3-b6a4fc1bd1b9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009 = data_2009.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "MoSnBqWjLaJY"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 690
        },
        "id": "5WJ9m8tmLcW7",
        "outputId": "41cedeb9-5e0a-4712-a71a-57501dd498d6"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date                 pH                                   \\\n",
              "                                        Raw                PTC PTC (OL)  SWC   \n",
              "0    2009-01-01 00:00:00               6.99               6.44      NaN  NaN   \n",
              "1    2009-01-02 00:00:00               7.18               6.41      NaN  NaN   \n",
              "2    2009-01-03 00:00:00               6.63               6.52      NaN  NaN   \n",
              "3    2009-01-04 00:00:00  6.734999999999999              6.515      NaN  NaN   \n",
              "4    2009-01-05 00:00:00               6.84               6.51      NaN  NaN   \n",
              "..                   ...                ...                ...      ...  ...   \n",
              "360  2009-12-27 00:00:00               6.74  6.824999999999999      NaN  NaN   \n",
              "361  2009-12-28 00:00:00               6.74               6.76      NaN  NaN   \n",
              "362  2009-12-29 00:00:00               6.75                6.8      NaN  NaN   \n",
              "363  2009-12-30 00:00:00               6.75               6.81      NaN  NaN   \n",
              "364  2009-12-31 00:00:00               6.79               6.69      NaN  NaN   \n",
              "\n",
              "                                         Chlorine        ...  \\\n",
              "    Filter Finish (OL) Finish                Free Total  ...   \n",
              "0      NaN         NaN   7.35                1.82   NaN  ...   \n",
              "1      NaN         NaN   7.22                1.79   NaN  ...   \n",
              "2      NaN         NaN   7.34                1.82   NaN  ...   \n",
              "3      NaN         NaN   7.29  1.7850000000000001   NaN  ...   \n",
              "4      NaN         NaN   7.24                1.75   NaN  ...   \n",
              "..     ...         ...    ...                 ...   ...  ...   \n",
              "360    NaN         NaN  7.035                1.78   NaN  ...   \n",
              "361    NaN         NaN   6.98                1.92   NaN  ...   \n",
              "362    NaN         NaN   6.88                1.79   NaN  ...   \n",
              "363    NaN         NaN   7.28                1.67   NaN  ...   \n",
              "364    NaN         NaN   7.59                1.77   NaN  ...   \n",
              "\n",
              "    Flows within plant                 Flows from plant               \\\n",
              "                Finish Filter Backwash         Bishop s Botwood  GFW   \n",
              "0               14.312    NaN      NaN              NaN     NaN  NaN   \n",
              "1               14.201    NaN      NaN              NaN     NaN  NaN   \n",
              "2                14.34    NaN      NaN              NaN     NaN  NaN   \n",
              "3               14.113    NaN      NaN              NaN     NaN  NaN   \n",
              "4               13.886    NaN      NaN              NaN     NaN  NaN   \n",
              "..                 ...    ...      ...              ...     ...  ...   \n",
              "360            15.4265    NaN      NaN              NaN     NaN  NaN   \n",
              "361             15.373    NaN      NaN              NaN     NaN  NaN   \n",
              "362             15.708    NaN      NaN              NaN     NaN  NaN   \n",
              "363             16.529    NaN      NaN              NaN     NaN  NaN   \n",
              "364             15.761    NaN      NaN              NaN     NaN  NaN   \n",
              "\n",
              "    Chemical Dosages                          \n",
              "            Chlorine   Alum Limestone   Lime  \n",
              "0                NaN  14.68     14.88   6.76  \n",
              "1                NaN  14.68     14.88   6.76  \n",
              "2                NaN  14.68     14.88   6.76  \n",
              "3                NaN  14.68     14.88   6.76  \n",
              "4                NaN  14.68     14.88   6.76  \n",
              "..               ...    ...       ...    ...  \n",
              "360              NaN   10.4     21.26  11.66  \n",
              "361              NaN   10.4     21.26  11.66  \n",
              "362              NaN   10.4     21.26  11.66  \n",
              "363              NaN   10.4     21.26  11.66  \n",
              "364              NaN   10.4     21.26  10.78  \n",
              "\n",
              "[365 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-78e20c7b-57cb-4c8f-9a60-b1df7ae09bd4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.99</td>\n",
              "      <td>6.44</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.312</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>7.18</td>\n",
              "      <td>6.41</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.22</td>\n",
              "      <td>1.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.201</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.63</td>\n",
              "      <td>6.52</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.34</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.34</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.734999999999999</td>\n",
              "      <td>6.515</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.7850000000000001</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.113</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>6.84</td>\n",
              "      <td>6.51</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.24</td>\n",
              "      <td>1.75</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.886</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2009-12-27 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.824999999999999</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.035</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.4265</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.98</td>\n",
              "      <td>1.92</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.373</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.88</td>\n",
              "      <td>1.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.708</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.81</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.28</td>\n",
              "      <td>1.67</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>16.529</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.79</td>\n",
              "      <td>6.69</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.59</td>\n",
              "      <td>1.77</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.761</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78e20c7b-57cb-4c8f-9a60-b1df7ae09bd4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-78e20c7b-57cb-4c8f-9a60-b1df7ae09bd4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-78e20c7b-57cb-4c8f-9a60-b1df7ae09bd4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009 = data_2009.dropna(axis=1, how='all')"
      ],
      "metadata": {
        "id": "_ZjxDIakMWEW"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 901
        },
        "id": "-jKvxGkENDt0",
        "outputId": "01dc4bc7-8bf8-4a8d-949f-1edd56e376f7"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date                 pH                            \\\n",
              "                                        Raw                PTC Finish   \n",
              "0    2009-01-01 00:00:00               6.99               6.44   7.35   \n",
              "1    2009-01-02 00:00:00               7.18               6.41   7.22   \n",
              "2    2009-01-03 00:00:00               6.63               6.52   7.34   \n",
              "3    2009-01-04 00:00:00  6.734999999999999              6.515   7.29   \n",
              "4    2009-01-05 00:00:00               6.84               6.51   7.24   \n",
              "..                   ...                ...                ...    ...   \n",
              "360  2009-12-27 00:00:00               6.74  6.824999999999999  7.035   \n",
              "361  2009-12-28 00:00:00               6.74               6.76   6.98   \n",
              "362  2009-12-29 00:00:00               6.75                6.8   6.88   \n",
              "363  2009-12-30 00:00:00               6.75               6.81   7.28   \n",
              "364  2009-12-31 00:00:00               6.79               6.69   7.59   \n",
              "\n",
              "               Chlorine Colour                     Turbidity  \\\n",
              "                   Free  Raw T Finish T                  Raw   \n",
              "0                  1.82     40        0                0.341   \n",
              "1                  1.79    176        0                0.307   \n",
              "2                  1.82     54        0                0.518   \n",
              "3    1.7850000000000001     74        0  0.41400000000000003   \n",
              "4                  1.75     94        0                 0.31   \n",
              "..                  ...    ...      ...                  ...   \n",
              "360                1.78     47        0                0.623   \n",
              "361                1.92     49        0                0.604   \n",
              "362                1.79     64        0                0.576   \n",
              "363                1.67     62        0                 0.67   \n",
              "364                1.77     51        0                0.483   \n",
              "\n",
              "                                               ... Alkalinity      Aluminum  \\\n",
              "                  Filter               Finish  ...     Finish Finish (Free)   \n",
              "0                  0.083                0.134  ...         10         0.094   \n",
              "1                  0.085                0.138  ...         10         0.043   \n",
              "2                  0.091                 0.12  ...         10         0.058   \n",
              "3    0.14300000000000002  0.14100000000000001  ...         10         0.046   \n",
              "4                  0.195                0.162  ...         10         0.034   \n",
              "..                   ...                  ...  ...        ...           ...   \n",
              "360                0.242               0.3365  ...       12.2         0.067   \n",
              "361                0.274                0.406  ...       11.7         0.071   \n",
              "362                0.183                0.353  ...       14.5         0.218   \n",
              "363                0.193                0.324  ...       14.8         0.192   \n",
              "364                0.126                0.259  ...       14.7         0.143   \n",
              "\n",
              "            Temperature Cl Used Cl Demand Flows within plant           \\\n",
              "                 Finish                                  Raw   Finish   \n",
              "0                   3.4   89.96      1.03             14.612   14.312   \n",
              "1                   3.7   89.96      1.09             14.521   14.201   \n",
              "2                   3.7   89.96      1.03              14.66    14.34   \n",
              "3    3.6500000000000004   90.05     1.115             14.881   14.113   \n",
              "4                   3.6   90.14       1.2             15.102   13.886   \n",
              "..                  ...     ...       ...                ...      ...   \n",
              "360                 3.8   99.75      1.25            16.7045  15.4265   \n",
              "361                 4.2  115.39      1.49             16.939   15.373   \n",
              "362                 4.8   94.77      0.95             16.569   15.708   \n",
              "363                 3.9   94.86      0.94             17.537   16.529   \n",
              "364                 3.9   89.96      0.73             16.739   15.761   \n",
              "\n",
              "    Chemical Dosages                   \n",
              "                Alum Limestone   Lime  \n",
              "0              14.68     14.88   6.76  \n",
              "1              14.68     14.88   6.76  \n",
              "2              14.68     14.88   6.76  \n",
              "3              14.68     14.88   6.76  \n",
              "4              14.68     14.88   6.76  \n",
              "..               ...       ...    ...  \n",
              "360             10.4     21.26  11.66  \n",
              "361             10.4     21.26  11.66  \n",
              "362             10.4     21.26  11.66  \n",
              "363             10.4     21.26  11.66  \n",
              "364             10.4     21.26  10.78  \n",
              "\n",
              "[365 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-071e5133-1bcd-42aa-88d1-1c3edb994dae\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"3\" halign=\"left\">pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Colour</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Turbidity</th>\n",
              "      <th>...</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Aluminum</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Cl Used</th>\n",
              "      <th>Cl Demand</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Finish T</th>\n",
              "      <th>Raw</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish (Free)</th>\n",
              "      <th>Finish</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.99</td>\n",
              "      <td>6.44</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.82</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.341</td>\n",
              "      <td>0.083</td>\n",
              "      <td>0.134</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>0.094</td>\n",
              "      <td>3.4</td>\n",
              "      <td>89.96</td>\n",
              "      <td>1.03</td>\n",
              "      <td>14.612</td>\n",
              "      <td>14.312</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>7.18</td>\n",
              "      <td>6.41</td>\n",
              "      <td>7.22</td>\n",
              "      <td>1.79</td>\n",
              "      <td>176</td>\n",
              "      <td>0</td>\n",
              "      <td>0.307</td>\n",
              "      <td>0.085</td>\n",
              "      <td>0.138</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>0.043</td>\n",
              "      <td>3.7</td>\n",
              "      <td>89.96</td>\n",
              "      <td>1.09</td>\n",
              "      <td>14.521</td>\n",
              "      <td>14.201</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.63</td>\n",
              "      <td>6.52</td>\n",
              "      <td>7.34</td>\n",
              "      <td>1.82</td>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>0.518</td>\n",
              "      <td>0.091</td>\n",
              "      <td>0.12</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>0.058</td>\n",
              "      <td>3.7</td>\n",
              "      <td>89.96</td>\n",
              "      <td>1.03</td>\n",
              "      <td>14.66</td>\n",
              "      <td>14.34</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.734999999999999</td>\n",
              "      <td>6.515</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.7850000000000001</td>\n",
              "      <td>74</td>\n",
              "      <td>0</td>\n",
              "      <td>0.41400000000000003</td>\n",
              "      <td>0.14300000000000002</td>\n",
              "      <td>0.14100000000000001</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>0.046</td>\n",
              "      <td>3.6500000000000004</td>\n",
              "      <td>90.05</td>\n",
              "      <td>1.115</td>\n",
              "      <td>14.881</td>\n",
              "      <td>14.113</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>6.84</td>\n",
              "      <td>6.51</td>\n",
              "      <td>7.24</td>\n",
              "      <td>1.75</td>\n",
              "      <td>94</td>\n",
              "      <td>0</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.195</td>\n",
              "      <td>0.162</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>0.034</td>\n",
              "      <td>3.6</td>\n",
              "      <td>90.14</td>\n",
              "      <td>1.2</td>\n",
              "      <td>15.102</td>\n",
              "      <td>13.886</td>\n",
              "      <td>14.68</td>\n",
              "      <td>14.88</td>\n",
              "      <td>6.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2009-12-27 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.824999999999999</td>\n",
              "      <td>7.035</td>\n",
              "      <td>1.78</td>\n",
              "      <td>47</td>\n",
              "      <td>0</td>\n",
              "      <td>0.623</td>\n",
              "      <td>0.242</td>\n",
              "      <td>0.3365</td>\n",
              "      <td>...</td>\n",
              "      <td>12.2</td>\n",
              "      <td>0.067</td>\n",
              "      <td>3.8</td>\n",
              "      <td>99.75</td>\n",
              "      <td>1.25</td>\n",
              "      <td>16.7045</td>\n",
              "      <td>15.4265</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.76</td>\n",
              "      <td>6.98</td>\n",
              "      <td>1.92</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>0.604</td>\n",
              "      <td>0.274</td>\n",
              "      <td>0.406</td>\n",
              "      <td>...</td>\n",
              "      <td>11.7</td>\n",
              "      <td>0.071</td>\n",
              "      <td>4.2</td>\n",
              "      <td>115.39</td>\n",
              "      <td>1.49</td>\n",
              "      <td>16.939</td>\n",
              "      <td>15.373</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.8</td>\n",
              "      <td>6.88</td>\n",
              "      <td>1.79</td>\n",
              "      <td>64</td>\n",
              "      <td>0</td>\n",
              "      <td>0.576</td>\n",
              "      <td>0.183</td>\n",
              "      <td>0.353</td>\n",
              "      <td>...</td>\n",
              "      <td>14.5</td>\n",
              "      <td>0.218</td>\n",
              "      <td>4.8</td>\n",
              "      <td>94.77</td>\n",
              "      <td>0.95</td>\n",
              "      <td>16.569</td>\n",
              "      <td>15.708</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.81</td>\n",
              "      <td>7.28</td>\n",
              "      <td>1.67</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.193</td>\n",
              "      <td>0.324</td>\n",
              "      <td>...</td>\n",
              "      <td>14.8</td>\n",
              "      <td>0.192</td>\n",
              "      <td>3.9</td>\n",
              "      <td>94.86</td>\n",
              "      <td>0.94</td>\n",
              "      <td>17.537</td>\n",
              "      <td>16.529</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.79</td>\n",
              "      <td>6.69</td>\n",
              "      <td>7.59</td>\n",
              "      <td>1.77</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>0.483</td>\n",
              "      <td>0.126</td>\n",
              "      <td>0.259</td>\n",
              "      <td>...</td>\n",
              "      <td>14.7</td>\n",
              "      <td>0.143</td>\n",
              "      <td>3.9</td>\n",
              "      <td>89.96</td>\n",
              "      <td>0.73</td>\n",
              "      <td>16.739</td>\n",
              "      <td>15.761</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-071e5133-1bcd-42aa-88d1-1c3edb994dae')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-071e5133-1bcd-42aa-88d1-1c3edb994dae button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-071e5133-1bcd-42aa-88d1-1c3edb994dae');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2009.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4DDfbo5LcV8S",
        "outputId": "4d9037da-59a1-4a73-9474-622a6cd37089"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2010**"
      ],
      "metadata": {
        "id": "GtXiqXxlSUSr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_10 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2010')\n",
        "data_10.to_csv('2010.csv', index=False)"
      ],
      "metadata": {
        "id": "nDnM1_NWQbVT"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010 = pd.read_csv('/content/2010.csv')"
      ],
      "metadata": {
        "id": "4iM3NSbCQbVT"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "3fed2935-6c52-4f3e-f6c5-44b4bf5d13e3",
        "id": "-_7O0cVoQbVT"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO  \\\n",
              "0                                                NaN                                                              \n",
              "1                                               Date                                                              \n",
              "2                                2010-01-01 00:00:00                                                              \n",
              "3                                2010-01-02 00:00:00                                                              \n",
              "4                                2010-01-03 00:00:00                                                              \n",
              "\n",
              "  Unnamed: 1 Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5   Unnamed: 6  \\\n",
              "0         pH        NaN        NaN        NaN        NaN          NaN   \n",
              "1        Raw        PTC   PTC (OL)        SWC     Filter  Finish (OL)   \n",
              "2       6.75        6.7        NaN        NaN        NaN          NaN   \n",
              "3       6.73       6.76        NaN        NaN        NaN          NaN   \n",
              "4       6.74       6.73        NaN        NaN        NaN          NaN   \n",
              "\n",
              "  Unnamed: 7          Unnamed: 8 Unnamed: 9  ... Unnamed: 48 Unnamed: 49  \\\n",
              "0        NaN            Chlorine        NaN  ...         NaN         NaN   \n",
              "1     Finish                Free      Total  ...      Finish      Filter   \n",
              "2       6.49                1.28        NaN  ...        15.4         NaN   \n",
              "3       8.26                1.37        NaN  ...       15.43         NaN   \n",
              "4      7.375  1.3250000000000002        NaN  ...      15.298         NaN   \n",
              "\n",
              "  Unnamed: 50       Unnamed: 51 Unnamed: 52 Unnamed: 53       Unnamed: 54  \\\n",
              "0         NaN  Flows from plant         NaN         NaN  Chemical Dosages   \n",
              "1    Backwash          Bishop's     Botwood         GFW          Chlorine   \n",
              "2         NaN               NaN         NaN         NaN               NaN   \n",
              "3         NaN               NaN         NaN         NaN               NaN   \n",
              "4         NaN               NaN         NaN         NaN               NaN   \n",
              "\n",
              "  Unnamed: 55 Unnamed: 56 Unnamed: 57  \n",
              "0         NaN         NaN         NaN  \n",
              "1        Alum   Limestone        Lime  \n",
              "2        10.4       21.26       10.78  \n",
              "3        10.4       21.26        6.55  \n",
              "4        10.4       21.26        7.25  \n",
              "\n",
              "[5 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-39fef9db-b1f6-4a47-92af-205d3d29d59d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 48</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Free</td>\n",
              "      <td>Total</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Limestone</td>\n",
              "      <td>Lime</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2010-01-01 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.49</td>\n",
              "      <td>1.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2010-01-02 00:00:00</td>\n",
              "      <td>6.73</td>\n",
              "      <td>6.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.26</td>\n",
              "      <td>1.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.43</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>6.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2010-01-03 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.73</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.375</td>\n",
              "      <td>1.3250000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.298</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39fef9db-b1f6-4a47-92af-205d3d29d59d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-39fef9db-b1f6-4a47-92af-205d3d29d59d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-39fef9db-b1f6-4a47-92af-205d3d29d59d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010 = data_2010.drop(data_2010.index[0])"
      ],
      "metadata": {
        "id": "eGQoto8RQbVU"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010.columns = pd.MultiIndex.from_tuples([('Date',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used', ' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "pIf_ugG8QbVU"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010 = data_2010.drop(data_2010.index[0])"
      ],
      "metadata": {
        "id": "_D7ne-asQbVU"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c691e6e4-6875-42e0-badd-7ec95a7481a2",
        "id": "f_y4-N_kQbVU"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                \\\n",
              "                           Raw   PTC PTC (OL)  SWC Filter Finish (OL) Finish   \n",
              "2    2010-01-01 00:00:00  6.75   6.7      NaN  NaN    NaN         NaN   6.49   \n",
              "3    2010-01-02 00:00:00  6.73  6.76      NaN  NaN    NaN         NaN   8.26   \n",
              "4    2010-01-03 00:00:00  6.74  6.73      NaN  NaN    NaN         NaN  7.375   \n",
              "5    2010-01-04 00:00:00  6.86  6.88      NaN  NaN    NaN         NaN   4.86   \n",
              "6    2010-01-05 00:00:00  6.86   6.7      NaN  NaN    NaN         NaN   7.12   \n",
              "..                   ...   ...   ...      ...  ...    ...         ...    ...   \n",
              "362  2010-12-27 00:00:00  5.61  5.94      NaN  NaN    NaN         NaN   7.18   \n",
              "363  2010-12-28 00:00:00  6.16  6.19      NaN  NaN    NaN         NaN   7.27   \n",
              "364  2010-12-29 00:00:00  6.07  6.02      NaN  NaN    NaN         NaN   6.55   \n",
              "365  2010-12-30 00:00:00  6.01  5.96      NaN  NaN    NaN         NaN    7.2   \n",
              "366  2010-12-31 00:00:00  6.29   6.3      NaN  NaN    NaN         NaN   7.15   \n",
              "\n",
              "               Chlorine        ... Flows within plant                  \\\n",
              "                   Free Total  ...             Finish Filter Backwash   \n",
              "2                  1.28   NaN  ...               15.4    NaN      NaN   \n",
              "3                  1.37   NaN  ...              15.43    NaN      NaN   \n",
              "4    1.3250000000000002   NaN  ...             15.298    NaN      NaN   \n",
              "5                  1.61   NaN  ...             15.645    NaN      NaN   \n",
              "6                  1.55   NaN  ...             14.971    NaN      NaN   \n",
              "..                  ...   ...  ...                ...    ...      ...   \n",
              "362                1.15   NaN  ...             13.233    NaN      NaN   \n",
              "363                1.37   NaN  ...             13.684    NaN      NaN   \n",
              "364                1.58   NaN  ...              13.14    NaN      NaN   \n",
              "365                1.57   NaN  ...             14.022    NaN      NaN   \n",
              "366                1.66   NaN  ...             13.417    NaN      NaN   \n",
              "\n",
              "    Flows from plant              Chemical Dosages                          \n",
              "            Bishop s Botwood  GFW         Chlorine   Alum Limestone   Lime  \n",
              "2                NaN     NaN  NaN              NaN   10.4     21.26  10.78  \n",
              "3                NaN     NaN  NaN              NaN   10.4     21.26   6.55  \n",
              "4                NaN     NaN  NaN              NaN   10.4     21.26   7.25  \n",
              "5                NaN     NaN  NaN              NaN   10.4     21.26   7.25  \n",
              "6                NaN     NaN  NaN              NaN   10.4     21.26   7.25  \n",
              "..               ...     ...  ...              ...    ...       ...    ...  \n",
              "362              NaN     NaN  NaN              NaN  27.22     12.94   9.16  \n",
              "363              NaN     NaN  NaN              NaN  23.97     12.37  16.99  \n",
              "364              NaN     NaN  NaN              NaN   27.7     13.55   13.4  \n",
              "365              NaN     NaN  NaN              NaN  27.03     13.28  13.15  \n",
              "366              NaN     NaN  NaN              NaN  25.66     14.63  12.67  \n",
              "\n",
              "[365 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c8989399-075e-44a8-9901-7e63790882a2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2010-01-01 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.49</td>\n",
              "      <td>1.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2010-01-02 00:00:00</td>\n",
              "      <td>6.73</td>\n",
              "      <td>6.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.26</td>\n",
              "      <td>1.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.43</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>6.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2010-01-03 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.73</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.375</td>\n",
              "      <td>1.3250000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.298</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2010-01-04 00:00:00</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.88</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.86</td>\n",
              "      <td>1.61</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.645</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2010-01-05 00:00:00</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.971</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2010-12-27 00:00:00</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.94</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.18</td>\n",
              "      <td>1.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.233</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.22</td>\n",
              "      <td>12.94</td>\n",
              "      <td>9.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2010-12-28 00:00:00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>6.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.27</td>\n",
              "      <td>1.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.684</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23.97</td>\n",
              "      <td>12.37</td>\n",
              "      <td>16.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2010-12-29 00:00:00</td>\n",
              "      <td>6.07</td>\n",
              "      <td>6.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.55</td>\n",
              "      <td>1.58</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.7</td>\n",
              "      <td>13.55</td>\n",
              "      <td>13.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2010-12-30 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.96</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.2</td>\n",
              "      <td>1.57</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.022</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.03</td>\n",
              "      <td>13.28</td>\n",
              "      <td>13.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2010-12-31 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.15</td>\n",
              "      <td>1.66</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.417</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>25.66</td>\n",
              "      <td>14.63</td>\n",
              "      <td>12.67</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8989399-075e-44a8-9901-7e63790882a2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c8989399-075e-44a8-9901-7e63790882a2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c8989399-075e-44a8-9901-7e63790882a2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010 = data_2010.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "cC1nF3wrQbVU"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "36b58aaa-f4bf-48eb-dcda-ae6acbd40b4f",
        "id": "pqA8_lPCQbVU"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                \\\n",
              "                           Raw   PTC PTC (OL)  SWC Filter Finish (OL) Finish   \n",
              "0    2010-01-01 00:00:00  6.75   6.7      NaN  NaN    NaN         NaN   6.49   \n",
              "1    2010-01-02 00:00:00  6.73  6.76      NaN  NaN    NaN         NaN   8.26   \n",
              "2    2010-01-03 00:00:00  6.74  6.73      NaN  NaN    NaN         NaN  7.375   \n",
              "3    2010-01-04 00:00:00  6.86  6.88      NaN  NaN    NaN         NaN   4.86   \n",
              "4    2010-01-05 00:00:00  6.86   6.7      NaN  NaN    NaN         NaN   7.12   \n",
              "..                   ...   ...   ...      ...  ...    ...         ...    ...   \n",
              "360  2010-12-27 00:00:00  5.61  5.94      NaN  NaN    NaN         NaN   7.18   \n",
              "361  2010-12-28 00:00:00  6.16  6.19      NaN  NaN    NaN         NaN   7.27   \n",
              "362  2010-12-29 00:00:00  6.07  6.02      NaN  NaN    NaN         NaN   6.55   \n",
              "363  2010-12-30 00:00:00  6.01  5.96      NaN  NaN    NaN         NaN    7.2   \n",
              "364  2010-12-31 00:00:00  6.29   6.3      NaN  NaN    NaN         NaN   7.15   \n",
              "\n",
              "               Chlorine        ... Flows within plant                  \\\n",
              "                   Free Total  ...             Finish Filter Backwash   \n",
              "0                  1.28   NaN  ...               15.4    NaN      NaN   \n",
              "1                  1.37   NaN  ...              15.43    NaN      NaN   \n",
              "2    1.3250000000000002   NaN  ...             15.298    NaN      NaN   \n",
              "3                  1.61   NaN  ...             15.645    NaN      NaN   \n",
              "4                  1.55   NaN  ...             14.971    NaN      NaN   \n",
              "..                  ...   ...  ...                ...    ...      ...   \n",
              "360                1.15   NaN  ...             13.233    NaN      NaN   \n",
              "361                1.37   NaN  ...             13.684    NaN      NaN   \n",
              "362                1.58   NaN  ...              13.14    NaN      NaN   \n",
              "363                1.57   NaN  ...             14.022    NaN      NaN   \n",
              "364                1.66   NaN  ...             13.417    NaN      NaN   \n",
              "\n",
              "    Flows from plant              Chemical Dosages                          \n",
              "            Bishop s Botwood  GFW         Chlorine   Alum Limestone   Lime  \n",
              "0                NaN     NaN  NaN              NaN   10.4     21.26  10.78  \n",
              "1                NaN     NaN  NaN              NaN   10.4     21.26   6.55  \n",
              "2                NaN     NaN  NaN              NaN   10.4     21.26   7.25  \n",
              "3                NaN     NaN  NaN              NaN   10.4     21.26   7.25  \n",
              "4                NaN     NaN  NaN              NaN   10.4     21.26   7.25  \n",
              "..               ...     ...  ...              ...    ...       ...    ...  \n",
              "360              NaN     NaN  NaN              NaN  27.22     12.94   9.16  \n",
              "361              NaN     NaN  NaN              NaN  23.97     12.37  16.99  \n",
              "362              NaN     NaN  NaN              NaN   27.7     13.55   13.4  \n",
              "363              NaN     NaN  NaN              NaN  27.03     13.28  13.15  \n",
              "364              NaN     NaN  NaN              NaN  25.66     14.63  12.67  \n",
              "\n",
              "[365 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cafd75cf-91f1-4c56-9169-3cf33dad5026\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2010-01-01 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.49</td>\n",
              "      <td>1.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2010-01-02 00:00:00</td>\n",
              "      <td>6.73</td>\n",
              "      <td>6.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.26</td>\n",
              "      <td>1.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.43</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>6.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2010-01-03 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.73</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.375</td>\n",
              "      <td>1.3250000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.298</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2010-01-04 00:00:00</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.88</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.86</td>\n",
              "      <td>1.61</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>15.645</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2010-01-05 00:00:00</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.971</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2010-12-27 00:00:00</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.94</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.18</td>\n",
              "      <td>1.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.233</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.22</td>\n",
              "      <td>12.94</td>\n",
              "      <td>9.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2010-12-28 00:00:00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>6.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.27</td>\n",
              "      <td>1.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.684</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23.97</td>\n",
              "      <td>12.37</td>\n",
              "      <td>16.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2010-12-29 00:00:00</td>\n",
              "      <td>6.07</td>\n",
              "      <td>6.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.55</td>\n",
              "      <td>1.58</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.7</td>\n",
              "      <td>13.55</td>\n",
              "      <td>13.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2010-12-30 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.96</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.2</td>\n",
              "      <td>1.57</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.022</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.03</td>\n",
              "      <td>13.28</td>\n",
              "      <td>13.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2010-12-31 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.15</td>\n",
              "      <td>1.66</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.417</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>25.66</td>\n",
              "      <td>14.63</td>\n",
              "      <td>12.67</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cafd75cf-91f1-4c56-9169-3cf33dad5026')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cafd75cf-91f1-4c56-9169-3cf33dad5026 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cafd75cf-91f1-4c56-9169-3cf33dad5026');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010 = data_2010.dropna(axis=1, how='all')"
      ],
      "metadata": {
        "id": "Ir3X8AGOQbVU"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "d35a7e00-40bf-4549-b657-c44afd437307",
        "id": "xU4K6XjNQbVV"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                         Chlorine Colour  \\\n",
              "                           Raw   PTC Finish                Free  Raw T   \n",
              "0    2010-01-01 00:00:00  6.75   6.7   6.49                1.28     51   \n",
              "1    2010-01-02 00:00:00  6.73  6.76   8.26                1.37     40   \n",
              "2    2010-01-03 00:00:00  6.74  6.73  7.375  1.3250000000000002   45.5   \n",
              "3    2010-01-04 00:00:00  6.86  6.88   4.86                1.61     43   \n",
              "4    2010-01-05 00:00:00  6.86   6.7   7.12                1.55     65   \n",
              "..                   ...   ...   ...    ...                 ...    ...   \n",
              "360  2010-12-27 00:00:00  5.61  5.94   7.18                1.15     74   \n",
              "361  2010-12-28 00:00:00  6.16  6.19   7.27                1.37     71   \n",
              "362  2010-12-29 00:00:00  6.07  6.02   6.55                1.58     71   \n",
              "363  2010-12-30 00:00:00  6.01  5.96    7.2                1.57     74   \n",
              "364  2010-12-31 00:00:00  6.29   6.3   7.15                1.66     69   \n",
              "\n",
              "             Turbidity                                            ...  \\\n",
              "    Finish T       Raw               Filter               Finish  ...   \n",
              "0          0     0.484                0.092                 0.16  ...   \n",
              "1          0     0.505                0.243                0.671  ...   \n",
              "2          0    0.4945  0.16749999999999998  0.41550000000000004  ...   \n",
              "3          0     0.467                0.278                0.491  ...   \n",
              "4          0     0.493                0.205                0.401  ...   \n",
              "..       ...       ...                  ...                  ...  ...   \n",
              "360        1     2.701                0.374                0.592  ...   \n",
              "361        0     1.774                0.294                0.276  ...   \n",
              "362        2     2.357                 0.31                 0.52  ...   \n",
              "363        0     1.587                0.321                0.268  ...   \n",
              "364        0     1.768                0.295                0.286  ...   \n",
              "\n",
              "    Alkalinity      Aluminum Temperature Cl Used Cl Demand Flows within plant  \\\n",
              "        Finish Finish (Free)      Finish                                  Raw   \n",
              "0          9.2         0.125         3.4   85.55      1.24              16.41   \n",
              "1          8.9         0.116         3.4   79.69      0.97              16.32   \n",
              "2         9.05        0.1205         3.4   75.28      0.91             16.245   \n",
              "3          3.4         0.172         4.3  105.11      1.44             17.542   \n",
              "4         13.6         0.163         4.4   89.96      1.18             16.026   \n",
              "..         ...           ...         ...     ...       ...                ...   \n",
              "360        8.1         0.186           5   50.78      0.59             14.794   \n",
              "361        8.7         0.173         5.1   61.74      0.68             14.345   \n",
              "362        7.9          0.17         4.6   69.92      0.84             14.335   \n",
              "363        8.2         0.174         4.7   85.62       1.2             15.128   \n",
              "364        9.1         0.143         4.4   85.16      1.22              14.15   \n",
              "\n",
              "            Chemical Dosages                   \n",
              "     Finish             Alum Limestone   Lime  \n",
              "0      15.4             10.4     21.26  10.78  \n",
              "1     15.43             10.4     21.26   6.55  \n",
              "2    15.298             10.4     21.26   7.25  \n",
              "3    15.645             10.4     21.26   7.25  \n",
              "4    14.971             10.4     21.26   7.25  \n",
              "..      ...              ...       ...    ...  \n",
              "360  13.233            27.22     12.94   9.16  \n",
              "361  13.684            23.97     12.37  16.99  \n",
              "362   13.14             27.7     13.55   13.4  \n",
              "363  14.022            27.03     13.28  13.15  \n",
              "364  13.417            25.66     14.63  12.67  \n",
              "\n",
              "[365 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8cd71550-47ff-4ff8-9f2f-ee209867b8d8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"3\" halign=\"left\">pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Colour</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Turbidity</th>\n",
              "      <th>...</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Aluminum</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Cl Used</th>\n",
              "      <th>Cl Demand</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Finish T</th>\n",
              "      <th>Raw</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish (Free)</th>\n",
              "      <th>Finish</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2010-01-01 00:00:00</td>\n",
              "      <td>6.75</td>\n",
              "      <td>6.7</td>\n",
              "      <td>6.49</td>\n",
              "      <td>1.28</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>0.484</td>\n",
              "      <td>0.092</td>\n",
              "      <td>0.16</td>\n",
              "      <td>...</td>\n",
              "      <td>9.2</td>\n",
              "      <td>0.125</td>\n",
              "      <td>3.4</td>\n",
              "      <td>85.55</td>\n",
              "      <td>1.24</td>\n",
              "      <td>16.41</td>\n",
              "      <td>15.4</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2010-01-02 00:00:00</td>\n",
              "      <td>6.73</td>\n",
              "      <td>6.76</td>\n",
              "      <td>8.26</td>\n",
              "      <td>1.37</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.505</td>\n",
              "      <td>0.243</td>\n",
              "      <td>0.671</td>\n",
              "      <td>...</td>\n",
              "      <td>8.9</td>\n",
              "      <td>0.116</td>\n",
              "      <td>3.4</td>\n",
              "      <td>79.69</td>\n",
              "      <td>0.97</td>\n",
              "      <td>16.32</td>\n",
              "      <td>15.43</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>6.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2010-01-03 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.73</td>\n",
              "      <td>7.375</td>\n",
              "      <td>1.3250000000000002</td>\n",
              "      <td>45.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4945</td>\n",
              "      <td>0.16749999999999998</td>\n",
              "      <td>0.41550000000000004</td>\n",
              "      <td>...</td>\n",
              "      <td>9.05</td>\n",
              "      <td>0.1205</td>\n",
              "      <td>3.4</td>\n",
              "      <td>75.28</td>\n",
              "      <td>0.91</td>\n",
              "      <td>16.245</td>\n",
              "      <td>15.298</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2010-01-04 00:00:00</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.88</td>\n",
              "      <td>4.86</td>\n",
              "      <td>1.61</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0.467</td>\n",
              "      <td>0.278</td>\n",
              "      <td>0.491</td>\n",
              "      <td>...</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.172</td>\n",
              "      <td>4.3</td>\n",
              "      <td>105.11</td>\n",
              "      <td>1.44</td>\n",
              "      <td>17.542</td>\n",
              "      <td>15.645</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2010-01-05 00:00:00</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.7</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.55</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493</td>\n",
              "      <td>0.205</td>\n",
              "      <td>0.401</td>\n",
              "      <td>...</td>\n",
              "      <td>13.6</td>\n",
              "      <td>0.163</td>\n",
              "      <td>4.4</td>\n",
              "      <td>89.96</td>\n",
              "      <td>1.18</td>\n",
              "      <td>16.026</td>\n",
              "      <td>14.971</td>\n",
              "      <td>10.4</td>\n",
              "      <td>21.26</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2010-12-27 00:00:00</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.94</td>\n",
              "      <td>7.18</td>\n",
              "      <td>1.15</td>\n",
              "      <td>74</td>\n",
              "      <td>1</td>\n",
              "      <td>2.701</td>\n",
              "      <td>0.374</td>\n",
              "      <td>0.592</td>\n",
              "      <td>...</td>\n",
              "      <td>8.1</td>\n",
              "      <td>0.186</td>\n",
              "      <td>5</td>\n",
              "      <td>50.78</td>\n",
              "      <td>0.59</td>\n",
              "      <td>14.794</td>\n",
              "      <td>13.233</td>\n",
              "      <td>27.22</td>\n",
              "      <td>12.94</td>\n",
              "      <td>9.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2010-12-28 00:00:00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>6.19</td>\n",
              "      <td>7.27</td>\n",
              "      <td>1.37</td>\n",
              "      <td>71</td>\n",
              "      <td>0</td>\n",
              "      <td>1.774</td>\n",
              "      <td>0.294</td>\n",
              "      <td>0.276</td>\n",
              "      <td>...</td>\n",
              "      <td>8.7</td>\n",
              "      <td>0.173</td>\n",
              "      <td>5.1</td>\n",
              "      <td>61.74</td>\n",
              "      <td>0.68</td>\n",
              "      <td>14.345</td>\n",
              "      <td>13.684</td>\n",
              "      <td>23.97</td>\n",
              "      <td>12.37</td>\n",
              "      <td>16.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2010-12-29 00:00:00</td>\n",
              "      <td>6.07</td>\n",
              "      <td>6.02</td>\n",
              "      <td>6.55</td>\n",
              "      <td>1.58</td>\n",
              "      <td>71</td>\n",
              "      <td>2</td>\n",
              "      <td>2.357</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.52</td>\n",
              "      <td>...</td>\n",
              "      <td>7.9</td>\n",
              "      <td>0.17</td>\n",
              "      <td>4.6</td>\n",
              "      <td>69.92</td>\n",
              "      <td>0.84</td>\n",
              "      <td>14.335</td>\n",
              "      <td>13.14</td>\n",
              "      <td>27.7</td>\n",
              "      <td>13.55</td>\n",
              "      <td>13.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2010-12-30 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.96</td>\n",
              "      <td>7.2</td>\n",
              "      <td>1.57</td>\n",
              "      <td>74</td>\n",
              "      <td>0</td>\n",
              "      <td>1.587</td>\n",
              "      <td>0.321</td>\n",
              "      <td>0.268</td>\n",
              "      <td>...</td>\n",
              "      <td>8.2</td>\n",
              "      <td>0.174</td>\n",
              "      <td>4.7</td>\n",
              "      <td>85.62</td>\n",
              "      <td>1.2</td>\n",
              "      <td>15.128</td>\n",
              "      <td>14.022</td>\n",
              "      <td>27.03</td>\n",
              "      <td>13.28</td>\n",
              "      <td>13.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2010-12-31 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>6.3</td>\n",
              "      <td>7.15</td>\n",
              "      <td>1.66</td>\n",
              "      <td>69</td>\n",
              "      <td>0</td>\n",
              "      <td>1.768</td>\n",
              "      <td>0.295</td>\n",
              "      <td>0.286</td>\n",
              "      <td>...</td>\n",
              "      <td>9.1</td>\n",
              "      <td>0.143</td>\n",
              "      <td>4.4</td>\n",
              "      <td>85.16</td>\n",
              "      <td>1.22</td>\n",
              "      <td>14.15</td>\n",
              "      <td>13.417</td>\n",
              "      <td>25.66</td>\n",
              "      <td>14.63</td>\n",
              "      <td>12.67</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cd71550-47ff-4ff8-9f2f-ee209867b8d8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8cd71550-47ff-4ff8-9f2f-ee209867b8d8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8cd71550-47ff-4ff8-9f2f-ee209867b8d8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2010.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aUyN4vFhdD31",
        "outputId": "df30add4-4325-463d-dce9-033a3beaf2d0"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2011**"
      ],
      "metadata": {
        "id": "G485n4oKdh1B"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_11 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2011')\n",
        "data_11.to_csv('2011.csv', index=False)"
      ],
      "metadata": {
        "id": "lJhbpyVKdh1C"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011 = pd.read_csv('/content/2011.csv')"
      ],
      "metadata": {
        "id": "zz82m-1adh1C"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "511af30f-3f5d-4dfa-a33b-1f8fb6aeb790",
        "id": "mAMT9_XKdh1D"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO  \\\n",
              "0                                                NaN                                                              \n",
              "1                                               Date                                                              \n",
              "2                                2011-01-01 00:00:00                                                              \n",
              "3                                2011-01-02 00:00:00                                                              \n",
              "4                                2011-01-03 00:00:00                                                              \n",
              "\n",
              "  Unnamed: 1 Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5   Unnamed: 6  \\\n",
              "0         pH        NaN        NaN        NaN        NaN          NaN   \n",
              "1        Raw        PTC   PTC (OL)        SWC     Filter  Finish (OL)   \n",
              "2       6.79        6.4        NaN        NaN        NaN          NaN   \n",
              "3      6.865       6.62        NaN        NaN        NaN          NaN   \n",
              "4       6.94       6.84        NaN        NaN        NaN          NaN   \n",
              "\n",
              "  Unnamed: 7 Unnamed: 8 Unnamed: 9  ... Unnamed: 48 Unnamed: 49 Unnamed: 50  \\\n",
              "0        NaN   Chlorine        NaN  ...         NaN         NaN         NaN   \n",
              "1     Finish       Free      Total  ...      Finish      Filter    Backwash   \n",
              "2       7.73       1.65        NaN  ...       12.63         NaN         NaN   \n",
              "3       7.43      1.415        NaN  ...      12.896         NaN         NaN   \n",
              "4       7.13       1.18        NaN  ...      13.162         NaN         NaN   \n",
              "\n",
              "        Unnamed: 51 Unnamed: 52 Unnamed: 53       Unnamed: 54  \\\n",
              "0  Flows from plant         NaN         NaN  Chemical Dosages   \n",
              "1          Bishop's     Botwood         GFW          Chlorine   \n",
              "2               NaN         NaN         NaN               NaN   \n",
              "3               NaN         NaN         NaN               NaN   \n",
              "4               NaN         NaN         NaN               NaN   \n",
              "\n",
              "          Unnamed: 55 Unnamed: 56 Unnamed: 57  \n",
              "0                 NaN         NaN         NaN  \n",
              "1                Alum   Limestone        Lime  \n",
              "2               26.61       13.77       16.09  \n",
              "3  23.865000000000002      14.215          14  \n",
              "4               21.12       13.66       11.91  \n",
              "\n",
              "[5 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-281bddd6-083c-4dd9-b8de-30c3bf767983\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 48</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Free</td>\n",
              "      <td>Total</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Limestone</td>\n",
              "      <td>Lime</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2011-01-01 00:00:00</td>\n",
              "      <td>6.79</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.73</td>\n",
              "      <td>1.65</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.61</td>\n",
              "      <td>13.77</td>\n",
              "      <td>16.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2011-01-02 00:00:00</td>\n",
              "      <td>6.865</td>\n",
              "      <td>6.62</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.415</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.896</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23.865000000000002</td>\n",
              "      <td>14.215</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2011-01-03 00:00:00</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.84</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.18</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.162</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>21.12</td>\n",
              "      <td>13.66</td>\n",
              "      <td>11.91</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-281bddd6-083c-4dd9-b8de-30c3bf767983')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-281bddd6-083c-4dd9-b8de-30c3bf767983 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-281bddd6-083c-4dd9-b8de-30c3bf767983');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011 = data_2011.drop(data_2011.index[0])"
      ],
      "metadata": {
        "id": "yBQktfyWdh1D"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011.columns = pd.MultiIndex.from_tuples([('Date',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used', ' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "uJRhSkYrdh1D"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011 = data_2011.drop(data_2011.index[0])"
      ],
      "metadata": {
        "id": "WvcT1W-rdh1E"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ae7c0600-9326-4dbf-d336-c257531c1d65",
        "id": "Iaz8ztrgdh1E"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date     pH                                                \\\n",
              "                            Raw   PTC PTC (OL)  SWC Filter Finish (OL) Finish   \n",
              "2    2011-01-01 00:00:00   6.79   6.4      NaN  NaN    NaN         NaN   7.73   \n",
              "3    2011-01-02 00:00:00  6.865  6.62      NaN  NaN    NaN         NaN   7.43   \n",
              "4    2011-01-03 00:00:00   6.94  6.84      NaN  NaN    NaN         NaN   7.13   \n",
              "5    2011-01-04 00:00:00   6.19  6.92      NaN  NaN    NaN         NaN   7.29   \n",
              "6    2011-01-05 00:00:00   6.14   6.4      NaN  NaN    NaN         NaN   7.17   \n",
              "..                   ...    ...   ...      ...  ...    ...         ...    ...   \n",
              "362  2011-12-27 00:00:00   7.14   6.3      NaN  NaN    NaN         NaN   6.79   \n",
              "363  2011-12-28 00:00:00   6.74  6.37      NaN  NaN    NaN         NaN    7.3   \n",
              "364  2011-12-29 00:00:00   6.59  6.22      NaN  NaN    NaN         NaN   7.31   \n",
              "365  2011-12-30 00:00:00   6.35   6.4      NaN  NaN    NaN         NaN   7.35   \n",
              "366  2011-12-31 00:00:00   6.08  6.25      NaN  NaN    NaN         NaN   6.97   \n",
              "\n",
              "    Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "        Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "2       1.65   NaN  ...              12.63    NaN      NaN              NaN   \n",
              "3      1.415   NaN  ...             12.896    NaN      NaN              NaN   \n",
              "4       1.18   NaN  ...             13.162    NaN      NaN              NaN   \n",
              "5       1.26   NaN  ...             14.132    NaN      NaN              NaN   \n",
              "6        1.3   NaN  ...             13.498    NaN      NaN              NaN   \n",
              "..       ...   ...  ...                ...    ...      ...              ...   \n",
              "362     1.81   NaN  ...             11.639    NaN      NaN              NaN   \n",
              "363     1.72   NaN  ...             11.057    NaN      NaN              NaN   \n",
              "364      1.7   NaN  ...             11.343    NaN      NaN              NaN   \n",
              "365     1.81   NaN  ...             12.578    NaN      NaN              NaN   \n",
              "366     1.82   NaN  ...               11.9    NaN      NaN              NaN   \n",
              "\n",
              "                 Chemical Dosages                                          \\\n",
              "    Botwood  GFW         Chlorine                Alum           Limestone   \n",
              "2       NaN  NaN              NaN               26.61               13.77   \n",
              "3       NaN  NaN              NaN  23.865000000000002              14.215   \n",
              "4       NaN  NaN              NaN               21.12               13.66   \n",
              "5       NaN  NaN              NaN               27.63               13.88   \n",
              "6       NaN  NaN              NaN               22.95               14.55   \n",
              "..      ...  ...              ...                 ...                 ...   \n",
              "362     NaN  NaN              NaN               26.76  13.379999999999999   \n",
              "363     NaN  NaN              NaN               28.33               13.35   \n",
              "364     NaN  NaN              NaN               27.23               10.77   \n",
              "365     NaN  NaN              NaN               35.22               12.21   \n",
              "366     NaN  NaN              NaN               27.78               11.12   \n",
              "\n",
              "            \n",
              "      Lime  \n",
              "2    16.09  \n",
              "3       14  \n",
              "4    11.91  \n",
              "5     9.26  \n",
              "6    12.64  \n",
              "..     ...  \n",
              "362   11.6  \n",
              "363  11.42  \n",
              "364  11.66  \n",
              "365  10.68  \n",
              "366  10.95  \n",
              "\n",
              "[365 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6b79155e-61a2-4e65-9cbe-7cfd77874ed5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2011-01-01 00:00:00</td>\n",
              "      <td>6.79</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.73</td>\n",
              "      <td>1.65</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.61</td>\n",
              "      <td>13.77</td>\n",
              "      <td>16.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2011-01-02 00:00:00</td>\n",
              "      <td>6.865</td>\n",
              "      <td>6.62</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.415</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.896</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23.865000000000002</td>\n",
              "      <td>14.215</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2011-01-03 00:00:00</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.84</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.18</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.162</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>21.12</td>\n",
              "      <td>13.66</td>\n",
              "      <td>11.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2011-01-04 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>6.92</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.26</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.132</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.63</td>\n",
              "      <td>13.88</td>\n",
              "      <td>9.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2011-01-05 00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.17</td>\n",
              "      <td>1.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.498</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>22.95</td>\n",
              "      <td>14.55</td>\n",
              "      <td>12.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2011-12-27 00:00:00</td>\n",
              "      <td>7.14</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.79</td>\n",
              "      <td>1.81</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.639</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.76</td>\n",
              "      <td>13.379999999999999</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2011-12-28 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1.72</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.057</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.33</td>\n",
              "      <td>13.35</td>\n",
              "      <td>11.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2011-12-29 00:00:00</td>\n",
              "      <td>6.59</td>\n",
              "      <td>6.22</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.31</td>\n",
              "      <td>1.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.23</td>\n",
              "      <td>10.77</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2011-12-30 00:00:00</td>\n",
              "      <td>6.35</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.81</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.578</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35.22</td>\n",
              "      <td>12.21</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2011-12-31 00:00:00</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.25</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.97</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.78</td>\n",
              "      <td>11.12</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b79155e-61a2-4e65-9cbe-7cfd77874ed5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6b79155e-61a2-4e65-9cbe-7cfd77874ed5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6b79155e-61a2-4e65-9cbe-7cfd77874ed5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011 = data_2011.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "Oh2rSn3Udh1F"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "5e926476-6c71-4772-8269-580cca4d6442",
        "id": "kSsTzYpOdh1F"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date     pH                                                \\\n",
              "                            Raw   PTC PTC (OL)  SWC Filter Finish (OL) Finish   \n",
              "0    2011-01-01 00:00:00   6.79   6.4      NaN  NaN    NaN         NaN   7.73   \n",
              "1    2011-01-02 00:00:00  6.865  6.62      NaN  NaN    NaN         NaN   7.43   \n",
              "2    2011-01-03 00:00:00   6.94  6.84      NaN  NaN    NaN         NaN   7.13   \n",
              "3    2011-01-04 00:00:00   6.19  6.92      NaN  NaN    NaN         NaN   7.29   \n",
              "4    2011-01-05 00:00:00   6.14   6.4      NaN  NaN    NaN         NaN   7.17   \n",
              "..                   ...    ...   ...      ...  ...    ...         ...    ...   \n",
              "360  2011-12-27 00:00:00   7.14   6.3      NaN  NaN    NaN         NaN   6.79   \n",
              "361  2011-12-28 00:00:00   6.74  6.37      NaN  NaN    NaN         NaN    7.3   \n",
              "362  2011-12-29 00:00:00   6.59  6.22      NaN  NaN    NaN         NaN   7.31   \n",
              "363  2011-12-30 00:00:00   6.35   6.4      NaN  NaN    NaN         NaN   7.35   \n",
              "364  2011-12-31 00:00:00   6.08  6.25      NaN  NaN    NaN         NaN   6.97   \n",
              "\n",
              "    Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "        Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "0       1.65   NaN  ...              12.63    NaN      NaN              NaN   \n",
              "1      1.415   NaN  ...             12.896    NaN      NaN              NaN   \n",
              "2       1.18   NaN  ...             13.162    NaN      NaN              NaN   \n",
              "3       1.26   NaN  ...             14.132    NaN      NaN              NaN   \n",
              "4        1.3   NaN  ...             13.498    NaN      NaN              NaN   \n",
              "..       ...   ...  ...                ...    ...      ...              ...   \n",
              "360     1.81   NaN  ...             11.639    NaN      NaN              NaN   \n",
              "361     1.72   NaN  ...             11.057    NaN      NaN              NaN   \n",
              "362      1.7   NaN  ...             11.343    NaN      NaN              NaN   \n",
              "363     1.81   NaN  ...             12.578    NaN      NaN              NaN   \n",
              "364     1.82   NaN  ...               11.9    NaN      NaN              NaN   \n",
              "\n",
              "                 Chemical Dosages                                          \\\n",
              "    Botwood  GFW         Chlorine                Alum           Limestone   \n",
              "0       NaN  NaN              NaN               26.61               13.77   \n",
              "1       NaN  NaN              NaN  23.865000000000002              14.215   \n",
              "2       NaN  NaN              NaN               21.12               13.66   \n",
              "3       NaN  NaN              NaN               27.63               13.88   \n",
              "4       NaN  NaN              NaN               22.95               14.55   \n",
              "..      ...  ...              ...                 ...                 ...   \n",
              "360     NaN  NaN              NaN               26.76  13.379999999999999   \n",
              "361     NaN  NaN              NaN               28.33               13.35   \n",
              "362     NaN  NaN              NaN               27.23               10.77   \n",
              "363     NaN  NaN              NaN               35.22               12.21   \n",
              "364     NaN  NaN              NaN               27.78               11.12   \n",
              "\n",
              "            \n",
              "      Lime  \n",
              "0    16.09  \n",
              "1       14  \n",
              "2    11.91  \n",
              "3     9.26  \n",
              "4    12.64  \n",
              "..     ...  \n",
              "360   11.6  \n",
              "361  11.42  \n",
              "362  11.66  \n",
              "363  10.68  \n",
              "364  10.95  \n",
              "\n",
              "[365 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-866a6390-7ca5-4b72-a7f6-ba403dbdca4f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2011-01-01 00:00:00</td>\n",
              "      <td>6.79</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.73</td>\n",
              "      <td>1.65</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.61</td>\n",
              "      <td>13.77</td>\n",
              "      <td>16.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2011-01-02 00:00:00</td>\n",
              "      <td>6.865</td>\n",
              "      <td>6.62</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.415</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.896</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23.865000000000002</td>\n",
              "      <td>14.215</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2011-01-03 00:00:00</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.84</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.18</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.162</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>21.12</td>\n",
              "      <td>13.66</td>\n",
              "      <td>11.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2011-01-04 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>6.92</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.26</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.132</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.63</td>\n",
              "      <td>13.88</td>\n",
              "      <td>9.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2011-01-05 00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.17</td>\n",
              "      <td>1.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.498</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>22.95</td>\n",
              "      <td>14.55</td>\n",
              "      <td>12.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2011-12-27 00:00:00</td>\n",
              "      <td>7.14</td>\n",
              "      <td>6.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.79</td>\n",
              "      <td>1.81</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.639</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.76</td>\n",
              "      <td>13.379999999999999</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2011-12-28 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1.72</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.057</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.33</td>\n",
              "      <td>13.35</td>\n",
              "      <td>11.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2011-12-29 00:00:00</td>\n",
              "      <td>6.59</td>\n",
              "      <td>6.22</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.31</td>\n",
              "      <td>1.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.23</td>\n",
              "      <td>10.77</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2011-12-30 00:00:00</td>\n",
              "      <td>6.35</td>\n",
              "      <td>6.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.81</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.578</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35.22</td>\n",
              "      <td>12.21</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2011-12-31 00:00:00</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.25</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.97</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.78</td>\n",
              "      <td>11.12</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-866a6390-7ca5-4b72-a7f6-ba403dbdca4f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-866a6390-7ca5-4b72-a7f6-ba403dbdca4f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-866a6390-7ca5-4b72-a7f6-ba403dbdca4f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011 = data_2011.dropna(axis=1, how='all')"
      ],
      "metadata": {
        "id": "x_9OYSW4dh1F"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "93a81763-a4d1-4a9f-f5e8-44f3c7d94d59",
        "id": "O5R9MgIddh1F"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date     pH              Chlorine Colour           \\\n",
              "                            Raw   PTC Finish     Free  Raw T Finish T   \n",
              "0    2011-01-01 00:00:00   6.79   6.4   7.73     1.65     61        0   \n",
              "1    2011-01-02 00:00:00  6.865  6.62   7.43    1.415     55        1   \n",
              "2    2011-01-03 00:00:00   6.94  6.84   7.13     1.18     49        2   \n",
              "3    2011-01-04 00:00:00   6.19  6.92   7.29     1.26     36        0   \n",
              "4    2011-01-05 00:00:00   6.14   6.4   7.17      1.3     47        5   \n",
              "..                   ...    ...   ...    ...      ...    ...      ...   \n",
              "360  2011-12-27 00:00:00   7.14   6.3   6.79     1.81     65        0   \n",
              "361  2011-12-28 00:00:00   6.74  6.37    7.3     1.72     60        0   \n",
              "362  2011-12-29 00:00:00   6.59  6.22   7.31      1.7     59        0   \n",
              "363  2011-12-30 00:00:00   6.35   6.4   7.35     1.81     58        0   \n",
              "364  2011-12-31 00:00:00   6.08  6.25   6.97     1.82     59        0   \n",
              "\n",
              "              Turbidity                              ...         Alkalinity  \\\n",
              "                    Raw               Filter Finish  ...             Finish   \n",
              "0                 1.486                0.194  0.277  ...                9.9   \n",
              "1                  1.56  0.38249999999999995  0.392  ...  9.850000000000001   \n",
              "2                 1.634                0.571  0.507  ...                9.8   \n",
              "3                 1.624                0.284  0.386  ...                7.7   \n",
              "4                 1.647  0.27649999999999997  0.437  ...                9.6   \n",
              "..                  ...                  ...    ...  ...                ...   \n",
              "360  0.6985303001403809                0.189  0.328  ...                6.3   \n",
              "361  0.6983962268829346                0.092  0.309  ...                6.9   \n",
              "362  0.6984632635116577                0.117  0.467  ...                6.1   \n",
              "363  0.6984297451972961                0.326  0.304  ...                6.3   \n",
              "364  0.6984465043544769                0.197  0.308  ...                6.1   \n",
              "\n",
              "         Aluminum Temperature Cl Used Cl Demand  Flows within plant          \\\n",
              "    Finish (Free)      Finish                                   Raw  Finish   \n",
              "0           0.077         4.4   80.59      1.25               14.06   12.63   \n",
              "1          0.0925        4.15   70.36      1.07  14.381499999999999  12.896   \n",
              "2           0.108         3.9   60.13      0.89              14.703  13.162   \n",
              "3           0.173         4.4   69.92      0.99              14.951  14.132   \n",
              "4           0.187         4.1    94.9      1.89              15.412  13.498   \n",
              "..            ...         ...     ...       ...                 ...     ...   \n",
              "360         0.036         3.7   65.03      0.73              13.066  11.639   \n",
              "361         0.048         3.7   55.26      0.55              12.492  11.057   \n",
              "362         0.102         3.8   60.13      0.71              13.216  11.343   \n",
              "363         0.098         3.4   60.13      0.36              13.473  12.578   \n",
              "364         0.087         3.3   58.38      0.41               13.25    11.9   \n",
              "\n",
              "       Chemical Dosages                             \n",
              "                   Alum           Limestone   Lime  \n",
              "0                 26.61               13.77  16.09  \n",
              "1    23.865000000000002              14.215     14  \n",
              "2                 21.12               13.66  11.91  \n",
              "3                 27.63               13.88   9.26  \n",
              "4                 22.95               14.55  12.64  \n",
              "..                  ...                 ...    ...  \n",
              "360               26.76  13.379999999999999   11.6  \n",
              "361               28.33               13.35  11.42  \n",
              "362               27.23               10.77  11.66  \n",
              "363               35.22               12.21  10.68  \n",
              "364               27.78               11.12  10.95  \n",
              "\n",
              "[365 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7229c4cb-2913-413e-a907-b2bab970cf67\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"3\" halign=\"left\">pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Colour</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Turbidity</th>\n",
              "      <th>...</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Aluminum</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Cl Used</th>\n",
              "      <th>Cl Demand</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Finish T</th>\n",
              "      <th>Raw</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish (Free)</th>\n",
              "      <th>Finish</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2011-01-01 00:00:00</td>\n",
              "      <td>6.79</td>\n",
              "      <td>6.4</td>\n",
              "      <td>7.73</td>\n",
              "      <td>1.65</td>\n",
              "      <td>61</td>\n",
              "      <td>0</td>\n",
              "      <td>1.486</td>\n",
              "      <td>0.194</td>\n",
              "      <td>0.277</td>\n",
              "      <td>...</td>\n",
              "      <td>9.9</td>\n",
              "      <td>0.077</td>\n",
              "      <td>4.4</td>\n",
              "      <td>80.59</td>\n",
              "      <td>1.25</td>\n",
              "      <td>14.06</td>\n",
              "      <td>12.63</td>\n",
              "      <td>26.61</td>\n",
              "      <td>13.77</td>\n",
              "      <td>16.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2011-01-02 00:00:00</td>\n",
              "      <td>6.865</td>\n",
              "      <td>6.62</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.415</td>\n",
              "      <td>55</td>\n",
              "      <td>1</td>\n",
              "      <td>1.56</td>\n",
              "      <td>0.38249999999999995</td>\n",
              "      <td>0.392</td>\n",
              "      <td>...</td>\n",
              "      <td>9.850000000000001</td>\n",
              "      <td>0.0925</td>\n",
              "      <td>4.15</td>\n",
              "      <td>70.36</td>\n",
              "      <td>1.07</td>\n",
              "      <td>14.381499999999999</td>\n",
              "      <td>12.896</td>\n",
              "      <td>23.865000000000002</td>\n",
              "      <td>14.215</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2011-01-03 00:00:00</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.84</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.18</td>\n",
              "      <td>49</td>\n",
              "      <td>2</td>\n",
              "      <td>1.634</td>\n",
              "      <td>0.571</td>\n",
              "      <td>0.507</td>\n",
              "      <td>...</td>\n",
              "      <td>9.8</td>\n",
              "      <td>0.108</td>\n",
              "      <td>3.9</td>\n",
              "      <td>60.13</td>\n",
              "      <td>0.89</td>\n",
              "      <td>14.703</td>\n",
              "      <td>13.162</td>\n",
              "      <td>21.12</td>\n",
              "      <td>13.66</td>\n",
              "      <td>11.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2011-01-04 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>6.92</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.26</td>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>1.624</td>\n",
              "      <td>0.284</td>\n",
              "      <td>0.386</td>\n",
              "      <td>...</td>\n",
              "      <td>7.7</td>\n",
              "      <td>0.173</td>\n",
              "      <td>4.4</td>\n",
              "      <td>69.92</td>\n",
              "      <td>0.99</td>\n",
              "      <td>14.951</td>\n",
              "      <td>14.132</td>\n",
              "      <td>27.63</td>\n",
              "      <td>13.88</td>\n",
              "      <td>9.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2011-01-05 00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>6.4</td>\n",
              "      <td>7.17</td>\n",
              "      <td>1.3</td>\n",
              "      <td>47</td>\n",
              "      <td>5</td>\n",
              "      <td>1.647</td>\n",
              "      <td>0.27649999999999997</td>\n",
              "      <td>0.437</td>\n",
              "      <td>...</td>\n",
              "      <td>9.6</td>\n",
              "      <td>0.187</td>\n",
              "      <td>4.1</td>\n",
              "      <td>94.9</td>\n",
              "      <td>1.89</td>\n",
              "      <td>15.412</td>\n",
              "      <td>13.498</td>\n",
              "      <td>22.95</td>\n",
              "      <td>14.55</td>\n",
              "      <td>12.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2011-12-27 00:00:00</td>\n",
              "      <td>7.14</td>\n",
              "      <td>6.3</td>\n",
              "      <td>6.79</td>\n",
              "      <td>1.81</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6985303001403809</td>\n",
              "      <td>0.189</td>\n",
              "      <td>0.328</td>\n",
              "      <td>...</td>\n",
              "      <td>6.3</td>\n",
              "      <td>0.036</td>\n",
              "      <td>3.7</td>\n",
              "      <td>65.03</td>\n",
              "      <td>0.73</td>\n",
              "      <td>13.066</td>\n",
              "      <td>11.639</td>\n",
              "      <td>26.76</td>\n",
              "      <td>13.379999999999999</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2011-12-28 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.37</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1.72</td>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6983962268829346</td>\n",
              "      <td>0.092</td>\n",
              "      <td>0.309</td>\n",
              "      <td>...</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.048</td>\n",
              "      <td>3.7</td>\n",
              "      <td>55.26</td>\n",
              "      <td>0.55</td>\n",
              "      <td>12.492</td>\n",
              "      <td>11.057</td>\n",
              "      <td>28.33</td>\n",
              "      <td>13.35</td>\n",
              "      <td>11.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2011-12-29 00:00:00</td>\n",
              "      <td>6.59</td>\n",
              "      <td>6.22</td>\n",
              "      <td>7.31</td>\n",
              "      <td>1.7</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6984632635116577</td>\n",
              "      <td>0.117</td>\n",
              "      <td>0.467</td>\n",
              "      <td>...</td>\n",
              "      <td>6.1</td>\n",
              "      <td>0.102</td>\n",
              "      <td>3.8</td>\n",
              "      <td>60.13</td>\n",
              "      <td>0.71</td>\n",
              "      <td>13.216</td>\n",
              "      <td>11.343</td>\n",
              "      <td>27.23</td>\n",
              "      <td>10.77</td>\n",
              "      <td>11.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2011-12-30 00:00:00</td>\n",
              "      <td>6.35</td>\n",
              "      <td>6.4</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.81</td>\n",
              "      <td>58</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6984297451972961</td>\n",
              "      <td>0.326</td>\n",
              "      <td>0.304</td>\n",
              "      <td>...</td>\n",
              "      <td>6.3</td>\n",
              "      <td>0.098</td>\n",
              "      <td>3.4</td>\n",
              "      <td>60.13</td>\n",
              "      <td>0.36</td>\n",
              "      <td>13.473</td>\n",
              "      <td>12.578</td>\n",
              "      <td>35.22</td>\n",
              "      <td>12.21</td>\n",
              "      <td>10.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2011-12-31 00:00:00</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.25</td>\n",
              "      <td>6.97</td>\n",
              "      <td>1.82</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6984465043544769</td>\n",
              "      <td>0.197</td>\n",
              "      <td>0.308</td>\n",
              "      <td>...</td>\n",
              "      <td>6.1</td>\n",
              "      <td>0.087</td>\n",
              "      <td>3.3</td>\n",
              "      <td>58.38</td>\n",
              "      <td>0.41</td>\n",
              "      <td>13.25</td>\n",
              "      <td>11.9</td>\n",
              "      <td>27.78</td>\n",
              "      <td>11.12</td>\n",
              "      <td>10.95</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7229c4cb-2913-413e-a907-b2bab970cf67')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7229c4cb-2913-413e-a907-b2bab970cf67 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7229c4cb-2913-413e-a907-b2bab970cf67');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2011.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "744363d2-b18c-4945-92c2-9306031d3666",
        "id": "egcAlHsKdh1G"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2012**"
      ],
      "metadata": {
        "id": "Fw1AGjzve75g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_12 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2012')\n",
        "data_12.to_csv('2012.csv', index=False)"
      ],
      "metadata": {
        "id": "F3mt6aN7e75h"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012 = pd.read_csv('/content/2012.csv')"
      ],
      "metadata": {
        "id": "YY5gCU7fe75i"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "e9c5cc50-5b90-47a8-a854-495691642609",
        "id": "nFH1qs2Qe75i"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO  \\\n",
              "0                                                NaN                                                              \n",
              "1                                               Date                                                              \n",
              "2                                2012-01-01 00:00:00                                                              \n",
              "3                                2012-01-02 00:00:00                                                              \n",
              "4                                2012-01-03 00:00:00                                                              \n",
              "\n",
              "  Unnamed: 1 Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5   Unnamed: 6  \\\n",
              "0         pH        NaN        NaN        NaN        NaN          NaN   \n",
              "1        Raw        PTC   PTC (OL)        SWC     Filter  Finish (OL)   \n",
              "2       6.58        6.1        NaN        NaN        NaN          NaN   \n",
              "3       6.62       6.15        NaN        NaN        NaN          NaN   \n",
              "4       6.54       6.05        NaN        NaN        NaN          NaN   \n",
              "\n",
              "  Unnamed: 7 Unnamed: 8 Unnamed: 9  ... Unnamed: 48 Unnamed: 49 Unnamed: 50  \\\n",
              "0        NaN   Chlorine        NaN  ...         NaN         NaN         NaN   \n",
              "1     Finish       Free      Total  ...      Finish      Filter    Backwash   \n",
              "2      7.105       1.82        NaN  ...       11.49         NaN         NaN   \n",
              "3       7.09       1.86        NaN  ...      12.769         NaN         NaN   \n",
              "4       7.12       1.87        NaN  ...      12.648         NaN         NaN   \n",
              "\n",
              "        Unnamed: 51 Unnamed: 52 Unnamed: 53       Unnamed: 54 Unnamed: 55  \\\n",
              "0  Flows from plant         NaN         NaN  Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW          Chlorine        Alum   \n",
              "2               NaN         NaN         NaN               NaN       27.52   \n",
              "3               NaN         NaN         NaN               NaN       26.11   \n",
              "4               NaN         NaN         NaN               NaN       28.93   \n",
              "\n",
              "  Unnamed: 56         Unnamed: 57  \n",
              "0         NaN                 NaN  \n",
              "1   Limestone                Lime  \n",
              "2       12.28  11.905000000000001  \n",
              "3       11.27                12.9  \n",
              "4       13.29               10.91  \n",
              "\n",
              "[5 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-92f85e7a-ba51-44fe-8541-c4b1d774725b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 48</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Free</td>\n",
              "      <td>Total</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Limestone</td>\n",
              "      <td>Lime</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2012-01-01 00:00:00</td>\n",
              "      <td>6.58</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.105</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.52</td>\n",
              "      <td>12.28</td>\n",
              "      <td>11.905000000000001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012-01-02 00:00:00</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.09</td>\n",
              "      <td>1.86</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.769</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.11</td>\n",
              "      <td>11.27</td>\n",
              "      <td>12.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2012-01-03 00:00:00</td>\n",
              "      <td>6.54</td>\n",
              "      <td>6.05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.87</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.648</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.93</td>\n",
              "      <td>13.29</td>\n",
              "      <td>10.91</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92f85e7a-ba51-44fe-8541-c4b1d774725b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-92f85e7a-ba51-44fe-8541-c4b1d774725b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-92f85e7a-ba51-44fe-8541-c4b1d774725b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012 = data_2012.drop(data_2012.index[0])"
      ],
      "metadata": {
        "id": "j8ZFYiwZe75j"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012.columns = pd.MultiIndex.from_tuples([('Date',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used', ' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "syC_nvtle75k"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012 = data_2012.drop(data_2012.index[0])"
      ],
      "metadata": {
        "id": "GFs8SB0Ke75l"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "6e027ee1-b639-404b-9585-57bb27ff1bc2",
        "id": "49HSfK10e75l"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                \\\n",
              "                           Raw   PTC PTC (OL)  SWC Filter Finish (OL) Finish   \n",
              "2    2012-01-01 00:00:00  6.58   6.1      NaN  NaN    NaN         NaN  7.105   \n",
              "3    2012-01-02 00:00:00  6.62  6.15      NaN  NaN    NaN         NaN   7.09   \n",
              "4    2012-01-03 00:00:00  6.54  6.05      NaN  NaN    NaN         NaN   7.12   \n",
              "5    2012-01-04 00:00:00  5.75  5.75      NaN  NaN    NaN         NaN   7.43   \n",
              "6    2012-01-05 00:00:00  6.11  5.91      NaN  NaN    NaN         NaN   7.24   \n",
              "..                   ...   ...   ...      ...  ...    ...         ...    ...   \n",
              "363  2012-12-27 00:00:00  5.34  5.17      NaN  NaN    NaN         NaN    7.5   \n",
              "364  2012-12-28 00:00:00  5.96  5.27      NaN  NaN    NaN         NaN    7.5   \n",
              "365  2012-12-29 00:00:00  6.28  5.14      NaN  NaN    NaN         NaN   7.48   \n",
              "366  2012-12-30 00:00:00  6.12  5.22      NaN  NaN    NaN         NaN   7.49   \n",
              "367  2012-12-31 00:00:00  5.27  5.28      NaN  NaN    NaN         NaN   7.61   \n",
              "\n",
              "    Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "        Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "2       1.82   NaN  ...              11.49    NaN      NaN              NaN   \n",
              "3       1.86   NaN  ...             12.769    NaN      NaN              NaN   \n",
              "4       1.87   NaN  ...             12.648    NaN      NaN              NaN   \n",
              "5       1.87   NaN  ...             12.383    NaN      NaN              NaN   \n",
              "6       1.93   NaN  ...             12.534    NaN      NaN              NaN   \n",
              "..       ...   ...  ...                ...    ...      ...              ...   \n",
              "363     1.89   NaN  ...              13.16    NaN      NaN              NaN   \n",
              "364     1.88   NaN  ...              12.71    NaN      NaN              NaN   \n",
              "365      1.8   NaN  ...              13.11    NaN      NaN              NaN   \n",
              "366     1.99   NaN  ...             13.313    NaN      NaN              NaN   \n",
              "367     2.03   NaN  ...             13.011    NaN      NaN              NaN   \n",
              "\n",
              "                 Chemical Dosages                                       \n",
              "    Botwood  GFW         Chlorine   Alum Limestone                Lime  \n",
              "2       NaN  NaN              NaN  27.52     12.28  11.905000000000001  \n",
              "3       NaN  NaN              NaN  26.11     11.27                12.9  \n",
              "4       NaN  NaN              NaN  28.93     13.29               10.91  \n",
              "5       NaN  NaN              NaN  36.37      1.63               10.89  \n",
              "6       NaN  NaN              NaN  33.51     11.02               14.02  \n",
              "..      ...  ...              ...    ...       ...                 ...  \n",
              "363     NaN  NaN              NaN  34.35       NaN               14.83  \n",
              "364     NaN  NaN              NaN  35.21       NaN               16.53  \n",
              "365     NaN  NaN              NaN  38.02       NaN               15.77  \n",
              "366     NaN  NaN              NaN  38.02       NaN               15.77  \n",
              "367     NaN  NaN              NaN  36.31       NaN               15.58  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b88e032-de04-400d-9200-028bfcbbafbc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2012-01-01 00:00:00</td>\n",
              "      <td>6.58</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.105</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.52</td>\n",
              "      <td>12.28</td>\n",
              "      <td>11.905000000000001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012-01-02 00:00:00</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.09</td>\n",
              "      <td>1.86</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.769</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.11</td>\n",
              "      <td>11.27</td>\n",
              "      <td>12.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2012-01-03 00:00:00</td>\n",
              "      <td>6.54</td>\n",
              "      <td>6.05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.87</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.648</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.93</td>\n",
              "      <td>13.29</td>\n",
              "      <td>10.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2012-01-04 00:00:00</td>\n",
              "      <td>5.75</td>\n",
              "      <td>5.75</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.87</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.383</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>36.37</td>\n",
              "      <td>1.63</td>\n",
              "      <td>10.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2012-01-05 00:00:00</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.91</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.24</td>\n",
              "      <td>1.93</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.534</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.51</td>\n",
              "      <td>11.02</td>\n",
              "      <td>14.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2012-12-27 00:00:00</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.17</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1.89</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.16</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>34.35</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2012-12-28 00:00:00</td>\n",
              "      <td>5.96</td>\n",
              "      <td>5.27</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1.88</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.71</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2012-12-29 00:00:00</td>\n",
              "      <td>6.28</td>\n",
              "      <td>5.14</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.48</td>\n",
              "      <td>1.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>38.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2012-12-30 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.22</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.49</td>\n",
              "      <td>1.99</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.313</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>38.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>2012-12-31 00:00:00</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.61</td>\n",
              "      <td>2.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.011</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>36.31</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.58</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b88e032-de04-400d-9200-028bfcbbafbc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1b88e032-de04-400d-9200-028bfcbbafbc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1b88e032-de04-400d-9200-028bfcbbafbc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012 = data_2012.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "2r-8L3JSe75m"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "7ea047db-0f57-4533-a1f5-ba212716c0f0",
        "id": "p2MXq7iEe75n"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                \\\n",
              "                           Raw   PTC PTC (OL)  SWC Filter Finish (OL) Finish   \n",
              "0    2012-01-01 00:00:00  6.58   6.1      NaN  NaN    NaN         NaN  7.105   \n",
              "1    2012-01-02 00:00:00  6.62  6.15      NaN  NaN    NaN         NaN   7.09   \n",
              "2    2012-01-03 00:00:00  6.54  6.05      NaN  NaN    NaN         NaN   7.12   \n",
              "3    2012-01-04 00:00:00  5.75  5.75      NaN  NaN    NaN         NaN   7.43   \n",
              "4    2012-01-05 00:00:00  6.11  5.91      NaN  NaN    NaN         NaN   7.24   \n",
              "..                   ...   ...   ...      ...  ...    ...         ...    ...   \n",
              "361  2012-12-27 00:00:00  5.34  5.17      NaN  NaN    NaN         NaN    7.5   \n",
              "362  2012-12-28 00:00:00  5.96  5.27      NaN  NaN    NaN         NaN    7.5   \n",
              "363  2012-12-29 00:00:00  6.28  5.14      NaN  NaN    NaN         NaN   7.48   \n",
              "364  2012-12-30 00:00:00  6.12  5.22      NaN  NaN    NaN         NaN   7.49   \n",
              "365  2012-12-31 00:00:00  5.27  5.28      NaN  NaN    NaN         NaN   7.61   \n",
              "\n",
              "    Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "        Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "0       1.82   NaN  ...              11.49    NaN      NaN              NaN   \n",
              "1       1.86   NaN  ...             12.769    NaN      NaN              NaN   \n",
              "2       1.87   NaN  ...             12.648    NaN      NaN              NaN   \n",
              "3       1.87   NaN  ...             12.383    NaN      NaN              NaN   \n",
              "4       1.93   NaN  ...             12.534    NaN      NaN              NaN   \n",
              "..       ...   ...  ...                ...    ...      ...              ...   \n",
              "361     1.89   NaN  ...              13.16    NaN      NaN              NaN   \n",
              "362     1.88   NaN  ...              12.71    NaN      NaN              NaN   \n",
              "363      1.8   NaN  ...              13.11    NaN      NaN              NaN   \n",
              "364     1.99   NaN  ...             13.313    NaN      NaN              NaN   \n",
              "365     2.03   NaN  ...             13.011    NaN      NaN              NaN   \n",
              "\n",
              "                 Chemical Dosages                                       \n",
              "    Botwood  GFW         Chlorine   Alum Limestone                Lime  \n",
              "0       NaN  NaN              NaN  27.52     12.28  11.905000000000001  \n",
              "1       NaN  NaN              NaN  26.11     11.27                12.9  \n",
              "2       NaN  NaN              NaN  28.93     13.29               10.91  \n",
              "3       NaN  NaN              NaN  36.37      1.63               10.89  \n",
              "4       NaN  NaN              NaN  33.51     11.02               14.02  \n",
              "..      ...  ...              ...    ...       ...                 ...  \n",
              "361     NaN  NaN              NaN  34.35       NaN               14.83  \n",
              "362     NaN  NaN              NaN  35.21       NaN               16.53  \n",
              "363     NaN  NaN              NaN  38.02       NaN               15.77  \n",
              "364     NaN  NaN              NaN  38.02       NaN               15.77  \n",
              "365     NaN  NaN              NaN  36.31       NaN               15.58  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5dbe25f9-266a-4828-a4b5-4547d81161be\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2012-01-01 00:00:00</td>\n",
              "      <td>6.58</td>\n",
              "      <td>6.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.105</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.52</td>\n",
              "      <td>12.28</td>\n",
              "      <td>11.905000000000001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2012-01-02 00:00:00</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.09</td>\n",
              "      <td>1.86</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.769</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.11</td>\n",
              "      <td>11.27</td>\n",
              "      <td>12.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2012-01-03 00:00:00</td>\n",
              "      <td>6.54</td>\n",
              "      <td>6.05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.87</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.648</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.93</td>\n",
              "      <td>13.29</td>\n",
              "      <td>10.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012-01-04 00:00:00</td>\n",
              "      <td>5.75</td>\n",
              "      <td>5.75</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.87</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.383</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>36.37</td>\n",
              "      <td>1.63</td>\n",
              "      <td>10.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2012-01-05 00:00:00</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.91</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.24</td>\n",
              "      <td>1.93</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.534</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.51</td>\n",
              "      <td>11.02</td>\n",
              "      <td>14.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2012-12-27 00:00:00</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.17</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1.89</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.16</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>34.35</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2012-12-28 00:00:00</td>\n",
              "      <td>5.96</td>\n",
              "      <td>5.27</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1.88</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.71</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2012-12-29 00:00:00</td>\n",
              "      <td>6.28</td>\n",
              "      <td>5.14</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.48</td>\n",
              "      <td>1.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>38.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2012-12-30 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.22</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.49</td>\n",
              "      <td>1.99</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.313</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>38.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2012-12-31 00:00:00</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.61</td>\n",
              "      <td>2.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.011</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>36.31</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.58</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5dbe25f9-266a-4828-a4b5-4547d81161be')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5dbe25f9-266a-4828-a4b5-4547d81161be button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5dbe25f9-266a-4828-a4b5-4547d81161be');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012 = data_2012.dropna(axis=1, how='all')"
      ],
      "metadata": {
        "id": "iud_iIHle75n"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "95255b8f-1c05-46d7-999d-2a552bcbc0b2",
        "id": "gyfty625e75o"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH              Chlorine Colour           \\\n",
              "                           Raw   PTC Finish     Free  Raw T Finish T   \n",
              "0    2012-01-01 00:00:00  6.58   6.1  7.105     1.82   39.5        0   \n",
              "1    2012-01-02 00:00:00  6.62  6.15   7.09     1.86     55        0   \n",
              "2    2012-01-03 00:00:00  6.54  6.05   7.12     1.87     24        0   \n",
              "3    2012-01-04 00:00:00  5.75  5.75   7.43     1.87     54        1   \n",
              "4    2012-01-05 00:00:00  6.11  5.91   7.24     1.93     53        0   \n",
              "..                   ...   ...   ...    ...      ...    ...      ...   \n",
              "361  2012-12-27 00:00:00  5.34  5.17    7.5     1.89     48        1   \n",
              "362  2012-12-28 00:00:00  5.96  5.27    7.5     1.88     40        0   \n",
              "363  2012-12-29 00:00:00  6.28  5.14   7.48      1.8     44        0   \n",
              "364  2012-12-30 00:00:00  6.12  5.22   7.49     1.99     42        0   \n",
              "365  2012-12-31 00:00:00  5.27  5.28   7.61     2.03     46        0   \n",
              "\n",
              "    Turbidity                  ...         Alkalinity      Aluminum  \\\n",
              "          Raw  Filter  Finish  ...             Finish Finish (Free)   \n",
              "0       1.244   0.162  0.3265  ...  6.300000000000001         0.068   \n",
              "1       1.277   0.129   0.337  ...                6.2          0.08   \n",
              "2       1.211   0.195   0.316  ...                6.4         0.056   \n",
              "3       1.235   0.208   0.267  ...                6.1         0.067   \n",
              "4       1.227   0.196   0.154  ...                6.3         0.086   \n",
              "..        ...     ...     ...  ...                ...           ...   \n",
              "361     0.312   0.099   0.383  ...                7.7         0.038   \n",
              "362     0.315   0.102   0.383  ...                8.1         0.056   \n",
              "363     0.308   0.107   0.373  ...                6.9         0.096   \n",
              "364    0.3115  0.1045   0.378  ...                7.5         0.076   \n",
              "365     0.306   0.097   0.398  ...                7.6         0.047   \n",
              "\n",
              "    Temperature Cl Used Cl Demand Flows within plant         Chemical Dosages  \\\n",
              "         Finish                                  Raw  Finish             Alum   \n",
              "0          3.25   61.25       0.6             12.881   11.49            27.52   \n",
              "1           3.4   69.99      0.63              14.11  12.769            26.11   \n",
              "2           3.1   69.89      0.64             14.023  12.648            28.93   \n",
              "3             3   65.47      0.53             13.722  12.383            36.37   \n",
              "4           3.1   65.09      0.43             13.511  12.534            33.51   \n",
              "..          ...     ...       ...                ...     ...              ...   \n",
              "361         4.7   70.12      0.53               13.9   13.16            34.35   \n",
              "362         4.3   70.51      0.64              13.42   12.71            35.21   \n",
              "363         4.4   59.64      0.34              13.31   13.11            38.02   \n",
              "364        4.35   64.74      0.22             13.551  13.313            38.02   \n",
              "365         4.3   65.11      0.24             14.187  13.011            36.31   \n",
              "\n",
              "                                   \n",
              "    Limestone                Lime  \n",
              "0       12.28  11.905000000000001  \n",
              "1       11.27                12.9  \n",
              "2       13.29               10.91  \n",
              "3        1.63               10.89  \n",
              "4       11.02               14.02  \n",
              "..        ...                 ...  \n",
              "361       NaN               14.83  \n",
              "362       NaN               16.53  \n",
              "363       NaN               15.77  \n",
              "364       NaN               15.77  \n",
              "365       NaN               15.58  \n",
              "\n",
              "[366 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d7ff2a5d-62f2-4b89-a495-c3222153ca7f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"3\" halign=\"left\">pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Colour</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Turbidity</th>\n",
              "      <th>...</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Aluminum</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Cl Used</th>\n",
              "      <th>Cl Demand</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Finish T</th>\n",
              "      <th>Raw</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish (Free)</th>\n",
              "      <th>Finish</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2012-01-01 00:00:00</td>\n",
              "      <td>6.58</td>\n",
              "      <td>6.1</td>\n",
              "      <td>7.105</td>\n",
              "      <td>1.82</td>\n",
              "      <td>39.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1.244</td>\n",
              "      <td>0.162</td>\n",
              "      <td>0.3265</td>\n",
              "      <td>...</td>\n",
              "      <td>6.300000000000001</td>\n",
              "      <td>0.068</td>\n",
              "      <td>3.25</td>\n",
              "      <td>61.25</td>\n",
              "      <td>0.6</td>\n",
              "      <td>12.881</td>\n",
              "      <td>11.49</td>\n",
              "      <td>27.52</td>\n",
              "      <td>12.28</td>\n",
              "      <td>11.905000000000001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2012-01-02 00:00:00</td>\n",
              "      <td>6.62</td>\n",
              "      <td>6.15</td>\n",
              "      <td>7.09</td>\n",
              "      <td>1.86</td>\n",
              "      <td>55</td>\n",
              "      <td>0</td>\n",
              "      <td>1.277</td>\n",
              "      <td>0.129</td>\n",
              "      <td>0.337</td>\n",
              "      <td>...</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0.08</td>\n",
              "      <td>3.4</td>\n",
              "      <td>69.99</td>\n",
              "      <td>0.63</td>\n",
              "      <td>14.11</td>\n",
              "      <td>12.769</td>\n",
              "      <td>26.11</td>\n",
              "      <td>11.27</td>\n",
              "      <td>12.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2012-01-03 00:00:00</td>\n",
              "      <td>6.54</td>\n",
              "      <td>6.05</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.87</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>1.211</td>\n",
              "      <td>0.195</td>\n",
              "      <td>0.316</td>\n",
              "      <td>...</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.056</td>\n",
              "      <td>3.1</td>\n",
              "      <td>69.89</td>\n",
              "      <td>0.64</td>\n",
              "      <td>14.023</td>\n",
              "      <td>12.648</td>\n",
              "      <td>28.93</td>\n",
              "      <td>13.29</td>\n",
              "      <td>10.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012-01-04 00:00:00</td>\n",
              "      <td>5.75</td>\n",
              "      <td>5.75</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.87</td>\n",
              "      <td>54</td>\n",
              "      <td>1</td>\n",
              "      <td>1.235</td>\n",
              "      <td>0.208</td>\n",
              "      <td>0.267</td>\n",
              "      <td>...</td>\n",
              "      <td>6.1</td>\n",
              "      <td>0.067</td>\n",
              "      <td>3</td>\n",
              "      <td>65.47</td>\n",
              "      <td>0.53</td>\n",
              "      <td>13.722</td>\n",
              "      <td>12.383</td>\n",
              "      <td>36.37</td>\n",
              "      <td>1.63</td>\n",
              "      <td>10.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2012-01-05 00:00:00</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.91</td>\n",
              "      <td>7.24</td>\n",
              "      <td>1.93</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>1.227</td>\n",
              "      <td>0.196</td>\n",
              "      <td>0.154</td>\n",
              "      <td>...</td>\n",
              "      <td>6.3</td>\n",
              "      <td>0.086</td>\n",
              "      <td>3.1</td>\n",
              "      <td>65.09</td>\n",
              "      <td>0.43</td>\n",
              "      <td>13.511</td>\n",
              "      <td>12.534</td>\n",
              "      <td>33.51</td>\n",
              "      <td>11.02</td>\n",
              "      <td>14.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2012-12-27 00:00:00</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.17</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1.89</td>\n",
              "      <td>48</td>\n",
              "      <td>1</td>\n",
              "      <td>0.312</td>\n",
              "      <td>0.099</td>\n",
              "      <td>0.383</td>\n",
              "      <td>...</td>\n",
              "      <td>7.7</td>\n",
              "      <td>0.038</td>\n",
              "      <td>4.7</td>\n",
              "      <td>70.12</td>\n",
              "      <td>0.53</td>\n",
              "      <td>13.9</td>\n",
              "      <td>13.16</td>\n",
              "      <td>34.35</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2012-12-28 00:00:00</td>\n",
              "      <td>5.96</td>\n",
              "      <td>5.27</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1.88</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.315</td>\n",
              "      <td>0.102</td>\n",
              "      <td>0.383</td>\n",
              "      <td>...</td>\n",
              "      <td>8.1</td>\n",
              "      <td>0.056</td>\n",
              "      <td>4.3</td>\n",
              "      <td>70.51</td>\n",
              "      <td>0.64</td>\n",
              "      <td>13.42</td>\n",
              "      <td>12.71</td>\n",
              "      <td>35.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2012-12-29 00:00:00</td>\n",
              "      <td>6.28</td>\n",
              "      <td>5.14</td>\n",
              "      <td>7.48</td>\n",
              "      <td>1.8</td>\n",
              "      <td>44</td>\n",
              "      <td>0</td>\n",
              "      <td>0.308</td>\n",
              "      <td>0.107</td>\n",
              "      <td>0.373</td>\n",
              "      <td>...</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.096</td>\n",
              "      <td>4.4</td>\n",
              "      <td>59.64</td>\n",
              "      <td>0.34</td>\n",
              "      <td>13.31</td>\n",
              "      <td>13.11</td>\n",
              "      <td>38.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2012-12-30 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.22</td>\n",
              "      <td>7.49</td>\n",
              "      <td>1.99</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3115</td>\n",
              "      <td>0.1045</td>\n",
              "      <td>0.378</td>\n",
              "      <td>...</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0.076</td>\n",
              "      <td>4.35</td>\n",
              "      <td>64.74</td>\n",
              "      <td>0.22</td>\n",
              "      <td>13.551</td>\n",
              "      <td>13.313</td>\n",
              "      <td>38.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2012-12-31 00:00:00</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.28</td>\n",
              "      <td>7.61</td>\n",
              "      <td>2.03</td>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>0.306</td>\n",
              "      <td>0.097</td>\n",
              "      <td>0.398</td>\n",
              "      <td>...</td>\n",
              "      <td>7.6</td>\n",
              "      <td>0.047</td>\n",
              "      <td>4.3</td>\n",
              "      <td>65.11</td>\n",
              "      <td>0.24</td>\n",
              "      <td>14.187</td>\n",
              "      <td>13.011</td>\n",
              "      <td>36.31</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.58</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7ff2a5d-62f2-4b89-a495-c3222153ca7f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d7ff2a5d-62f2-4b89-a495-c3222153ca7f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d7ff2a5d-62f2-4b89-a495-c3222153ca7f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2012.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f42fde2d-ff76-4070-bdba-5ed93e737903",
        "id": "X5td97oce75p"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2013**"
      ],
      "metadata": {
        "id": "rMlTh1iago-q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_13 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2013')\n",
        "data_13.to_csv('2013.csv', index=False)"
      ],
      "metadata": {
        "id": "GKQBW2aEgo-r"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013 = pd.read_csv('/content/2013.csv')"
      ],
      "metadata": {
        "id": "xaNMIFDCgo-s"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "4de4b846-7340-4e35-d29f-e20bc6fe9d2d",
        "id": "cH4Qo6SGgo-s"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO  \\\n",
              "0                                                NaN                                                              \n",
              "1                                               Date                                                              \n",
              "2                                2013-01-01 00:00:00                                                              \n",
              "3                                2013-01-02 00:00:00                                                              \n",
              "4                                2013-01-03 00:00:00                                                              \n",
              "\n",
              "  Unnamed: 1 Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5   Unnamed: 6  \\\n",
              "0         pH        NaN        NaN        NaN        NaN          NaN   \n",
              "1        Raw        PTC   PTC (OL)        SWC     Filter  Finish (OL)   \n",
              "2       5.29       5.03        NaN        NaN        NaN          NaN   \n",
              "3       6.39       5.11        NaN        NaN        NaN          NaN   \n",
              "4        6.1       5.36        NaN        NaN        NaN          NaN   \n",
              "\n",
              "  Unnamed: 7 Unnamed: 8 Unnamed: 9  ... Unnamed: 48 Unnamed: 49 Unnamed: 50  \\\n",
              "0        NaN   Chlorine        NaN  ...         NaN         NaN         NaN   \n",
              "1     Finish       Free      Total  ...      Finish      Filter    Backwash   \n",
              "2       7.46       2.11        NaN  ...       12.93         NaN         NaN   \n",
              "3       7.37        1.9        NaN  ...      12.566         NaN         NaN   \n",
              "4       8.32       1.78        NaN  ...      13.669         NaN         NaN   \n",
              "\n",
              "        Unnamed: 51 Unnamed: 52 Unnamed: 53       Unnamed: 54 Unnamed: 55  \\\n",
              "0  Flows from plant         NaN         NaN  Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW          Chlorine        Alum   \n",
              "2               NaN         NaN         NaN               NaN       35.91   \n",
              "3               NaN         NaN         NaN               NaN       33.33   \n",
              "4               NaN         NaN         NaN               NaN       30.98   \n",
              "\n",
              "  Unnamed: 56  Unnamed: 57  \n",
              "0         NaN          NaN  \n",
              "1  Lime (Pre)  Lime (Post)  \n",
              "2         NaN        15.23  \n",
              "3         NaN        17.66  \n",
              "4         NaN        16.38  \n",
              "\n",
              "[5 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ef1b70de-e8b7-454f-95ea-201b07d64f9f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 48</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Free</td>\n",
              "      <td>Total</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2013-01-01 00:00:00</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.46</td>\n",
              "      <td>2.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.93</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35.91</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2013-01-02 00:00:00</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.37</td>\n",
              "      <td>1.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.566</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.33</td>\n",
              "      <td>NaN</td>\n",
              "      <td>17.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2013-01-03 00:00:00</td>\n",
              "      <td>6.1</td>\n",
              "      <td>5.36</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.32</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.669</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.38</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef1b70de-e8b7-454f-95ea-201b07d64f9f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ef1b70de-e8b7-454f-95ea-201b07d64f9f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ef1b70de-e8b7-454f-95ea-201b07d64f9f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013 = data_2013.drop(data_2013.index[0])"
      ],
      "metadata": {
        "id": "r6rxVKbtgo-t"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013.columns = pd.MultiIndex.from_tuples([('Date',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used', ' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "7ZGl8dfngo-t"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013 = data_2013.drop(data_2013.index[0])"
      ],
      "metadata": {
        "id": "sNQ3sXnngo-t"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "918ddf96-619d-4437-9c40-4004e2516603",
        "id": "bxS5NS3Rgo-u"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                         \\\n",
              "                           Raw   PTC PTC (OL)  SWC Filter Finish (OL)   \n",
              "2    2013-01-01 00:00:00  5.29  5.03      NaN  NaN    NaN         NaN   \n",
              "3    2013-01-02 00:00:00  6.39  5.11      NaN  NaN    NaN         NaN   \n",
              "4    2013-01-03 00:00:00   6.1  5.36      NaN  NaN    NaN         NaN   \n",
              "5    2013-01-04 00:00:00  6.09  5.45      NaN  NaN    NaN         NaN   \n",
              "6    2013-01-05 00:00:00     6  5.37      NaN  NaN    NaN         NaN   \n",
              "..                   ...   ...   ...      ...  ...    ...         ...   \n",
              "363  2013-12-28 00:00:00  6.29  5.31      NaN  NaN    NaN         NaN   \n",
              "364  2013-12-29 00:00:00  6.32  5.35      NaN  NaN    NaN         NaN   \n",
              "365  2013-12-30 00:00:00  6.29  5.32      NaN  NaN    NaN         NaN   \n",
              "366  2013-12-31 00:00:00  6.25  5.23      NaN  NaN    NaN         NaN   \n",
              "367                  NaN  5.01  5.12      NaN  NaN    NaN         NaN   \n",
              "\n",
              "                                  Chlorine        ...  Flows within plant  \\\n",
              "                Finish                Free Total  ...              Finish   \n",
              "2                 7.46                2.11   NaN  ...               12.93   \n",
              "3                 7.37                 1.9   NaN  ...              12.566   \n",
              "4                 8.32                1.78   NaN  ...              13.669   \n",
              "5                 7.84                1.88   NaN  ...              13.312   \n",
              "6                 7.85                1.86   NaN  ...               12.96   \n",
              "..                 ...                 ...   ...  ...                 ...   \n",
              "363               6.87   2.056666641235351   NaN  ...  14.282046874999999   \n",
              "364  6.890000000000001  2.0566666793823236   NaN  ...       14.2718515625   \n",
              "365                6.9  2.0566666603088373   NaN  ...      14.27694921875   \n",
              "366               6.84  2.0566666698455807   NaN  ...     14.274400390625   \n",
              "367               7.08   2.056666665077209   NaN  ...  14.275674804687501   \n",
              "\n",
              "                    Flows from plant              Chemical Dosages          \\\n",
              "    Filter Backwash         Bishop s Botwood  GFW         Chlorine    Alum   \n",
              "2      NaN      NaN              NaN     NaN  NaN              NaN   35.91   \n",
              "3      NaN      NaN              NaN     NaN  NaN              NaN   33.33   \n",
              "4      NaN      NaN              NaN     NaN  NaN              NaN   30.98   \n",
              "5      NaN      NaN              NaN     NaN  NaN              NaN   29.79   \n",
              "6      NaN      NaN              NaN     NaN  NaN              NaN   31.49   \n",
              "..     ...      ...              ...     ...  ...              ...     ...   \n",
              "363    NaN      NaN              NaN     NaN  NaN              NaN    27.7   \n",
              "364    NaN      NaN              NaN     NaN  NaN              NaN   28.55   \n",
              "365    NaN      NaN              NaN     NaN  NaN              NaN  28.125   \n",
              "366    NaN      NaN              NaN     NaN  NaN              NaN   28.68   \n",
              "367    NaN      NaN              NaN     NaN  NaN              NaN   31.45   \n",
              "\n",
              "                      \n",
              "    Limestone   Lime  \n",
              "2         NaN  15.23  \n",
              "3         NaN  17.66  \n",
              "4         NaN  16.38  \n",
              "5         NaN  16.08  \n",
              "6         NaN  16.43  \n",
              "..        ...    ...  \n",
              "363       5.6    7.3  \n",
              "364       5.6    7.3  \n",
              "365       5.8    7.6  \n",
              "366       5.8      8  \n",
              "367       5.8    8.3  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-73eedd48-b9b9-42fc-94e7-f6009a085579\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2013-01-01 00:00:00</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.46</td>\n",
              "      <td>2.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.93</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35.91</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2013-01-02 00:00:00</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.37</td>\n",
              "      <td>1.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.566</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.33</td>\n",
              "      <td>NaN</td>\n",
              "      <td>17.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2013-01-03 00:00:00</td>\n",
              "      <td>6.1</td>\n",
              "      <td>5.36</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.32</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.669</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2013-01-04 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.84</td>\n",
              "      <td>1.88</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.312</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2013-01-05 00:00:00</td>\n",
              "      <td>6</td>\n",
              "      <td>5.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.85</td>\n",
              "      <td>1.86</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.96</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>31.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2013-12-28 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.87</td>\n",
              "      <td>2.056666641235351</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.282046874999999</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.7</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2013-12-29 00:00:00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.35</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.890000000000001</td>\n",
              "      <td>2.0566666793823236</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.2718515625</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.55</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2013-12-30 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.32</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2.0566666603088373</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.27694921875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.125</td>\n",
              "      <td>5.8</td>\n",
              "      <td>7.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2013-12-31 00:00:00</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.84</td>\n",
              "      <td>2.0566666698455807</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.274400390625</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.68</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5.01</td>\n",
              "      <td>5.12</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.08</td>\n",
              "      <td>2.056666665077209</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.275674804687501</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>31.45</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73eedd48-b9b9-42fc-94e7-f6009a085579')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-73eedd48-b9b9-42fc-94e7-f6009a085579 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-73eedd48-b9b9-42fc-94e7-f6009a085579');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013 = data_2013.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "CKc3nLkqgo-u"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "e5563600-82fb-4060-fcc2-06750f901507",
        "id": "XksYpdWtgo-u"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                         \\\n",
              "                           Raw   PTC PTC (OL)  SWC Filter Finish (OL)   \n",
              "0    2013-01-01 00:00:00  5.29  5.03      NaN  NaN    NaN         NaN   \n",
              "1    2013-01-02 00:00:00  6.39  5.11      NaN  NaN    NaN         NaN   \n",
              "2    2013-01-03 00:00:00   6.1  5.36      NaN  NaN    NaN         NaN   \n",
              "3    2013-01-04 00:00:00  6.09  5.45      NaN  NaN    NaN         NaN   \n",
              "4    2013-01-05 00:00:00     6  5.37      NaN  NaN    NaN         NaN   \n",
              "..                   ...   ...   ...      ...  ...    ...         ...   \n",
              "361  2013-12-28 00:00:00  6.29  5.31      NaN  NaN    NaN         NaN   \n",
              "362  2013-12-29 00:00:00  6.32  5.35      NaN  NaN    NaN         NaN   \n",
              "363  2013-12-30 00:00:00  6.29  5.32      NaN  NaN    NaN         NaN   \n",
              "364  2013-12-31 00:00:00  6.25  5.23      NaN  NaN    NaN         NaN   \n",
              "365                  NaN  5.01  5.12      NaN  NaN    NaN         NaN   \n",
              "\n",
              "                                  Chlorine        ...  Flows within plant  \\\n",
              "                Finish                Free Total  ...              Finish   \n",
              "0                 7.46                2.11   NaN  ...               12.93   \n",
              "1                 7.37                 1.9   NaN  ...              12.566   \n",
              "2                 8.32                1.78   NaN  ...              13.669   \n",
              "3                 7.84                1.88   NaN  ...              13.312   \n",
              "4                 7.85                1.86   NaN  ...               12.96   \n",
              "..                 ...                 ...   ...  ...                 ...   \n",
              "361               6.87   2.056666641235351   NaN  ...  14.282046874999999   \n",
              "362  6.890000000000001  2.0566666793823236   NaN  ...       14.2718515625   \n",
              "363                6.9  2.0566666603088373   NaN  ...      14.27694921875   \n",
              "364               6.84  2.0566666698455807   NaN  ...     14.274400390625   \n",
              "365               7.08   2.056666665077209   NaN  ...  14.275674804687501   \n",
              "\n",
              "                    Flows from plant              Chemical Dosages          \\\n",
              "    Filter Backwash         Bishop s Botwood  GFW         Chlorine    Alum   \n",
              "0      NaN      NaN              NaN     NaN  NaN              NaN   35.91   \n",
              "1      NaN      NaN              NaN     NaN  NaN              NaN   33.33   \n",
              "2      NaN      NaN              NaN     NaN  NaN              NaN   30.98   \n",
              "3      NaN      NaN              NaN     NaN  NaN              NaN   29.79   \n",
              "4      NaN      NaN              NaN     NaN  NaN              NaN   31.49   \n",
              "..     ...      ...              ...     ...  ...              ...     ...   \n",
              "361    NaN      NaN              NaN     NaN  NaN              NaN    27.7   \n",
              "362    NaN      NaN              NaN     NaN  NaN              NaN   28.55   \n",
              "363    NaN      NaN              NaN     NaN  NaN              NaN  28.125   \n",
              "364    NaN      NaN              NaN     NaN  NaN              NaN   28.68   \n",
              "365    NaN      NaN              NaN     NaN  NaN              NaN   31.45   \n",
              "\n",
              "                      \n",
              "    Limestone   Lime  \n",
              "0         NaN  15.23  \n",
              "1         NaN  17.66  \n",
              "2         NaN  16.38  \n",
              "3         NaN  16.08  \n",
              "4         NaN  16.43  \n",
              "..        ...    ...  \n",
              "361       5.6    7.3  \n",
              "362       5.6    7.3  \n",
              "363       5.8    7.6  \n",
              "364       5.8      8  \n",
              "365       5.8    8.3  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-30b108ed-8e25-49ef-9d5b-3c3a0b959159\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2013-01-01 00:00:00</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.46</td>\n",
              "      <td>2.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.93</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35.91</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2013-01-02 00:00:00</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.37</td>\n",
              "      <td>1.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.566</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.33</td>\n",
              "      <td>NaN</td>\n",
              "      <td>17.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2013-01-03 00:00:00</td>\n",
              "      <td>6.1</td>\n",
              "      <td>5.36</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.32</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.669</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2013-01-04 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.84</td>\n",
              "      <td>1.88</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.312</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2013-01-05 00:00:00</td>\n",
              "      <td>6</td>\n",
              "      <td>5.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.85</td>\n",
              "      <td>1.86</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.96</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>31.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2013-12-28 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.87</td>\n",
              "      <td>2.056666641235351</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.282046874999999</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.7</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2013-12-29 00:00:00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.35</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.890000000000001</td>\n",
              "      <td>2.0566666793823236</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.2718515625</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.55</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2013-12-30 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.32</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2.0566666603088373</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.27694921875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.125</td>\n",
              "      <td>5.8</td>\n",
              "      <td>7.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2013-12-31 00:00:00</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.84</td>\n",
              "      <td>2.0566666698455807</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.274400390625</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.68</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5.01</td>\n",
              "      <td>5.12</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.08</td>\n",
              "      <td>2.056666665077209</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.275674804687501</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>31.45</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30b108ed-8e25-49ef-9d5b-3c3a0b959159')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-30b108ed-8e25-49ef-9d5b-3c3a0b959159 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-30b108ed-8e25-49ef-9d5b-3c3a0b959159');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013 = data_2013.dropna(axis=1, how='all')"
      ],
      "metadata": {
        "id": "JWNULlThgo-v"
      },
      "execution_count": 59,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ab211ed1-0f54-4f46-97cb-57ea4fd6ba1d",
        "id": "w0I8hyyOgo-v"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                     Chlorine  \\\n",
              "                           Raw   PTC             Finish                Free   \n",
              "0    2013-01-01 00:00:00  5.29  5.03               7.46                2.11   \n",
              "1    2013-01-02 00:00:00  6.39  5.11               7.37                 1.9   \n",
              "2    2013-01-03 00:00:00   6.1  5.36               8.32                1.78   \n",
              "3    2013-01-04 00:00:00  6.09  5.45               7.84                1.88   \n",
              "4    2013-01-05 00:00:00     6  5.37               7.85                1.86   \n",
              "..                   ...   ...   ...                ...                 ...   \n",
              "361  2013-12-28 00:00:00  6.29  5.31               6.87   2.056666641235351   \n",
              "362  2013-12-29 00:00:00  6.32  5.35  6.890000000000001  2.0566666793823236   \n",
              "363  2013-12-30 00:00:00  6.29  5.32                6.9  2.0566666603088373   \n",
              "364  2013-12-31 00:00:00  6.25  5.23               6.84  2.0566666698455807   \n",
              "365                  NaN  5.01  5.12               7.08   2.056666665077209   \n",
              "\n",
              "    Colour                    Turbidity                 ... Alkalinity  \\\n",
              "     Raw T Finish T                 Raw Filter  Finish  ...     Finish   \n",
              "0       45        0               0.298  0.108   0.387  ...        6.7   \n",
              "1       42        0               0.298  0.077   0.383  ...        8.2   \n",
              "2       40        0                0.29   0.08   0.388  ...       10.7   \n",
              "3       37        0               0.284  0.064   0.388  ...        9.6   \n",
              "4       31        0               0.287  0.057   0.389  ...        9.7   \n",
              "..     ...      ...                 ...    ...     ...  ...        ...   \n",
              "361     40        0               0.634  0.109   0.227  ...          6   \n",
              "362     42        0  0.5860000000000001  0.096  0.1695  ...        6.4   \n",
              "363     41        0               0.547  0.137   0.202  ...        6.4   \n",
              "364     46        0               0.465  0.073   0.238  ...        7.1   \n",
              "365     43        0               0.452  0.077   0.225  ...        6.8   \n",
              "\n",
              "         Aluminum Temperature Cl Used Cl Demand  Flows within plant  \\\n",
              "    Finish (Free)      Finish                                   Raw   \n",
              "0           0.074         4.3   70.56      0.37               14.13   \n",
              "1           0.086         4.2   65.47      0.47              13.361   \n",
              "2           0.129         4.3   75.28      0.72              14.405   \n",
              "3           0.099         4.1   69.92       0.5              14.555   \n",
              "4           0.084         4.1   70.41      0.61               13.19   \n",
              "..            ...         ...     ...       ...                 ...   \n",
              "361         0.056         2.4     100      0.92  15.585281250000001   \n",
              "362        0.0625        2.45     100      0.92  15.580109375000001   \n",
              "363         0.081         2.5     100      0.92       15.5826953125   \n",
              "364         0.063         2.5     100      0.92      15.58140234375   \n",
              "365         0.034         2.5     100      0.92     15.582048828125   \n",
              "\n",
              "                        Chemical Dosages                   \n",
              "                 Finish             Alum Limestone   Lime  \n",
              "0                 12.93            35.91       NaN  15.23  \n",
              "1                12.566            33.33       NaN  17.66  \n",
              "2                13.669            30.98       NaN  16.38  \n",
              "3                13.312            29.79       NaN  16.08  \n",
              "4                 12.96            31.49       NaN  16.43  \n",
              "..                  ...              ...       ...    ...  \n",
              "361  14.282046874999999             27.7       5.6    7.3  \n",
              "362       14.2718515625            28.55       5.6    7.3  \n",
              "363      14.27694921875           28.125       5.8    7.6  \n",
              "364     14.274400390625            28.68       5.8      8  \n",
              "365  14.275674804687501            31.45       5.8    8.3  \n",
              "\n",
              "[366 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-274e1e60-9077-428c-a95f-90a01a5f98b5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"3\" halign=\"left\">pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Colour</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Turbidity</th>\n",
              "      <th>...</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Aluminum</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Cl Used</th>\n",
              "      <th>Cl Demand</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Finish T</th>\n",
              "      <th>Raw</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish (Free)</th>\n",
              "      <th>Finish</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2013-01-01 00:00:00</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.03</td>\n",
              "      <td>7.46</td>\n",
              "      <td>2.11</td>\n",
              "      <td>45</td>\n",
              "      <td>0</td>\n",
              "      <td>0.298</td>\n",
              "      <td>0.108</td>\n",
              "      <td>0.387</td>\n",
              "      <td>...</td>\n",
              "      <td>6.7</td>\n",
              "      <td>0.074</td>\n",
              "      <td>4.3</td>\n",
              "      <td>70.56</td>\n",
              "      <td>0.37</td>\n",
              "      <td>14.13</td>\n",
              "      <td>12.93</td>\n",
              "      <td>35.91</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2013-01-02 00:00:00</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.11</td>\n",
              "      <td>7.37</td>\n",
              "      <td>1.9</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.298</td>\n",
              "      <td>0.077</td>\n",
              "      <td>0.383</td>\n",
              "      <td>...</td>\n",
              "      <td>8.2</td>\n",
              "      <td>0.086</td>\n",
              "      <td>4.2</td>\n",
              "      <td>65.47</td>\n",
              "      <td>0.47</td>\n",
              "      <td>13.361</td>\n",
              "      <td>12.566</td>\n",
              "      <td>33.33</td>\n",
              "      <td>NaN</td>\n",
              "      <td>17.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2013-01-03 00:00:00</td>\n",
              "      <td>6.1</td>\n",
              "      <td>5.36</td>\n",
              "      <td>8.32</td>\n",
              "      <td>1.78</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.388</td>\n",
              "      <td>...</td>\n",
              "      <td>10.7</td>\n",
              "      <td>0.129</td>\n",
              "      <td>4.3</td>\n",
              "      <td>75.28</td>\n",
              "      <td>0.72</td>\n",
              "      <td>14.405</td>\n",
              "      <td>13.669</td>\n",
              "      <td>30.98</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2013-01-04 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.84</td>\n",
              "      <td>1.88</td>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>0.284</td>\n",
              "      <td>0.064</td>\n",
              "      <td>0.388</td>\n",
              "      <td>...</td>\n",
              "      <td>9.6</td>\n",
              "      <td>0.099</td>\n",
              "      <td>4.1</td>\n",
              "      <td>69.92</td>\n",
              "      <td>0.5</td>\n",
              "      <td>14.555</td>\n",
              "      <td>13.312</td>\n",
              "      <td>29.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2013-01-05 00:00:00</td>\n",
              "      <td>6</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.85</td>\n",
              "      <td>1.86</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0.287</td>\n",
              "      <td>0.057</td>\n",
              "      <td>0.389</td>\n",
              "      <td>...</td>\n",
              "      <td>9.7</td>\n",
              "      <td>0.084</td>\n",
              "      <td>4.1</td>\n",
              "      <td>70.41</td>\n",
              "      <td>0.61</td>\n",
              "      <td>13.19</td>\n",
              "      <td>12.96</td>\n",
              "      <td>31.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2013-12-28 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>6.87</td>\n",
              "      <td>2.056666641235351</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.634</td>\n",
              "      <td>0.109</td>\n",
              "      <td>0.227</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0.056</td>\n",
              "      <td>2.4</td>\n",
              "      <td>100</td>\n",
              "      <td>0.92</td>\n",
              "      <td>15.585281250000001</td>\n",
              "      <td>14.282046874999999</td>\n",
              "      <td>27.7</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2013-12-29 00:00:00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.35</td>\n",
              "      <td>6.890000000000001</td>\n",
              "      <td>2.0566666793823236</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5860000000000001</td>\n",
              "      <td>0.096</td>\n",
              "      <td>0.1695</td>\n",
              "      <td>...</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.0625</td>\n",
              "      <td>2.45</td>\n",
              "      <td>100</td>\n",
              "      <td>0.92</td>\n",
              "      <td>15.580109375000001</td>\n",
              "      <td>14.2718515625</td>\n",
              "      <td>28.55</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2013-12-30 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.32</td>\n",
              "      <td>6.9</td>\n",
              "      <td>2.0566666603088373</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>0.547</td>\n",
              "      <td>0.137</td>\n",
              "      <td>0.202</td>\n",
              "      <td>...</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.081</td>\n",
              "      <td>2.5</td>\n",
              "      <td>100</td>\n",
              "      <td>0.92</td>\n",
              "      <td>15.5826953125</td>\n",
              "      <td>14.27694921875</td>\n",
              "      <td>28.125</td>\n",
              "      <td>5.8</td>\n",
              "      <td>7.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2013-12-31 00:00:00</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.23</td>\n",
              "      <td>6.84</td>\n",
              "      <td>2.0566666698455807</td>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>0.465</td>\n",
              "      <td>0.073</td>\n",
              "      <td>0.238</td>\n",
              "      <td>...</td>\n",
              "      <td>7.1</td>\n",
              "      <td>0.063</td>\n",
              "      <td>2.5</td>\n",
              "      <td>100</td>\n",
              "      <td>0.92</td>\n",
              "      <td>15.58140234375</td>\n",
              "      <td>14.274400390625</td>\n",
              "      <td>28.68</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5.01</td>\n",
              "      <td>5.12</td>\n",
              "      <td>7.08</td>\n",
              "      <td>2.056666665077209</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0.452</td>\n",
              "      <td>0.077</td>\n",
              "      <td>0.225</td>\n",
              "      <td>...</td>\n",
              "      <td>6.8</td>\n",
              "      <td>0.034</td>\n",
              "      <td>2.5</td>\n",
              "      <td>100</td>\n",
              "      <td>0.92</td>\n",
              "      <td>15.582048828125</td>\n",
              "      <td>14.275674804687501</td>\n",
              "      <td>31.45</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-274e1e60-9077-428c-a95f-90a01a5f98b5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-274e1e60-9077-428c-a95f-90a01a5f98b5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-274e1e60-9077-428c-a95f-90a01a5f98b5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2013.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e0035021-201c-4d5e-c788-95467a1db201",
        "id": "sFI7mI8cgo-v"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2014**"
      ],
      "metadata": {
        "id": "k_4q2Nh3iy4h"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_14 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2014')\n",
        "data_14.to_csv('2014.csv', index=False)"
      ],
      "metadata": {
        "id": "lGIpDgOQiy4h"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014 = pd.read_csv('/content/2014.csv')"
      ],
      "metadata": {
        "id": "fybuR1xdiy4h"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c1ec7ea4-ee06-42e0-feb4-dbc5f85eb8d3",
        "id": "_oYPyX78iy4i"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO  \\\n",
              "0                                                NaN                                                              \n",
              "1                                               Date                                                              \n",
              "2                                2009-01-01 00:00:00                                                              \n",
              "3                                2009-01-02 00:00:00                                                              \n",
              "4                                2009-01-03 00:00:00                                                              \n",
              "\n",
              "  Unnamed: 1 Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5   Unnamed: 6  \\\n",
              "0         pH        NaN        NaN        NaN        NaN          NaN   \n",
              "1        Raw        PTC   PTC (OL)        SWC     Filter  Finish (OL)   \n",
              "2       6.19       5.23        NaN        NaN        NaN          NaN   \n",
              "3       6.31       5.23        NaN        NaN        NaN          NaN   \n",
              "4       5.92       5.29        NaN        NaN        NaN          NaN   \n",
              "\n",
              "  Unnamed: 7          Unnamed: 8 Unnamed: 9  ... Unnamed: 48 Unnamed: 49  \\\n",
              "0        NaN            Chlorine        NaN  ...         NaN         NaN   \n",
              "1     Finish                Free      Total  ...      Finish      Filter   \n",
              "2        NaN   1.736666666666788        NaN  ...      13.163         NaN   \n",
              "3        NaN   1.736666666666424        NaN  ...      13.163         NaN   \n",
              "4        NaN  1.7366666666671517        NaN  ...      13.163         NaN   \n",
              "\n",
              "  Unnamed: 50       Unnamed: 51 Unnamed: 52 Unnamed: 53       Unnamed: 54  \\\n",
              "0         NaN  Flows from plant         NaN         NaN  Chemical Dosages   \n",
              "1    Backwash          Bishop's     Botwood         GFW          Chlorine   \n",
              "2         NaN               NaN         NaN         NaN               NaN   \n",
              "3         NaN               NaN         NaN         NaN               NaN   \n",
              "4         NaN               NaN         NaN         NaN               NaN   \n",
              "\n",
              "  Unnamed: 55 Unnamed: 56  Unnamed: 57  \n",
              "0         NaN         NaN          NaN  \n",
              "1        Alum  Lime (Pre)  Lime (Post)  \n",
              "2       29.99         5.8          8.3  \n",
              "3       29.32         5.8          8.3  \n",
              "4       32.28         5.8          8.3  \n",
              "\n",
              "[5 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4ab1ef95-e8a9-44cf-9815-ed40130e27d0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 48</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Free</td>\n",
              "      <td>Total</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666666788</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.99</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666666424</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.32</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>5.92</td>\n",
              "      <td>5.29</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.7366666666671517</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>32.28</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ab1ef95-e8a9-44cf-9815-ed40130e27d0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4ab1ef95-e8a9-44cf-9815-ed40130e27d0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4ab1ef95-e8a9-44cf-9815-ed40130e27d0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014 = data_2014.drop(data_2014.index[0])"
      ],
      "metadata": {
        "id": "pq1FwaAZiy4i"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014.columns = pd.MultiIndex.from_tuples([('Date',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used', ' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "Yawv5xQ8iy4i"
      },
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014 = data_2014.drop(data_2014.index[0])"
      ],
      "metadata": {
        "id": "XvamDoiziy4j"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c7454aa9-546c-46a1-9d04-7ba3bfd9f871",
        "id": "td9EB5Gqiy4j"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date     pH                                          \\\n",
              "                            Raw                PTC PTC (OL)  SWC Filter   \n",
              "2    2009-01-01 00:00:00   6.19               5.23      NaN  NaN    NaN   \n",
              "3    2009-01-02 00:00:00   6.31               5.23      NaN  NaN    NaN   \n",
              "4    2009-01-03 00:00:00   5.92               5.29      NaN  NaN    NaN   \n",
              "5    2009-01-04 00:00:00   6.43               5.33      NaN  NaN    NaN   \n",
              "6    2009-01-05 00:00:00  5.915               5.24      NaN  NaN    NaN   \n",
              "..                   ...    ...                ...      ...  ...    ...   \n",
              "363  2009-12-28 00:00:00   6.03               5.61      NaN  NaN    NaN   \n",
              "364  2009-12-29 00:00:00  6.125  5.515000000000001      NaN  NaN    NaN   \n",
              "365  2009-12-30 00:00:00   6.01               5.35      NaN  NaN    NaN   \n",
              "366  2009-12-31 00:00:00   6.11               5.09      NaN  NaN    NaN   \n",
              "367                  NaN   5.82               5.19      NaN  NaN    NaN   \n",
              "\n",
              "                                  Chlorine        ... Flows within plant  \\\n",
              "    Finish (OL) Finish                Free Total  ...             Finish   \n",
              "2           NaN    NaN   1.736666666666788   NaN  ...             13.163   \n",
              "3           NaN    NaN   1.736666666666424   NaN  ...             13.163   \n",
              "4           NaN    NaN  1.7366666666671517   NaN  ...             13.163   \n",
              "5           NaN    NaN  1.7366666666656965   NaN  ...             13.163   \n",
              "6           NaN    NaN   1.736666666668607   NaN  ...             13.163   \n",
              "..          ...    ...                 ...   ...  ...                ...   \n",
              "363         NaN    NaN                1.85   NaN  ...             11.595   \n",
              "364         NaN    NaN  1.8450000000000002   NaN  ...             10.672   \n",
              "365         NaN    NaN                1.82   NaN  ...             12.459   \n",
              "366         NaN    NaN                1.73   NaN  ...             10.822   \n",
              "367         NaN    NaN                1.79   NaN  ...             11.801   \n",
              "\n",
              "                    Flows from plant              Chemical Dosages  \\\n",
              "    Filter Backwash         Bishop s Botwood  GFW         Chlorine   \n",
              "2      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "3      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "4      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "5      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "6      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "..     ...      ...              ...     ...  ...              ...   \n",
              "363    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "364    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "365    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "366    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "367    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "\n",
              "                                         \n",
              "                   Alum Limestone  Lime  \n",
              "2                 29.99       5.8   8.3  \n",
              "3                 29.32       5.8   8.3  \n",
              "4                 32.28       5.8   8.3  \n",
              "5                 33.49       5.4   8.8  \n",
              "6    32.885000000000005       5.6  8.55  \n",
              "..                  ...       ...   ...  \n",
              "363               30.94         6   7.2  \n",
              "364              30.655         6     7  \n",
              "365               30.37         6     7  \n",
              "366               30.26         6     7  \n",
              "367               30.52         6     7  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d3c62c32-7c04-4167-b43f-0720d383ca58\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666666788</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.99</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666666424</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.32</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>5.92</td>\n",
              "      <td>5.29</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.7366666666671517</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>32.28</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.33</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.7366666666656965</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.49</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>5.915</td>\n",
              "      <td>5.24</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666668607</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>32.885000000000005</td>\n",
              "      <td>5.6</td>\n",
              "      <td>8.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.03</td>\n",
              "      <td>5.61</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.85</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.595</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.94</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.125</td>\n",
              "      <td>5.515000000000001</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.8450000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>10.672</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.655</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.35</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.459</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.37</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.09</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.73</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>10.822</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.26</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.801</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.52</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3c62c32-7c04-4167-b43f-0720d383ca58')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d3c62c32-7c04-4167-b43f-0720d383ca58 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d3c62c32-7c04-4167-b43f-0720d383ca58');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014 = data_2014.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "dAoTZ1ALiy4j"
      },
      "execution_count": 69,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "e8c6e892-3737-4d5e-a002-a9999233c918",
        "id": "zBBLHSseiy4j"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date     pH                                          \\\n",
              "                            Raw                PTC PTC (OL)  SWC Filter   \n",
              "0    2009-01-01 00:00:00   6.19               5.23      NaN  NaN    NaN   \n",
              "1    2009-01-02 00:00:00   6.31               5.23      NaN  NaN    NaN   \n",
              "2    2009-01-03 00:00:00   5.92               5.29      NaN  NaN    NaN   \n",
              "3    2009-01-04 00:00:00   6.43               5.33      NaN  NaN    NaN   \n",
              "4    2009-01-05 00:00:00  5.915               5.24      NaN  NaN    NaN   \n",
              "..                   ...    ...                ...      ...  ...    ...   \n",
              "361  2009-12-28 00:00:00   6.03               5.61      NaN  NaN    NaN   \n",
              "362  2009-12-29 00:00:00  6.125  5.515000000000001      NaN  NaN    NaN   \n",
              "363  2009-12-30 00:00:00   6.01               5.35      NaN  NaN    NaN   \n",
              "364  2009-12-31 00:00:00   6.11               5.09      NaN  NaN    NaN   \n",
              "365                  NaN   5.82               5.19      NaN  NaN    NaN   \n",
              "\n",
              "                                  Chlorine        ... Flows within plant  \\\n",
              "    Finish (OL) Finish                Free Total  ...             Finish   \n",
              "0           NaN    NaN   1.736666666666788   NaN  ...             13.163   \n",
              "1           NaN    NaN   1.736666666666424   NaN  ...             13.163   \n",
              "2           NaN    NaN  1.7366666666671517   NaN  ...             13.163   \n",
              "3           NaN    NaN  1.7366666666656965   NaN  ...             13.163   \n",
              "4           NaN    NaN   1.736666666668607   NaN  ...             13.163   \n",
              "..          ...    ...                 ...   ...  ...                ...   \n",
              "361         NaN    NaN                1.85   NaN  ...             11.595   \n",
              "362         NaN    NaN  1.8450000000000002   NaN  ...             10.672   \n",
              "363         NaN    NaN                1.82   NaN  ...             12.459   \n",
              "364         NaN    NaN                1.73   NaN  ...             10.822   \n",
              "365         NaN    NaN                1.79   NaN  ...             11.801   \n",
              "\n",
              "                    Flows from plant              Chemical Dosages  \\\n",
              "    Filter Backwash         Bishop s Botwood  GFW         Chlorine   \n",
              "0      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "1      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "2      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "3      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "4      NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "..     ...      ...              ...     ...  ...              ...   \n",
              "361    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "362    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "363    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "364    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "365    NaN      NaN              NaN     NaN  NaN              NaN   \n",
              "\n",
              "                                         \n",
              "                   Alum Limestone  Lime  \n",
              "0                 29.99       5.8   8.3  \n",
              "1                 29.32       5.8   8.3  \n",
              "2                 32.28       5.8   8.3  \n",
              "3                 33.49       5.4   8.8  \n",
              "4    32.885000000000005       5.6  8.55  \n",
              "..                  ...       ...   ...  \n",
              "361               30.94         6   7.2  \n",
              "362              30.655         6     7  \n",
              "363               30.37         6     7  \n",
              "364               30.26         6     7  \n",
              "365               30.52         6     7  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7b8d8c02-680c-47c2-bdd1-f999b3173e4f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666666788</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.99</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666666424</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.32</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>5.92</td>\n",
              "      <td>5.29</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.7366666666671517</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>32.28</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.33</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.7366666666656965</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.49</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>5.915</td>\n",
              "      <td>5.24</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.736666666668607</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.163</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>32.885000000000005</td>\n",
              "      <td>5.6</td>\n",
              "      <td>8.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.03</td>\n",
              "      <td>5.61</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.85</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.595</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.94</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.125</td>\n",
              "      <td>5.515000000000001</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.8450000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>10.672</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.655</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.35</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.459</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.37</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.09</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.73</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>10.822</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.26</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.801</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.52</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b8d8c02-680c-47c2-bdd1-f999b3173e4f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7b8d8c02-680c-47c2-bdd1-f999b3173e4f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7b8d8c02-680c-47c2-bdd1-f999b3173e4f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014 = data_2014.dropna(axis=1, how='all')"
      ],
      "metadata": {
        "id": "ziSrDUcjiy4j"
      },
      "execution_count": 71,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "8e7a4ae4-304f-4d44-93a7-3aaa3ccba011",
        "id": "YuJ1bp5liy4k"
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date     pH                               Chlorine Colour  \\\n",
              "                            Raw                PTC                Free  Raw T   \n",
              "0    2009-01-01 00:00:00   6.19               5.23   1.736666666666788     42   \n",
              "1    2009-01-02 00:00:00   6.31               5.23   1.736666666666424     43   \n",
              "2    2009-01-03 00:00:00   5.92               5.29  1.7366666666671517     54   \n",
              "3    2009-01-04 00:00:00   6.43               5.33  1.7366666666656965     55   \n",
              "4    2009-01-05 00:00:00  5.915               5.24   1.736666666668607   48.5   \n",
              "..                   ...    ...                ...                 ...    ...   \n",
              "361  2009-12-28 00:00:00   6.03               5.61                1.85     50   \n",
              "362  2009-12-29 00:00:00  6.125  5.515000000000001  1.8450000000000002     51   \n",
              "363  2009-12-30 00:00:00   6.01               5.35                1.82     45   \n",
              "364  2009-12-31 00:00:00   6.11               5.09                1.73     41   \n",
              "365                  NaN   5.82               5.19                1.79     40   \n",
              "\n",
              "             Turbidity                Total Dissolved Solids  ... Alkalinity  \\\n",
              "    Finish T       Raw Filter  Finish                 Finish  ...     Finish   \n",
              "0          0     0.389  0.102   0.246                   30.9  ...        6.4   \n",
              "1          0     0.429  0.097   0.231                   29.4  ...        6.9   \n",
              "2          3     0.426  0.083   0.248                   31.2  ...        6.3   \n",
              "3          1     0.416  0.092   0.205                     34  ...        6.6   \n",
              "4          0    0.4135  0.151  0.2525                   33.8  ...       6.35   \n",
              "..       ...       ...    ...     ...                    ...  ...        ...   \n",
              "361        0     0.627  0.091   1.134                   35.1  ...        6.2   \n",
              "362        0    0.6415  0.086   1.129                   33.6  ...        6.1   \n",
              "363        0     0.594  0.134    1.04                   28.3  ...          6   \n",
              "364        0     0.624  0.412   0.867                   29.9  ...        4.7   \n",
              "365        0     0.613  0.124   0.829                   32.9  ...        5.9   \n",
              "\n",
              "         Aluminum         Temperature            Cl Used            Cl Demand  \\\n",
              "    Finish (Free)              Finish                                           \n",
              "0           0.052                 2.5  48.90888888888885  0.12583333333333335   \n",
              "1           0.062                 2.4  48.90888888888885  0.12583333333333335   \n",
              "2           0.106                 2.4  48.90888888888885  0.12583333333333335   \n",
              "3           0.097                 2.5  48.90888888888885  0.12583333333333335   \n",
              "4           0.092                 2.5  48.90888888888885  0.12583333333333335   \n",
              "..            ...                 ...                ...                  ...   \n",
              "361         0.068                 3.6              55.41                 0.32   \n",
              "362        0.0825  3.6500000000000004              50.12                 0.27   \n",
              "363         0.097                 3.7              59.16                 0.34   \n",
              "364         0.091                 3.6              51.82                 0.44   \n",
              "365         0.074                 3.6              55.74                 0.35   \n",
              "\n",
              "    Flows within plant            Chemical Dosages                  \n",
              "                   Raw  Finish                Alum Limestone  Lime  \n",
              "0               14.207  13.163               29.99       5.8   8.3  \n",
              "1               14.207  13.163               29.32       5.8   8.3  \n",
              "2               14.207  13.163               32.28       5.8   8.3  \n",
              "3               14.207  13.163               33.49       5.4   8.8  \n",
              "4               14.207  13.163  32.885000000000005       5.6  8.55  \n",
              "..                 ...     ...                 ...       ...   ...  \n",
              "361             15.932  11.595               30.94         6   7.2  \n",
              "362             15.135  10.672              30.655         6     7  \n",
              "363             16.849  12.459               30.37         6     7  \n",
              "364             15.189  10.822               30.26         6     7  \n",
              "365             16.166  11.801               30.52         6     7  \n",
              "\n",
              "[366 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b686cc8f-64ec-4e1a-a017-9306105f3b6b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"2\" halign=\"left\">pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Colour</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Turbidity</th>\n",
              "      <th>Total Dissolved Solids</th>\n",
              "      <th>...</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Aluminum</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Cl Used</th>\n",
              "      <th>Cl Demand</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>Free</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Finish T</th>\n",
              "      <th>Raw</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish (Free)</th>\n",
              "      <th>Finish</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>5.23</td>\n",
              "      <td>1.736666666666788</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>0.389</td>\n",
              "      <td>0.102</td>\n",
              "      <td>0.246</td>\n",
              "      <td>30.9</td>\n",
              "      <td>...</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.052</td>\n",
              "      <td>2.5</td>\n",
              "      <td>48.90888888888885</td>\n",
              "      <td>0.12583333333333335</td>\n",
              "      <td>14.207</td>\n",
              "      <td>13.163</td>\n",
              "      <td>29.99</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.23</td>\n",
              "      <td>1.736666666666424</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0.429</td>\n",
              "      <td>0.097</td>\n",
              "      <td>0.231</td>\n",
              "      <td>29.4</td>\n",
              "      <td>...</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.062</td>\n",
              "      <td>2.4</td>\n",
              "      <td>48.90888888888885</td>\n",
              "      <td>0.12583333333333335</td>\n",
              "      <td>14.207</td>\n",
              "      <td>13.163</td>\n",
              "      <td>29.32</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>5.92</td>\n",
              "      <td>5.29</td>\n",
              "      <td>1.7366666666671517</td>\n",
              "      <td>54</td>\n",
              "      <td>3</td>\n",
              "      <td>0.426</td>\n",
              "      <td>0.083</td>\n",
              "      <td>0.248</td>\n",
              "      <td>31.2</td>\n",
              "      <td>...</td>\n",
              "      <td>6.3</td>\n",
              "      <td>0.106</td>\n",
              "      <td>2.4</td>\n",
              "      <td>48.90888888888885</td>\n",
              "      <td>0.12583333333333335</td>\n",
              "      <td>14.207</td>\n",
              "      <td>13.163</td>\n",
              "      <td>32.28</td>\n",
              "      <td>5.8</td>\n",
              "      <td>8.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.33</td>\n",
              "      <td>1.7366666666656965</td>\n",
              "      <td>55</td>\n",
              "      <td>1</td>\n",
              "      <td>0.416</td>\n",
              "      <td>0.092</td>\n",
              "      <td>0.205</td>\n",
              "      <td>34</td>\n",
              "      <td>...</td>\n",
              "      <td>6.6</td>\n",
              "      <td>0.097</td>\n",
              "      <td>2.5</td>\n",
              "      <td>48.90888888888885</td>\n",
              "      <td>0.12583333333333335</td>\n",
              "      <td>14.207</td>\n",
              "      <td>13.163</td>\n",
              "      <td>33.49</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>5.915</td>\n",
              "      <td>5.24</td>\n",
              "      <td>1.736666666668607</td>\n",
              "      <td>48.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4135</td>\n",
              "      <td>0.151</td>\n",
              "      <td>0.2525</td>\n",
              "      <td>33.8</td>\n",
              "      <td>...</td>\n",
              "      <td>6.35</td>\n",
              "      <td>0.092</td>\n",
              "      <td>2.5</td>\n",
              "      <td>48.90888888888885</td>\n",
              "      <td>0.12583333333333335</td>\n",
              "      <td>14.207</td>\n",
              "      <td>13.163</td>\n",
              "      <td>32.885000000000005</td>\n",
              "      <td>5.6</td>\n",
              "      <td>8.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.03</td>\n",
              "      <td>5.61</td>\n",
              "      <td>1.85</td>\n",
              "      <td>50</td>\n",
              "      <td>0</td>\n",
              "      <td>0.627</td>\n",
              "      <td>0.091</td>\n",
              "      <td>1.134</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0.068</td>\n",
              "      <td>3.6</td>\n",
              "      <td>55.41</td>\n",
              "      <td>0.32</td>\n",
              "      <td>15.932</td>\n",
              "      <td>11.595</td>\n",
              "      <td>30.94</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.125</td>\n",
              "      <td>5.515000000000001</td>\n",
              "      <td>1.8450000000000002</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6415</td>\n",
              "      <td>0.086</td>\n",
              "      <td>1.129</td>\n",
              "      <td>33.6</td>\n",
              "      <td>...</td>\n",
              "      <td>6.1</td>\n",
              "      <td>0.0825</td>\n",
              "      <td>3.6500000000000004</td>\n",
              "      <td>50.12</td>\n",
              "      <td>0.27</td>\n",
              "      <td>15.135</td>\n",
              "      <td>10.672</td>\n",
              "      <td>30.655</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.35</td>\n",
              "      <td>1.82</td>\n",
              "      <td>45</td>\n",
              "      <td>0</td>\n",
              "      <td>0.594</td>\n",
              "      <td>0.134</td>\n",
              "      <td>1.04</td>\n",
              "      <td>28.3</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0.097</td>\n",
              "      <td>3.7</td>\n",
              "      <td>59.16</td>\n",
              "      <td>0.34</td>\n",
              "      <td>16.849</td>\n",
              "      <td>12.459</td>\n",
              "      <td>30.37</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.09</td>\n",
              "      <td>1.73</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>0.624</td>\n",
              "      <td>0.412</td>\n",
              "      <td>0.867</td>\n",
              "      <td>29.9</td>\n",
              "      <td>...</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0.091</td>\n",
              "      <td>3.6</td>\n",
              "      <td>51.82</td>\n",
              "      <td>0.44</td>\n",
              "      <td>15.189</td>\n",
              "      <td>10.822</td>\n",
              "      <td>30.26</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.19</td>\n",
              "      <td>1.79</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.613</td>\n",
              "      <td>0.124</td>\n",
              "      <td>0.829</td>\n",
              "      <td>32.9</td>\n",
              "      <td>...</td>\n",
              "      <td>5.9</td>\n",
              "      <td>0.074</td>\n",
              "      <td>3.6</td>\n",
              "      <td>55.74</td>\n",
              "      <td>0.35</td>\n",
              "      <td>16.166</td>\n",
              "      <td>11.801</td>\n",
              "      <td>30.52</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 22 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b686cc8f-64ec-4e1a-a017-9306105f3b6b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b686cc8f-64ec-4e1a-a017-9306105f3b6b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b686cc8f-64ec-4e1a-a017-9306105f3b6b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2014.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6037eb6d-69be-4ce5-b7c2-b5371ad31c58",
        "id": "xPp0es3fiy4k"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2015**"
      ],
      "metadata": {
        "id": "Mp2FVHZ5zet9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_15 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2015')\n",
        "data_15.to_csv('2015.csv', index=False)"
      ],
      "metadata": {
        "id": "gG2tdBzlzet9"
      },
      "execution_count": 74,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015 = pd.read_csv('/content/2015.csv')"
      ],
      "metadata": {
        "id": "PU455s9Szet9"
      },
      "execution_count": 75,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ce96b0eb-7701-4a64-9280-0f95f11ed38f",
        "id": "ycPKRCLBzet-"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO  \\\n",
              "0                                                NaN                                                              \n",
              "1                                               Date                                                              \n",
              "2                                2009-01-01 00:00:00                                                              \n",
              "3                                2009-01-02 00:00:00                                                              \n",
              "4                                2009-01-03 00:00:00                                                              \n",
              "\n",
              "          Unnamed: 1 Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5   Unnamed: 6  \\\n",
              "0                 pH        NaN        NaN        NaN        NaN          NaN   \n",
              "1                Raw        PTC   PTC (OL)        SWC     Filter  Finish (OL)   \n",
              "2               5.78       5.55        NaN        NaN        NaN          NaN   \n",
              "3                6.5       5.28        NaN        NaN        NaN          NaN   \n",
              "4  6.140000000000001      5.415        NaN        NaN        NaN          NaN   \n",
              "\n",
              "  Unnamed: 7          Unnamed: 8 Unnamed: 9  ... Unnamed: 48 Unnamed: 49  \\\n",
              "0        NaN            Chlorine        NaN  ...         NaN         NaN   \n",
              "1     Finish                Free      Total  ...      Finish      Filter   \n",
              "2        7.3                1.83        NaN  ...       11.21         NaN   \n",
              "3       7.28                1.78        NaN  ...       12.21         NaN   \n",
              "4       7.29  1.8050000000000002        NaN  ...       11.24         NaN   \n",
              "\n",
              "  Unnamed: 50       Unnamed: 51 Unnamed: 52 Unnamed: 53       Unnamed: 54  \\\n",
              "0         NaN  Flows from plant         NaN         NaN  Chemical Dosages   \n",
              "1    Backwash          Bishop's     Botwood         GFW          Chlorine   \n",
              "2         NaN               NaN         NaN         NaN               NaN   \n",
              "3         NaN               NaN         NaN         NaN               NaN   \n",
              "4         NaN               NaN         NaN         NaN               NaN   \n",
              "\n",
              "  Unnamed: 55 Unnamed: 56  Unnamed: 57  \n",
              "0         NaN         NaN          NaN  \n",
              "1        Alum  Lime (Pre)  Lime (Post)  \n",
              "2       26.92           6          7.2  \n",
              "3       28.17           6          7.2  \n",
              "4      27.545           6          7.2  \n",
              "\n",
              "[5 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b63092c5-875d-425d-b3f6-420a68635786\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All of the data presented below was copied verbatim from spreadsheets transcribed by Debbie Rideout, Town PLO</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 48</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Free</td>\n",
              "      <td>Total</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>5.78</td>\n",
              "      <td>5.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1.83</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.92</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.28</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.17</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.140000000000001</td>\n",
              "      <td>5.415</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.8050000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.24</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.545</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b63092c5-875d-425d-b3f6-420a68635786')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b63092c5-875d-425d-b3f6-420a68635786 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b63092c5-875d-425d-b3f6-420a68635786');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015 = data_2015.drop(data_2015.index[0])"
      ],
      "metadata": {
        "id": "QV7NgawLzet-"
      },
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015.columns = pd.MultiIndex.from_tuples([('Date',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used', ' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "RfRKyXMJzet-"
      },
      "execution_count": 78,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015 = data_2015.drop(data_2015.index[0])"
      ],
      "metadata": {
        "id": "8xXg9SvUzet-"
      },
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "2c4fd0e0-4023-4131-e99e-6cb333b6607c",
        "id": "esJK2B8Czet_"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date                 pH                               \\\n",
              "                                        Raw     PTC PTC (OL)  SWC Filter   \n",
              "2    2009-01-01 00:00:00               5.78    5.55      NaN  NaN    NaN   \n",
              "3    2009-01-02 00:00:00                6.5    5.28      NaN  NaN    NaN   \n",
              "4    2009-01-03 00:00:00  6.140000000000001   5.415      NaN  NaN    NaN   \n",
              "5    2009-01-04 00:00:00               6.32  5.3475      NaN  NaN    NaN   \n",
              "6    2009-01-05 00:00:00               6.02    4.76      NaN  NaN    NaN   \n",
              "..                   ...                ...     ...      ...  ...    ...   \n",
              "363  2009-12-28 00:00:00               6.38    5.76      NaN  NaN    NaN   \n",
              "364  2009-12-29 00:00:00               6.17    5.68      NaN  NaN    NaN   \n",
              "365  2009-12-30 00:00:00               6.47    5.55      NaN  NaN    NaN   \n",
              "366  2009-12-31 00:00:00               6.48    5.49      NaN  NaN    NaN   \n",
              "367                  NaN               6.85    5.76      NaN  NaN    NaN   \n",
              "\n",
              "                                  Chlorine        ...  Flows within plant  \\\n",
              "    Finish (OL) Finish                Free Total  ...              Finish   \n",
              "2           NaN    7.3                1.83   NaN  ...               11.21   \n",
              "3           NaN   7.28                1.78   NaN  ...               12.21   \n",
              "4           NaN   7.29  1.8050000000000002   NaN  ...               11.24   \n",
              "5           NaN  7.285              1.7925   NaN  ...  11.725000000000001   \n",
              "6           NaN   6.76                1.63   NaN  ...              12.516   \n",
              "..          ...    ...                 ...   ...  ...                 ...   \n",
              "363         NaN  6.715  1.7766664123535156   NaN  ...              13.642   \n",
              "364         NaN   6.93  1.7766667938232423   NaN  ...              13.189   \n",
              "365         NaN   6.66  1.7766666030883789   NaN  ...              14.221   \n",
              "366         NaN   7.74  1.7766666984558106   NaN  ...              10.486   \n",
              "367         NaN   6.97  1.7766666507720947   NaN  ...              13.293   \n",
              "\n",
              "                    Flows from plant              Chemical Dosages            \\\n",
              "    Filter Backwash         Bishop s Botwood  GFW         Chlorine      Alum   \n",
              "2      NaN      NaN              NaN     NaN  NaN              NaN     26.92   \n",
              "3      NaN      NaN              NaN     NaN  NaN              NaN     28.17   \n",
              "4      NaN      NaN              NaN     NaN  NaN              NaN    27.545   \n",
              "5      NaN      NaN              NaN     NaN  NaN              NaN   27.8575   \n",
              "6      NaN      NaN              NaN     NaN  NaN              NaN  27.70125   \n",
              "..     ...      ...              ...     ...  ...              ...       ...   \n",
              "363    NaN      NaN              NaN     NaN  NaN              NaN     31.79   \n",
              "364    NaN      NaN              NaN     NaN  NaN              NaN      33.3   \n",
              "365    NaN      NaN              NaN     NaN  NaN              NaN     30.09   \n",
              "366    NaN      NaN              NaN     NaN  NaN              NaN     29.81   \n",
              "367    NaN      NaN              NaN     NaN  NaN              NaN     29.57   \n",
              "\n",
              "                    \n",
              "    Limestone Lime  \n",
              "2           6  7.2  \n",
              "3           6  7.2  \n",
              "4           6  7.2  \n",
              "5           6  7.2  \n",
              "6         5.7  7.2  \n",
              "..        ...  ...  \n",
              "363       5.9    7  \n",
              "364       5.9    7  \n",
              "365       5.9    7  \n",
              "366       5.9    7  \n",
              "367       5.9    7  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c24ade89-a6cf-48b5-a651-d908443c44d7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>5.78</td>\n",
              "      <td>5.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1.83</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.92</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.28</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.17</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.140000000000001</td>\n",
              "      <td>5.415</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.8050000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.24</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.545</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.3475</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.285</td>\n",
              "      <td>1.7925</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.725000000000001</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.8575</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>6.02</td>\n",
              "      <td>4.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.76</td>\n",
              "      <td>1.63</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.516</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.70125</td>\n",
              "      <td>5.7</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.38</td>\n",
              "      <td>5.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.715</td>\n",
              "      <td>1.7766664123535156</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.642</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>31.79</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.68</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.93</td>\n",
              "      <td>1.7766667938232423</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.189</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.3</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.47</td>\n",
              "      <td>5.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.66</td>\n",
              "      <td>1.7766666030883789</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.221</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.09</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.74</td>\n",
              "      <td>1.7766666984558106</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>10.486</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.81</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>NaN</td>\n",
              "      <td>6.85</td>\n",
              "      <td>5.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.97</td>\n",
              "      <td>1.7766666507720947</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.293</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.57</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c24ade89-a6cf-48b5-a651-d908443c44d7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c24ade89-a6cf-48b5-a651-d908443c44d7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c24ade89-a6cf-48b5-a651-d908443c44d7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015 = data_2015.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "5RssK2Nizet_"
      },
      "execution_count": 81,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "10693931-16c8-4502-a355-a513ef4507c5",
        "id": "4uA-9AKGzet_"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date                 pH                               \\\n",
              "                                        Raw     PTC PTC (OL)  SWC Filter   \n",
              "0    2009-01-01 00:00:00               5.78    5.55      NaN  NaN    NaN   \n",
              "1    2009-01-02 00:00:00                6.5    5.28      NaN  NaN    NaN   \n",
              "2    2009-01-03 00:00:00  6.140000000000001   5.415      NaN  NaN    NaN   \n",
              "3    2009-01-04 00:00:00               6.32  5.3475      NaN  NaN    NaN   \n",
              "4    2009-01-05 00:00:00               6.02    4.76      NaN  NaN    NaN   \n",
              "..                   ...                ...     ...      ...  ...    ...   \n",
              "361  2009-12-28 00:00:00               6.38    5.76      NaN  NaN    NaN   \n",
              "362  2009-12-29 00:00:00               6.17    5.68      NaN  NaN    NaN   \n",
              "363  2009-12-30 00:00:00               6.47    5.55      NaN  NaN    NaN   \n",
              "364  2009-12-31 00:00:00               6.48    5.49      NaN  NaN    NaN   \n",
              "365                  NaN               6.85    5.76      NaN  NaN    NaN   \n",
              "\n",
              "                                  Chlorine        ...  Flows within plant  \\\n",
              "    Finish (OL) Finish                Free Total  ...              Finish   \n",
              "0           NaN    7.3                1.83   NaN  ...               11.21   \n",
              "1           NaN   7.28                1.78   NaN  ...               12.21   \n",
              "2           NaN   7.29  1.8050000000000002   NaN  ...               11.24   \n",
              "3           NaN  7.285              1.7925   NaN  ...  11.725000000000001   \n",
              "4           NaN   6.76                1.63   NaN  ...              12.516   \n",
              "..          ...    ...                 ...   ...  ...                 ...   \n",
              "361         NaN  6.715  1.7766664123535156   NaN  ...              13.642   \n",
              "362         NaN   6.93  1.7766667938232423   NaN  ...              13.189   \n",
              "363         NaN   6.66  1.7766666030883789   NaN  ...              14.221   \n",
              "364         NaN   7.74  1.7766666984558106   NaN  ...              10.486   \n",
              "365         NaN   6.97  1.7766666507720947   NaN  ...              13.293   \n",
              "\n",
              "                    Flows from plant              Chemical Dosages            \\\n",
              "    Filter Backwash         Bishop s Botwood  GFW         Chlorine      Alum   \n",
              "0      NaN      NaN              NaN     NaN  NaN              NaN     26.92   \n",
              "1      NaN      NaN              NaN     NaN  NaN              NaN     28.17   \n",
              "2      NaN      NaN              NaN     NaN  NaN              NaN    27.545   \n",
              "3      NaN      NaN              NaN     NaN  NaN              NaN   27.8575   \n",
              "4      NaN      NaN              NaN     NaN  NaN              NaN  27.70125   \n",
              "..     ...      ...              ...     ...  ...              ...       ...   \n",
              "361    NaN      NaN              NaN     NaN  NaN              NaN     31.79   \n",
              "362    NaN      NaN              NaN     NaN  NaN              NaN      33.3   \n",
              "363    NaN      NaN              NaN     NaN  NaN              NaN     30.09   \n",
              "364    NaN      NaN              NaN     NaN  NaN              NaN     29.81   \n",
              "365    NaN      NaN              NaN     NaN  NaN              NaN     29.57   \n",
              "\n",
              "                    \n",
              "    Limestone Lime  \n",
              "0           6  7.2  \n",
              "1           6  7.2  \n",
              "2           6  7.2  \n",
              "3           6  7.2  \n",
              "4         5.7  7.2  \n",
              "..        ...  ...  \n",
              "361       5.9    7  \n",
              "362       5.9    7  \n",
              "363       5.9    7  \n",
              "364       5.9    7  \n",
              "365       5.9    7  \n",
              "\n",
              "[366 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-56c7329a-57ae-48e9-b413-e5fe7d54931f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>5.78</td>\n",
              "      <td>5.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1.83</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26.92</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.28</td>\n",
              "      <td>1.78</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.21</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>28.17</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.140000000000001</td>\n",
              "      <td>5.415</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.8050000000000002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.24</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.545</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.3475</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.285</td>\n",
              "      <td>1.7925</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>11.725000000000001</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.8575</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>6.02</td>\n",
              "      <td>4.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.76</td>\n",
              "      <td>1.63</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.516</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.70125</td>\n",
              "      <td>5.7</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.38</td>\n",
              "      <td>5.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.715</td>\n",
              "      <td>1.7766664123535156</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.642</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>31.79</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.68</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.93</td>\n",
              "      <td>1.7766667938232423</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.189</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>33.3</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.47</td>\n",
              "      <td>5.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.66</td>\n",
              "      <td>1.7766666030883789</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>14.221</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.09</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.49</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.74</td>\n",
              "      <td>1.7766666984558106</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>10.486</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.81</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>NaN</td>\n",
              "      <td>6.85</td>\n",
              "      <td>5.76</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.97</td>\n",
              "      <td>1.7766666507720947</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>13.293</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.57</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56c7329a-57ae-48e9-b413-e5fe7d54931f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-56c7329a-57ae-48e9-b413-e5fe7d54931f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-56c7329a-57ae-48e9-b413-e5fe7d54931f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015 = data_2015.dropna(axis=1, how='all')"
      ],
      "metadata": {
        "id": "-gdcx2rczet_"
      },
      "execution_count": 83,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "8356cb3c-99d5-41f6-f966-25bf9dacc5bd",
        "id": "5eMoAe43zet_"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date                 pH                 \\\n",
              "                                        Raw     PTC Finish   \n",
              "0    2009-01-01 00:00:00               5.78    5.55    7.3   \n",
              "1    2009-01-02 00:00:00                6.5    5.28   7.28   \n",
              "2    2009-01-03 00:00:00  6.140000000000001   5.415   7.29   \n",
              "3    2009-01-04 00:00:00               6.32  5.3475  7.285   \n",
              "4    2009-01-05 00:00:00               6.02    4.76   6.76   \n",
              "..                   ...                ...     ...    ...   \n",
              "361  2009-12-28 00:00:00               6.38    5.76  6.715   \n",
              "362  2009-12-29 00:00:00               6.17    5.68   6.93   \n",
              "363  2009-12-30 00:00:00               6.47    5.55   6.66   \n",
              "364  2009-12-31 00:00:00               6.48    5.49   7.74   \n",
              "365                  NaN               6.85    5.76   6.97   \n",
              "\n",
              "               Chlorine Colour                    Turbidity         \\\n",
              "                   Free  Raw T Finish T                 Raw Filter   \n",
              "0                  1.83     43        0               0.643  0.133   \n",
              "1                  1.78     39        0                 0.6  0.397   \n",
              "2    1.8050000000000002     41        0  0.6214999999999999  0.265   \n",
              "3                1.7925     40        0  0.6107499999999999  0.331   \n",
              "4                  1.63     40        0               0.609  0.264   \n",
              "..                  ...    ...      ...                 ...    ...   \n",
              "361  1.7766664123535156   29.5        0              0.5385   0.08   \n",
              "362  1.7766667938232423     30        0             0.53625  0.063   \n",
              "363  1.7766666030883789     31        0               0.533  0.067   \n",
              "364  1.7766666984558106     30        0               0.526  0.078   \n",
              "365  1.7766666507720947     37        0               0.613  0.137   \n",
              "\n",
              "                          ... Alkalinity              Aluminum  \\\n",
              "                  Finish  ...     Finish         Finish (Free)   \n",
              "0                  0.176  ...        6.2                 0.063   \n",
              "1                  0.311  ...        4.8                 0.052   \n",
              "2                 0.2435  ...        5.5  0.057499999999999996   \n",
              "3                0.27725  ...       5.15   0.05474999999999999   \n",
              "4                  0.561  ...        6.7                 0.071   \n",
              "..                   ...  ...        ...                   ...   \n",
              "361  0.35350000000000004  ...       6.25  0.025500000000000002   \n",
              "362                0.374  ...        6.4                 0.029   \n",
              "363                0.292  ...        6.2                 0.037   \n",
              "364                0.868  ...          6                 0.041   \n",
              "365                0.611  ...        6.8                 0.005   \n",
              "\n",
              "            Temperature    Cl Used           Cl Demand Flows within plant  \\\n",
              "                 Finish                                               Raw   \n",
              "0                   3.5      52.92                0.31              15.48   \n",
              "1                   3.7      52.92                0.19               15.7   \n",
              "2                   3.6      52.92                0.25              15.58   \n",
              "3    3.6500000000000004      52.92                0.22              15.64   \n",
              "4                   3.7      67.56                0.82             16.838   \n",
              "..                  ...        ...                 ...                ...   \n",
              "361  3.8499999999999996     77.175  0.9100000762939455            14.9215   \n",
              "362                 3.9      79.38  0.9099999618530276             15.384   \n",
              "363                 3.8    78.2775  0.9100000190734865             15.047   \n",
              "364                 3.2   78.82875   0.909999990463257             14.889   \n",
              "365                 3.4  78.553125  0.9100000047683717             14.587   \n",
              "\n",
              "                        Chemical Dosages                 \n",
              "                 Finish             Alum Limestone Lime  \n",
              "0                 11.21            26.92         6  7.2  \n",
              "1                 12.21            28.17         6  7.2  \n",
              "2                 11.24           27.545         6  7.2  \n",
              "3    11.725000000000001          27.8575         6  7.2  \n",
              "4                12.516         27.70125       5.7  7.2  \n",
              "..                  ...              ...       ...  ...  \n",
              "361              13.642            31.79       5.9    7  \n",
              "362              13.189             33.3       5.9    7  \n",
              "363              14.221            30.09       5.9    7  \n",
              "364              10.486            29.81       5.9    7  \n",
              "365              13.293            29.57       5.9    7  \n",
              "\n",
              "[366 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-322331c2-c29a-461c-b9f6-753a6ca2bdd1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"3\" halign=\"left\">pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Colour</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Turbidity</th>\n",
              "      <th>...</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Aluminum</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Cl Used</th>\n",
              "      <th>Cl Demand</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Finish T</th>\n",
              "      <th>Raw</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish (Free)</th>\n",
              "      <th>Finish</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2009-01-01 00:00:00</td>\n",
              "      <td>5.78</td>\n",
              "      <td>5.55</td>\n",
              "      <td>7.3</td>\n",
              "      <td>1.83</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0.643</td>\n",
              "      <td>0.133</td>\n",
              "      <td>0.176</td>\n",
              "      <td>...</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0.063</td>\n",
              "      <td>3.5</td>\n",
              "      <td>52.92</td>\n",
              "      <td>0.31</td>\n",
              "      <td>15.48</td>\n",
              "      <td>11.21</td>\n",
              "      <td>26.92</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2009-01-02 00:00:00</td>\n",
              "      <td>6.5</td>\n",
              "      <td>5.28</td>\n",
              "      <td>7.28</td>\n",
              "      <td>1.78</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.397</td>\n",
              "      <td>0.311</td>\n",
              "      <td>...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>0.052</td>\n",
              "      <td>3.7</td>\n",
              "      <td>52.92</td>\n",
              "      <td>0.19</td>\n",
              "      <td>15.7</td>\n",
              "      <td>12.21</td>\n",
              "      <td>28.17</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2009-01-03 00:00:00</td>\n",
              "      <td>6.140000000000001</td>\n",
              "      <td>5.415</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.8050000000000002</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6214999999999999</td>\n",
              "      <td>0.265</td>\n",
              "      <td>0.2435</td>\n",
              "      <td>...</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.057499999999999996</td>\n",
              "      <td>3.6</td>\n",
              "      <td>52.92</td>\n",
              "      <td>0.25</td>\n",
              "      <td>15.58</td>\n",
              "      <td>11.24</td>\n",
              "      <td>27.545</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2009-01-04 00:00:00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.3475</td>\n",
              "      <td>7.285</td>\n",
              "      <td>1.7925</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6107499999999999</td>\n",
              "      <td>0.331</td>\n",
              "      <td>0.27725</td>\n",
              "      <td>...</td>\n",
              "      <td>5.15</td>\n",
              "      <td>0.05474999999999999</td>\n",
              "      <td>3.6500000000000004</td>\n",
              "      <td>52.92</td>\n",
              "      <td>0.22</td>\n",
              "      <td>15.64</td>\n",
              "      <td>11.725000000000001</td>\n",
              "      <td>27.8575</td>\n",
              "      <td>6</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2009-01-05 00:00:00</td>\n",
              "      <td>6.02</td>\n",
              "      <td>4.76</td>\n",
              "      <td>6.76</td>\n",
              "      <td>1.63</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>0.609</td>\n",
              "      <td>0.264</td>\n",
              "      <td>0.561</td>\n",
              "      <td>...</td>\n",
              "      <td>6.7</td>\n",
              "      <td>0.071</td>\n",
              "      <td>3.7</td>\n",
              "      <td>67.56</td>\n",
              "      <td>0.82</td>\n",
              "      <td>16.838</td>\n",
              "      <td>12.516</td>\n",
              "      <td>27.70125</td>\n",
              "      <td>5.7</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2009-12-28 00:00:00</td>\n",
              "      <td>6.38</td>\n",
              "      <td>5.76</td>\n",
              "      <td>6.715</td>\n",
              "      <td>1.7766664123535156</td>\n",
              "      <td>29.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5385</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.35350000000000004</td>\n",
              "      <td>...</td>\n",
              "      <td>6.25</td>\n",
              "      <td>0.025500000000000002</td>\n",
              "      <td>3.8499999999999996</td>\n",
              "      <td>77.175</td>\n",
              "      <td>0.9100000762939455</td>\n",
              "      <td>14.9215</td>\n",
              "      <td>13.642</td>\n",
              "      <td>31.79</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2009-12-29 00:00:00</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.68</td>\n",
              "      <td>6.93</td>\n",
              "      <td>1.7766667938232423</td>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "      <td>0.53625</td>\n",
              "      <td>0.063</td>\n",
              "      <td>0.374</td>\n",
              "      <td>...</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.029</td>\n",
              "      <td>3.9</td>\n",
              "      <td>79.38</td>\n",
              "      <td>0.9099999618530276</td>\n",
              "      <td>15.384</td>\n",
              "      <td>13.189</td>\n",
              "      <td>33.3</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2009-12-30 00:00:00</td>\n",
              "      <td>6.47</td>\n",
              "      <td>5.55</td>\n",
              "      <td>6.66</td>\n",
              "      <td>1.7766666030883789</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0.533</td>\n",
              "      <td>0.067</td>\n",
              "      <td>0.292</td>\n",
              "      <td>...</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0.037</td>\n",
              "      <td>3.8</td>\n",
              "      <td>78.2775</td>\n",
              "      <td>0.9100000190734865</td>\n",
              "      <td>15.047</td>\n",
              "      <td>14.221</td>\n",
              "      <td>30.09</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2009-12-31 00:00:00</td>\n",
              "      <td>6.48</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.74</td>\n",
              "      <td>1.7766666984558106</td>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "      <td>0.526</td>\n",
              "      <td>0.078</td>\n",
              "      <td>0.868</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0.041</td>\n",
              "      <td>3.2</td>\n",
              "      <td>78.82875</td>\n",
              "      <td>0.909999990463257</td>\n",
              "      <td>14.889</td>\n",
              "      <td>10.486</td>\n",
              "      <td>29.81</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>NaN</td>\n",
              "      <td>6.85</td>\n",
              "      <td>5.76</td>\n",
              "      <td>6.97</td>\n",
              "      <td>1.7766666507720947</td>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>0.613</td>\n",
              "      <td>0.137</td>\n",
              "      <td>0.611</td>\n",
              "      <td>...</td>\n",
              "      <td>6.8</td>\n",
              "      <td>0.005</td>\n",
              "      <td>3.4</td>\n",
              "      <td>78.553125</td>\n",
              "      <td>0.9100000047683717</td>\n",
              "      <td>14.587</td>\n",
              "      <td>13.293</td>\n",
              "      <td>29.57</td>\n",
              "      <td>5.9</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-322331c2-c29a-461c-b9f6-753a6ca2bdd1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-322331c2-c29a-461c-b9f6-753a6ca2bdd1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-322331c2-c29a-461c-b9f6-753a6ca2bdd1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2015.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b8b78f27-25a3-4372-a833-e631d7ab409a",
        "id": "vKi9-4YPzeuA"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2019**"
      ],
      "metadata": {
        "id": "WHKx3lwW3tMW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_19 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2019')\n",
        "data_19.to_csv('2019.csv', index=False)"
      ],
      "metadata": {
        "id": "OrtpaKot3gkX"
      },
      "execution_count": 86,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019 = pd.read_csv('/content/2019.csv')"
      ],
      "metadata": {
        "id": "bc5d3kmN3gkX"
      },
      "execution_count": 87,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "7fbbe363-9f36-4368-e8d5-1bb441488607",
        "id": "EKQSTjTw3gkY"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.  \\\n",
              "0                                                NaN                                                                           \n",
              "1                                               Date                                                                           \n",
              "2                                2019-01-01 00:00:00                                                                           \n",
              "3                                2019-01-02 00:00:00                                                                           \n",
              "4                                2019-01-03 00:00:00                                                                           \n",
              "\n",
              "   Unnamed: 1  Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5 Unnamed: 6  \\\n",
              "0         NaN         NaN         pH        NaN        NaN        NaN   \n",
              "1    Shortcut  Start Time        Raw        PTC   PTC (OL)        SWC   \n",
              "2  Click Here    00:00:00          0          0          0          0   \n",
              "3  Click Here    00:00:00       6.14       5.29       5.23       5.36   \n",
              "4  Click Here    00:00:00       6.04       5.29       5.24       5.37   \n",
              "\n",
              "  Unnamed: 7   Unnamed: 8 Unnamed: 9  ... Unnamed: 49 Unnamed: 50 Unnamed: 51  \\\n",
              "0        NaN          NaN        NaN  ...         NaN         NaN         NaN   \n",
              "1     Filter  Finish (OL)     Finish  ...      Finish      Filter    Backwash   \n",
              "2          0            0          0  ...      12.885      13.866       0.981   \n",
              "3       5.39         7.16       7.11  ...       13.49       14.47        0.98   \n",
              "4       5.41         7.19       7.25  ...         9.1       10.08        0.98   \n",
              "\n",
              "        Unnamed: 52 Unnamed: 53 Unnamed: 54         Unnamed: 55 Unnamed: 56  \\\n",
              "0  Flows from plant         NaN         NaN    Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW            Chlorine        Alum   \n",
              "2             1.655        2.36        8.87  2.9917842452464103           0   \n",
              "3             1.568       2.399       9.523  2.8764551519644184       28.49   \n",
              "4             1.542       2.427       5.131   4.180292307692309       30.32   \n",
              "\n",
              "  Unnamed: 57  Unnamed: 58  \n",
              "0         NaN          NaN  \n",
              "1  Lime (Pre)  Lime (Post)  \n",
              "2           5            9  \n",
              "3           5            9  \n",
              "4           5            9  \n",
              "\n",
              "[5 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-562423e4-ffde-4409-bd62-17298321de15\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "      <th>Unnamed: 58</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Shortcut</td>\n",
              "      <td>Start Time</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2019-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.885</td>\n",
              "      <td>13.866</td>\n",
              "      <td>0.981</td>\n",
              "      <td>1.655</td>\n",
              "      <td>2.36</td>\n",
              "      <td>8.87</td>\n",
              "      <td>2.9917842452464103</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2019-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.16</td>\n",
              "      <td>7.11</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.47</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.568</td>\n",
              "      <td>2.399</td>\n",
              "      <td>9.523</td>\n",
              "      <td>2.8764551519644184</td>\n",
              "      <td>28.49</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2019-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.04</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.41</td>\n",
              "      <td>7.19</td>\n",
              "      <td>7.25</td>\n",
              "      <td>...</td>\n",
              "      <td>9.1</td>\n",
              "      <td>10.08</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.542</td>\n",
              "      <td>2.427</td>\n",
              "      <td>5.131</td>\n",
              "      <td>4.180292307692309</td>\n",
              "      <td>30.32</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-562423e4-ffde-4409-bd62-17298321de15')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-562423e4-ffde-4409-bd62-17298321de15 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-562423e4-ffde-4409-bd62-17298321de15');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019 = data_2019.drop(data_2019.index[0])"
      ],
      "metadata": {
        "id": "DLjxyenA3gkZ"
      },
      "execution_count": 89,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019.columns = pd.MultiIndex.from_tuples([('Date',' '),('Shortcut',' '),('Start Time',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "U1u2gBA33gkZ"
      },
      "execution_count": 90,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019 = data_2019.drop(data_2019.index[0])"
      ],
      "metadata": {
        "id": "WvZgp9fY3gka"
      },
      "execution_count": 91,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "99056e37-1bc1-4e37-bc8e-c9fdc3e95b80",
        "id": "BtdTjOe63gka"
      },
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "2    2019-01-01 00:00:00  Click Here   00:00:00     0     0        0     0   \n",
              "3    2019-01-02 00:00:00  Click Here   00:00:00  6.14  5.29     5.23  5.36   \n",
              "4    2019-01-03 00:00:00  Click Here   00:00:00  6.04  5.29     5.24  5.37   \n",
              "5    2019-01-04 00:00:00  Click Here   00:00:00  6.44  5.49     5.19  5.51   \n",
              "6    2019-01-05 00:00:00  Click Here   00:00:00  6.76  5.49     5.35   5.5   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "362  2019-12-27 00:00:00  Click Here   00:00:00  6.14  5.11     5.22  5.19   \n",
              "363  2019-12-28 00:00:00  Click Here   00:00:00  6.12  5.16     5.23  5.21   \n",
              "364  2019-12-29 00:00:00  Click Here   00:00:00     0     0        0     0   \n",
              "365  2019-12-30 00:00:00  Click Here   00:00:00  6.09  5.24     5.19   5.3   \n",
              "366  2019-12-31 00:00:00  Click Here   00:00:00  6.09  5.17     5.22  5.24   \n",
              "\n",
              "                               ... Flows within plant                   \\\n",
              "    Filter Finish (OL) Finish  ...             Finish  Filter Backwash   \n",
              "2        0           0      0  ...             12.885  13.866    0.981   \n",
              "3     5.39        7.16   7.11  ...              13.49   14.47     0.98   \n",
              "4     5.41        7.19   7.25  ...                9.1   10.08     0.98   \n",
              "5     5.48        6.71   7.02  ...             12.882  14.838    1.956   \n",
              "6     5.49        6.45   7.23  ...              13.49   14.49        1   \n",
              "..     ...         ...    ...  ...                ...     ...      ...   \n",
              "362   5.22        6.24   7.83  ...              13.14   14.12     0.98   \n",
              "363   5.24        6.83   7.04  ...              13.49   14.47     0.98   \n",
              "364      0           0      0  ...             12.534  13.503    0.969   \n",
              "365   5.34        7.01   6.76  ...             12.923  13.898    0.975   \n",
              "366   5.27        7.04   7.18  ...              12.97   13.94     0.97   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                        \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone Lime  \n",
              "2              1.655    2.36   8.87  2.9917842452464103      0         5    9  \n",
              "3              1.568   2.399  9.523  2.8764551519644184  28.49         5    9  \n",
              "4              1.542   2.427  5.131   4.180292307692309  30.32         5    9  \n",
              "5              1.542   2.441  8.899  3.1440257723955907  27.95         5    9  \n",
              "6                  0       0      0   2.930638991845812  32.14       5.2  9.4  \n",
              "..               ...     ...    ...                 ...    ...       ...  ...  \n",
              "362            1.575   2.504  7.854  3.1790365296803658  30.69       5.6  9.9  \n",
              "363                0       0      0  2.9289562638991846  30.69       5.6  9.9  \n",
              "364                0       0      0  2.9042380724429555      0       5.6  9.9  \n",
              "365                0       0      0   2.937316412597694  30.06       5.6  9.9  \n",
              "366            1.575   2.504  7.854  3.0873400154202004  30.44       5.6  9.9  \n",
              "\n",
              "[365 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bdd0ac64-da2c-4464-9878-1263ff4686d8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2019-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.885</td>\n",
              "      <td>13.866</td>\n",
              "      <td>0.981</td>\n",
              "      <td>1.655</td>\n",
              "      <td>2.36</td>\n",
              "      <td>8.87</td>\n",
              "      <td>2.9917842452464103</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2019-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.16</td>\n",
              "      <td>7.11</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.47</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.568</td>\n",
              "      <td>2.399</td>\n",
              "      <td>9.523</td>\n",
              "      <td>2.8764551519644184</td>\n",
              "      <td>28.49</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2019-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.04</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.41</td>\n",
              "      <td>7.19</td>\n",
              "      <td>7.25</td>\n",
              "      <td>...</td>\n",
              "      <td>9.1</td>\n",
              "      <td>10.08</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.542</td>\n",
              "      <td>2.427</td>\n",
              "      <td>5.131</td>\n",
              "      <td>4.180292307692309</td>\n",
              "      <td>30.32</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2019-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.44</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.48</td>\n",
              "      <td>6.71</td>\n",
              "      <td>7.02</td>\n",
              "      <td>...</td>\n",
              "      <td>12.882</td>\n",
              "      <td>14.838</td>\n",
              "      <td>1.956</td>\n",
              "      <td>1.542</td>\n",
              "      <td>2.441</td>\n",
              "      <td>8.899</td>\n",
              "      <td>3.1440257723955907</td>\n",
              "      <td>27.95</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2019-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.76</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.49</td>\n",
              "      <td>6.45</td>\n",
              "      <td>7.23</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.49</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.930638991845812</td>\n",
              "      <td>32.14</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2019-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.22</td>\n",
              "      <td>6.24</td>\n",
              "      <td>7.83</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>14.12</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>3.1790365296803658</td>\n",
              "      <td>30.69</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2019-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>6.83</td>\n",
              "      <td>7.04</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.47</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9289562638991846</td>\n",
              "      <td>30.69</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2019-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.534</td>\n",
              "      <td>13.503</td>\n",
              "      <td>0.969</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9042380724429555</td>\n",
              "      <td>0</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2019-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.34</td>\n",
              "      <td>7.01</td>\n",
              "      <td>6.76</td>\n",
              "      <td>...</td>\n",
              "      <td>12.923</td>\n",
              "      <td>13.898</td>\n",
              "      <td>0.975</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.937316412597694</td>\n",
              "      <td>30.06</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2019-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.27</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.18</td>\n",
              "      <td>...</td>\n",
              "      <td>12.97</td>\n",
              "      <td>13.94</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>3.0873400154202004</td>\n",
              "      <td>30.44</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdd0ac64-da2c-4464-9878-1263ff4686d8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bdd0ac64-da2c-4464-9878-1263ff4686d8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bdd0ac64-da2c-4464-9878-1263ff4686d8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019 = data_2019.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "f87Yvgi03gkb"
      },
      "execution_count": 93,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "7d9a1fc8-0260-48c4-e61b-6749c21dd2f2",
        "id": "ah8C2gH33gkb"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "0    2019-01-01 00:00:00  Click Here   00:00:00     0     0        0     0   \n",
              "1    2019-01-02 00:00:00  Click Here   00:00:00  6.14  5.29     5.23  5.36   \n",
              "2    2019-01-03 00:00:00  Click Here   00:00:00  6.04  5.29     5.24  5.37   \n",
              "3    2019-01-04 00:00:00  Click Here   00:00:00  6.44  5.49     5.19  5.51   \n",
              "4    2019-01-05 00:00:00  Click Here   00:00:00  6.76  5.49     5.35   5.5   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "360  2019-12-27 00:00:00  Click Here   00:00:00  6.14  5.11     5.22  5.19   \n",
              "361  2019-12-28 00:00:00  Click Here   00:00:00  6.12  5.16     5.23  5.21   \n",
              "362  2019-12-29 00:00:00  Click Here   00:00:00     0     0        0     0   \n",
              "363  2019-12-30 00:00:00  Click Here   00:00:00  6.09  5.24     5.19   5.3   \n",
              "364  2019-12-31 00:00:00  Click Here   00:00:00  6.09  5.17     5.22  5.24   \n",
              "\n",
              "                               ... Flows within plant                   \\\n",
              "    Filter Finish (OL) Finish  ...             Finish  Filter Backwash   \n",
              "0        0           0      0  ...             12.885  13.866    0.981   \n",
              "1     5.39        7.16   7.11  ...              13.49   14.47     0.98   \n",
              "2     5.41        7.19   7.25  ...                9.1   10.08     0.98   \n",
              "3     5.48        6.71   7.02  ...             12.882  14.838    1.956   \n",
              "4     5.49        6.45   7.23  ...              13.49   14.49        1   \n",
              "..     ...         ...    ...  ...                ...     ...      ...   \n",
              "360   5.22        6.24   7.83  ...              13.14   14.12     0.98   \n",
              "361   5.24        6.83   7.04  ...              13.49   14.47     0.98   \n",
              "362      0           0      0  ...             12.534  13.503    0.969   \n",
              "363   5.34        7.01   6.76  ...             12.923  13.898    0.975   \n",
              "364   5.27        7.04   7.18  ...              12.97   13.94     0.97   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                        \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone Lime  \n",
              "0              1.655    2.36   8.87  2.9917842452464103      0         5    9  \n",
              "1              1.568   2.399  9.523  2.8764551519644184  28.49         5    9  \n",
              "2              1.542   2.427  5.131   4.180292307692309  30.32         5    9  \n",
              "3              1.542   2.441  8.899  3.1440257723955907  27.95         5    9  \n",
              "4                  0       0      0   2.930638991845812  32.14       5.2  9.4  \n",
              "..               ...     ...    ...                 ...    ...       ...  ...  \n",
              "360            1.575   2.504  7.854  3.1790365296803658  30.69       5.6  9.9  \n",
              "361                0       0      0  2.9289562638991846  30.69       5.6  9.9  \n",
              "362                0       0      0  2.9042380724429555      0       5.6  9.9  \n",
              "363                0       0      0   2.937316412597694  30.06       5.6  9.9  \n",
              "364            1.575   2.504  7.854  3.0873400154202004  30.44       5.6  9.9  \n",
              "\n",
              "[365 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-22efb5c6-4b24-4948-b94c-81c339262775\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2019-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.885</td>\n",
              "      <td>13.866</td>\n",
              "      <td>0.981</td>\n",
              "      <td>1.655</td>\n",
              "      <td>2.36</td>\n",
              "      <td>8.87</td>\n",
              "      <td>2.9917842452464103</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2019-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.16</td>\n",
              "      <td>7.11</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.47</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.568</td>\n",
              "      <td>2.399</td>\n",
              "      <td>9.523</td>\n",
              "      <td>2.8764551519644184</td>\n",
              "      <td>28.49</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2019-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.04</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.41</td>\n",
              "      <td>7.19</td>\n",
              "      <td>7.25</td>\n",
              "      <td>...</td>\n",
              "      <td>9.1</td>\n",
              "      <td>10.08</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.542</td>\n",
              "      <td>2.427</td>\n",
              "      <td>5.131</td>\n",
              "      <td>4.180292307692309</td>\n",
              "      <td>30.32</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2019-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.44</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.48</td>\n",
              "      <td>6.71</td>\n",
              "      <td>7.02</td>\n",
              "      <td>...</td>\n",
              "      <td>12.882</td>\n",
              "      <td>14.838</td>\n",
              "      <td>1.956</td>\n",
              "      <td>1.542</td>\n",
              "      <td>2.441</td>\n",
              "      <td>8.899</td>\n",
              "      <td>3.1440257723955907</td>\n",
              "      <td>27.95</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2019-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.76</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.49</td>\n",
              "      <td>6.45</td>\n",
              "      <td>7.23</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.49</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.930638991845812</td>\n",
              "      <td>32.14</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2019-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.22</td>\n",
              "      <td>6.24</td>\n",
              "      <td>7.83</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>14.12</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>3.1790365296803658</td>\n",
              "      <td>30.69</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2019-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>6.83</td>\n",
              "      <td>7.04</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.47</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9289562638991846</td>\n",
              "      <td>30.69</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2019-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.534</td>\n",
              "      <td>13.503</td>\n",
              "      <td>0.969</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9042380724429555</td>\n",
              "      <td>0</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2019-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.34</td>\n",
              "      <td>7.01</td>\n",
              "      <td>6.76</td>\n",
              "      <td>...</td>\n",
              "      <td>12.923</td>\n",
              "      <td>13.898</td>\n",
              "      <td>0.975</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.937316412597694</td>\n",
              "      <td>30.06</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2019-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.27</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.18</td>\n",
              "      <td>...</td>\n",
              "      <td>12.97</td>\n",
              "      <td>13.94</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>3.0873400154202004</td>\n",
              "      <td>30.44</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22efb5c6-4b24-4948-b94c-81c339262775')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-22efb5c6-4b24-4948-b94c-81c339262775 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-22efb5c6-4b24-4948-b94c-81c339262775');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019 = data_2019.drop(labels=['Shortcut', 'Start Time'], axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LOuNIP9SB3OZ",
        "outputId": "eae4362a-6696-48b9-b90d-5aa00959453b"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-95-e368b2b5c723>:1: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.\n",
            "  data_2019 = data_2019.drop(labels=['Shortcut', 'Start Time'], axis=1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "d6f68ce9-e984-4f09-8789-c83407c40f51",
        "id": "wykBKF1s3gkb"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                 \\\n",
              "                           Raw   PTC PTC (OL)   SWC Filter Finish (OL) Finish   \n",
              "0    2019-01-01 00:00:00     0     0        0     0      0           0      0   \n",
              "1    2019-01-02 00:00:00  6.14  5.29     5.23  5.36   5.39        7.16   7.11   \n",
              "2    2019-01-03 00:00:00  6.04  5.29     5.24  5.37   5.41        7.19   7.25   \n",
              "3    2019-01-04 00:00:00  6.44  5.49     5.19  5.51   5.48        6.71   7.02   \n",
              "4    2019-01-05 00:00:00  6.76  5.49     5.35   5.5   5.49        6.45   7.23   \n",
              "..                   ...   ...   ...      ...   ...    ...         ...    ...   \n",
              "360  2019-12-27 00:00:00  6.14  5.11     5.22  5.19   5.22        6.24   7.83   \n",
              "361  2019-12-28 00:00:00  6.12  5.16     5.23  5.21   5.24        6.83   7.04   \n",
              "362  2019-12-29 00:00:00     0     0        0     0      0           0      0   \n",
              "363  2019-12-30 00:00:00  6.09  5.24     5.19   5.3   5.34        7.01   6.76   \n",
              "364  2019-12-31 00:00:00  6.09  5.17     5.22  5.24   5.27        7.04   7.18   \n",
              "\n",
              "    Chlorine        ... Flows within plant                  Flows from plant  \\\n",
              "        Free Total  ...             Finish  Filter Backwash         Bishop s   \n",
              "0          0     0  ...             12.885  13.866    0.981            1.655   \n",
              "1       1.59  1.94  ...              13.49   14.47     0.98            1.568   \n",
              "2       1.79   2.1  ...                9.1   10.08     0.98            1.542   \n",
              "3       1.83  2.14  ...             12.882  14.838    1.956            1.542   \n",
              "4       1.91   2.2  ...              13.49   14.49        1                0   \n",
              "..       ...   ...  ...                ...     ...      ...              ...   \n",
              "360     1.72  1.91  ...              13.14   14.12     0.98            1.575   \n",
              "361     1.75  1.96  ...              13.49   14.47     0.98                0   \n",
              "362        0     0  ...             12.534  13.503    0.969                0   \n",
              "363     1.82  2.04  ...             12.923  13.898    0.975                0   \n",
              "364     1.84  2.07  ...              12.97   13.94     0.97            1.575   \n",
              "\n",
              "                      Chemical Dosages                        \n",
              "    Botwood    GFW            Chlorine   Alum Limestone Lime  \n",
              "0      2.36   8.87  2.9917842452464103      0         5    9  \n",
              "1     2.399  9.523  2.8764551519644184  28.49         5    9  \n",
              "2     2.427  5.131   4.180292307692309  30.32         5    9  \n",
              "3     2.441  8.899  3.1440257723955907  27.95         5    9  \n",
              "4         0      0   2.930638991845812  32.14       5.2  9.4  \n",
              "..      ...    ...                 ...    ...       ...  ...  \n",
              "360   2.504  7.854  3.1790365296803658  30.69       5.6  9.9  \n",
              "361       0      0  2.9289562638991846  30.69       5.6  9.9  \n",
              "362       0      0  2.9042380724429555      0       5.6  9.9  \n",
              "363       0      0   2.937316412597694  30.06       5.6  9.9  \n",
              "364   2.504  7.854  3.0873400154202004  30.44       5.6  9.9  \n",
              "\n",
              "[365 rows x 57 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf602a38-210a-43e7-aff7-8a96d9d2b474\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2019-01-01 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.885</td>\n",
              "      <td>13.866</td>\n",
              "      <td>0.981</td>\n",
              "      <td>1.655</td>\n",
              "      <td>2.36</td>\n",
              "      <td>8.87</td>\n",
              "      <td>2.9917842452464103</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2019-01-02 00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.16</td>\n",
              "      <td>7.11</td>\n",
              "      <td>1.59</td>\n",
              "      <td>1.94</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.47</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.568</td>\n",
              "      <td>2.399</td>\n",
              "      <td>9.523</td>\n",
              "      <td>2.8764551519644184</td>\n",
              "      <td>28.49</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2019-01-03 00:00:00</td>\n",
              "      <td>6.04</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.41</td>\n",
              "      <td>7.19</td>\n",
              "      <td>7.25</td>\n",
              "      <td>1.79</td>\n",
              "      <td>2.1</td>\n",
              "      <td>...</td>\n",
              "      <td>9.1</td>\n",
              "      <td>10.08</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.542</td>\n",
              "      <td>2.427</td>\n",
              "      <td>5.131</td>\n",
              "      <td>4.180292307692309</td>\n",
              "      <td>30.32</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2019-01-04 00:00:00</td>\n",
              "      <td>6.44</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.48</td>\n",
              "      <td>6.71</td>\n",
              "      <td>7.02</td>\n",
              "      <td>1.83</td>\n",
              "      <td>2.14</td>\n",
              "      <td>...</td>\n",
              "      <td>12.882</td>\n",
              "      <td>14.838</td>\n",
              "      <td>1.956</td>\n",
              "      <td>1.542</td>\n",
              "      <td>2.441</td>\n",
              "      <td>8.899</td>\n",
              "      <td>3.1440257723955907</td>\n",
              "      <td>27.95</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2019-01-05 00:00:00</td>\n",
              "      <td>6.76</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.49</td>\n",
              "      <td>6.45</td>\n",
              "      <td>7.23</td>\n",
              "      <td>1.91</td>\n",
              "      <td>2.2</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.49</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.930638991845812</td>\n",
              "      <td>32.14</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2019-12-27 00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.22</td>\n",
              "      <td>6.24</td>\n",
              "      <td>7.83</td>\n",
              "      <td>1.72</td>\n",
              "      <td>1.91</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>14.12</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>3.1790365296803658</td>\n",
              "      <td>30.69</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2019-12-28 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>6.83</td>\n",
              "      <td>7.04</td>\n",
              "      <td>1.75</td>\n",
              "      <td>1.96</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.47</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9289562638991846</td>\n",
              "      <td>30.69</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2019-12-29 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.534</td>\n",
              "      <td>13.503</td>\n",
              "      <td>0.969</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9042380724429555</td>\n",
              "      <td>0</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2019-12-30 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.34</td>\n",
              "      <td>7.01</td>\n",
              "      <td>6.76</td>\n",
              "      <td>1.82</td>\n",
              "      <td>2.04</td>\n",
              "      <td>...</td>\n",
              "      <td>12.923</td>\n",
              "      <td>13.898</td>\n",
              "      <td>0.975</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.937316412597694</td>\n",
              "      <td>30.06</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2019-12-31 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.27</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.18</td>\n",
              "      <td>1.84</td>\n",
              "      <td>2.07</td>\n",
              "      <td>...</td>\n",
              "      <td>12.97</td>\n",
              "      <td>13.94</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>3.0873400154202004</td>\n",
              "      <td>30.44</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 57 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf602a38-210a-43e7-aff7-8a96d9d2b474')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cf602a38-210a-43e7-aff7-8a96d9d2b474 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cf602a38-210a-43e7-aff7-8a96d9d2b474');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2019.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9be9cfe1-8061-4c21-eded-50cd51db5177",
        "id": "Itn6GdH53gkc"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',      'PTC (OL)'),\n",
            "            (                    'pH',           'SWC'),\n",
            "            (                    'pH',        'Filter'),\n",
            "            (                    'pH',   'Finish (OL)'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (              'Chlorine',         'Total'),\n",
            "            (              'Chlorine',        'Sample'),\n",
            "            (              'Chlorine',      'Analyzer'),\n",
            "            (                'Colour',         'Raw A'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',         'SWC A'),\n",
            "            (                'Colour',      'Filter A'),\n",
            "            (                'Colour',      'Finish A'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',      'Raw (OL)'),\n",
            "            (             'Turbidity',           'SWC'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            (             'Turbidity',   'Finish (OL)'),\n",
            "            ('Total Dissolved Solids',           'Raw'),\n",
            "            ('Total Dissolved Solids',           'PTC'),\n",
            "            ('Total Dissolved Solids',           'SWC'),\n",
            "            ('Total Dissolved Solids',        'Filter'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',           'Raw'),\n",
            "            (          'Conductivity',           'PTC'),\n",
            "            (          'Conductivity',           'SWC'),\n",
            "            (          'Conductivity',        'Filter'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',           'Raw'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',           'Raw'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',           'Raw'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (                   'UVT',           'Raw'),\n",
            "            (                   'UVT',        'Filter'),\n",
            "            (                   'UVA',           'Raw'),\n",
            "            (                   'UVA',        'Filter'),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (    'Flows within plant',        'Filter'),\n",
            "            (    'Flows within plant',      'Backwash'),\n",
            "            (      'Flows from plant',      'Bishop s'),\n",
            "            (      'Flows from plant',       'Botwood'),\n",
            "            (      'Flows from plant',           'GFW'),\n",
            "            (      'Chemical Dosages',      'Chlorine'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2020**"
      ],
      "metadata": {
        "id": "Jrt9wZUVzzGY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_20 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2020')\n",
        "data_20.to_csv('2020.csv', index=False)"
      ],
      "metadata": {
        "id": "0bxyQPaMz420"
      },
      "execution_count": 98,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020 = pd.read_csv('/content/2020.csv')"
      ],
      "metadata": {
        "id": "I4IQGrc2z420"
      },
      "execution_count": 99,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "0b61b9af-62bc-4e60-e4d7-ae06a273c81a",
        "id": "aa--qE2fz420"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.  \\\n",
              "0                                                NaN                                                                           \n",
              "1                                               Date                                                                           \n",
              "2                                2020-01-01 00:00:00                                                                           \n",
              "3                                2020-01-02 00:00:00                                                                           \n",
              "4                                2020-01-03 00:00:00                                                                           \n",
              "\n",
              "   Unnamed: 1  Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5 Unnamed: 6  \\\n",
              "0         NaN         NaN         pH        NaN        NaN        NaN   \n",
              "1    Shortcut  Start Time        Raw        PTC   PTC (OL)        SWC   \n",
              "2  Click Here         NaN       6.16       5.11        5.2       5.26   \n",
              "3  Click Here         NaN        6.2       5.22       5.35       5.28   \n",
              "4  Click Here         NaN       5.85       5.29       5.25       5.32   \n",
              "\n",
              "  Unnamed: 7   Unnamed: 8 Unnamed: 9  ... Unnamed: 49 Unnamed: 50 Unnamed: 51  \\\n",
              "0        NaN          NaN        NaN  ...         NaN         NaN         NaN   \n",
              "1     Filter  Finish (OL)     Finish  ...      Finish      Filter    Backwash   \n",
              "2        5.3         6.71       7.14  ...        12.7        12.7           0   \n",
              "3        5.3         6.61        6.7  ...       12.63       13.61        0.98   \n",
              "4       5.36         6.94       6.87  ...       13.49       14.48        0.99   \n",
              "\n",
              "        Unnamed: 52 Unnamed: 53 Unnamed: 54        Unnamed: 55 Unnamed: 56  \\\n",
              "0  Flows from plant         NaN         NaN   Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW           Chlorine        Alum   \n",
              "2             1.575       2.504       7.854  2.601026771653544       28.52   \n",
              "3             1.575       2.504       8.551  2.932847189231987       27.81   \n",
              "4                 0           0           0  2.894292068198666       31.45   \n",
              "\n",
              "  Unnamed: 57  Unnamed: 58  \n",
              "0         NaN          NaN  \n",
              "1  Lime (Pre)  Lime (Post)  \n",
              "2         5.6          9.9  \n",
              "3         5.6         10.1  \n",
              "4         5.6         10.3  \n",
              "\n",
              "[5 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e2b18552-9b01-4edd-ba17-b5ef9dce6671\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "      <th>Unnamed: 58</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Shortcut</td>\n",
              "      <td>Start Time</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.71</td>\n",
              "      <td>7.14</td>\n",
              "      <td>...</td>\n",
              "      <td>12.7</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>2.601026771653544</td>\n",
              "      <td>28.52</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.61</td>\n",
              "      <td>6.7</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>13.61</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>8.551</td>\n",
              "      <td>2.932847189231987</td>\n",
              "      <td>27.81</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.36</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.87</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.48</td>\n",
              "      <td>0.99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.894292068198666</td>\n",
              "      <td>31.45</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2b18552-9b01-4edd-ba17-b5ef9dce6671')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e2b18552-9b01-4edd-ba17-b5ef9dce6671 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e2b18552-9b01-4edd-ba17-b5ef9dce6671');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020 = data_2020.drop(data_2020.index[0])"
      ],
      "metadata": {
        "id": "99GZYBzxz420"
      },
      "execution_count": 101,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020.columns = pd.MultiIndex.from_tuples([('Date',' '),('Shortcut',' '),('Start Time',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "I2A3U6C9z421"
      },
      "execution_count": 102,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020 = data_2020.drop(data_2020.index[0])"
      ],
      "metadata": {
        "id": "T_6a-u95z421"
      },
      "execution_count": 103,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "b8fe68c0-0693-497e-f14b-90ff3be26f4b",
        "id": "krZvClCez421"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "2    2020-01-01 00:00:00  Click Here        NaN  6.16  5.11      5.2  5.26   \n",
              "3    2020-01-02 00:00:00  Click Here        NaN   6.2  5.22     5.35  5.28   \n",
              "4    2020-01-03 00:00:00  Click Here        NaN  5.85  5.29     5.25  5.32   \n",
              "5    2020-01-04 00:00:00  Click Here        NaN  5.89  5.31     5.27  5.34   \n",
              "6    2020-01-05 00:00:00  Click Here        NaN     0     0        0     0   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "363  2020-12-27 00:00:00  Click Here        NaN     0     0        0     0   \n",
              "364  2020-12-28 00:00:00  Click Here        NaN  6.39  5.27     5.09  5.39   \n",
              "365  2020-12-29 00:00:00  Click Here        NaN  6.45  5.27     5.31  5.38   \n",
              "366  2020-12-30 00:00:00  Click Here        NaN  6.06  5.24     5.25  5.36   \n",
              "367  2020-12-31 00:00:00  Click Here        NaN  6.12  5.26     5.23  5.33   \n",
              "\n",
              "                               ... Flows within plant                  \\\n",
              "    Filter Finish (OL) Finish  ...             Finish Filter Backwash   \n",
              "2      5.3        6.71   7.14  ...               12.7   12.7        0   \n",
              "3      5.3        6.61    6.7  ...              12.63  13.61     0.98   \n",
              "4     5.36        6.94   6.87  ...              13.49  14.48     0.99   \n",
              "5     5.36        7.08   7.01  ...               13.2  14.16     0.96   \n",
              "6        0           0      0  ...                  0      0        0   \n",
              "..     ...         ...    ...  ...                ...    ...      ...   \n",
              "363      0           0      0  ...                  0      0        0   \n",
              "364   5.41        6.94   7.55  ...              13.74  14.68     0.94   \n",
              "365   5.39        6.84   7.08  ...              12.85   13.8     0.95   \n",
              "366   5.39         7.2    6.6  ...              13.16  14.11     0.95   \n",
              "367   5.39        7.31    7.4  ...             12.488  13.45    0.962   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                         \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "2              1.575   2.504  7.854   2.601026771653544  28.52       5.6   9.9  \n",
              "3              1.575   2.504  8.551   2.932847189231987  27.81       5.6  10.1  \n",
              "4                  0       0      0   2.894292068198666  31.45       5.6  10.3  \n",
              "5                  0       0      0                 NaN  30.98       5.6  10.3  \n",
              "6                  0       0      0                 NaN      0         0     0  \n",
              "..               ...     ...    ...                 ...    ...       ...   ...  \n",
              "363                0       0      0                 NaN      0         0   NaN  \n",
              "364            1.504   2.711  9.307  2.7686069868995635  30.19       4.8   NaN  \n",
              "365            1.455   2.719  8.417   2.804554085603113  30.31       4.8   NaN  \n",
              "366            1.417   2.715  8.464  2.8147310030395136  30.04       4.8   NaN  \n",
              "367             1.37   2.713  8.221  2.7953283151825756  30.51       4.8   NaN  \n",
              "\n",
              "[366 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0621461d-b403-4b30-bf0f-25f081624f77\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.71</td>\n",
              "      <td>7.14</td>\n",
              "      <td>...</td>\n",
              "      <td>12.7</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>2.601026771653544</td>\n",
              "      <td>28.52</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.61</td>\n",
              "      <td>6.7</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>13.61</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>8.551</td>\n",
              "      <td>2.932847189231987</td>\n",
              "      <td>27.81</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.36</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.87</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.48</td>\n",
              "      <td>0.99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.894292068198666</td>\n",
              "      <td>31.45</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2020-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.89</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.36</td>\n",
              "      <td>7.08</td>\n",
              "      <td>7.01</td>\n",
              "      <td>...</td>\n",
              "      <td>13.2</td>\n",
              "      <td>14.16</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2020-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2020-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2020-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.41</td>\n",
              "      <td>6.94</td>\n",
              "      <td>7.55</td>\n",
              "      <td>...</td>\n",
              "      <td>13.74</td>\n",
              "      <td>14.68</td>\n",
              "      <td>0.94</td>\n",
              "      <td>1.504</td>\n",
              "      <td>2.711</td>\n",
              "      <td>9.307</td>\n",
              "      <td>2.7686069868995635</td>\n",
              "      <td>30.19</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2020-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.45</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.39</td>\n",
              "      <td>6.84</td>\n",
              "      <td>7.08</td>\n",
              "      <td>...</td>\n",
              "      <td>12.85</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.455</td>\n",
              "      <td>2.719</td>\n",
              "      <td>8.417</td>\n",
              "      <td>2.804554085603113</td>\n",
              "      <td>30.31</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2020-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.2</td>\n",
              "      <td>6.6</td>\n",
              "      <td>...</td>\n",
              "      <td>13.16</td>\n",
              "      <td>14.11</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.417</td>\n",
              "      <td>2.715</td>\n",
              "      <td>8.464</td>\n",
              "      <td>2.8147310030395136</td>\n",
              "      <td>30.04</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>2020-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.33</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.31</td>\n",
              "      <td>7.4</td>\n",
              "      <td>...</td>\n",
              "      <td>12.488</td>\n",
              "      <td>13.45</td>\n",
              "      <td>0.962</td>\n",
              "      <td>1.37</td>\n",
              "      <td>2.713</td>\n",
              "      <td>8.221</td>\n",
              "      <td>2.7953283151825756</td>\n",
              "      <td>30.51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0621461d-b403-4b30-bf0f-25f081624f77')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0621461d-b403-4b30-bf0f-25f081624f77 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0621461d-b403-4b30-bf0f-25f081624f77');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020 = data_2020.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "MD0gYUTvz421"
      },
      "execution_count": 105,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "36bd0e65-11d6-4acd-c90b-5c748ae970d0",
        "id": "P6w055VCz422"
      },
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "0    2020-01-01 00:00:00  Click Here        NaN  6.16  5.11      5.2  5.26   \n",
              "1    2020-01-02 00:00:00  Click Here        NaN   6.2  5.22     5.35  5.28   \n",
              "2    2020-01-03 00:00:00  Click Here        NaN  5.85  5.29     5.25  5.32   \n",
              "3    2020-01-04 00:00:00  Click Here        NaN  5.89  5.31     5.27  5.34   \n",
              "4    2020-01-05 00:00:00  Click Here        NaN     0     0        0     0   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "361  2020-12-27 00:00:00  Click Here        NaN     0     0        0     0   \n",
              "362  2020-12-28 00:00:00  Click Here        NaN  6.39  5.27     5.09  5.39   \n",
              "363  2020-12-29 00:00:00  Click Here        NaN  6.45  5.27     5.31  5.38   \n",
              "364  2020-12-30 00:00:00  Click Here        NaN  6.06  5.24     5.25  5.36   \n",
              "365  2020-12-31 00:00:00  Click Here        NaN  6.12  5.26     5.23  5.33   \n",
              "\n",
              "                               ... Flows within plant                  \\\n",
              "    Filter Finish (OL) Finish  ...             Finish Filter Backwash   \n",
              "0      5.3        6.71   7.14  ...               12.7   12.7        0   \n",
              "1      5.3        6.61    6.7  ...              12.63  13.61     0.98   \n",
              "2     5.36        6.94   6.87  ...              13.49  14.48     0.99   \n",
              "3     5.36        7.08   7.01  ...               13.2  14.16     0.96   \n",
              "4        0           0      0  ...                  0      0        0   \n",
              "..     ...         ...    ...  ...                ...    ...      ...   \n",
              "361      0           0      0  ...                  0      0        0   \n",
              "362   5.41        6.94   7.55  ...              13.74  14.68     0.94   \n",
              "363   5.39        6.84   7.08  ...              12.85   13.8     0.95   \n",
              "364   5.39         7.2    6.6  ...              13.16  14.11     0.95   \n",
              "365   5.39        7.31    7.4  ...             12.488  13.45    0.962   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                         \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "0              1.575   2.504  7.854   2.601026771653544  28.52       5.6   9.9  \n",
              "1              1.575   2.504  8.551   2.932847189231987  27.81       5.6  10.1  \n",
              "2                  0       0      0   2.894292068198666  31.45       5.6  10.3  \n",
              "3                  0       0      0                 NaN  30.98       5.6  10.3  \n",
              "4                  0       0      0                 NaN      0         0     0  \n",
              "..               ...     ...    ...                 ...    ...       ...   ...  \n",
              "361                0       0      0                 NaN      0         0   NaN  \n",
              "362            1.504   2.711  9.307  2.7686069868995635  30.19       4.8   NaN  \n",
              "363            1.455   2.719  8.417   2.804554085603113  30.31       4.8   NaN  \n",
              "364            1.417   2.715  8.464  2.8147310030395136  30.04       4.8   NaN  \n",
              "365             1.37   2.713  8.221  2.7953283151825756  30.51       4.8   NaN  \n",
              "\n",
              "[366 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0f4ab02b-8f0f-4504-8c9a-7fec822b4149\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.71</td>\n",
              "      <td>7.14</td>\n",
              "      <td>...</td>\n",
              "      <td>12.7</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>2.601026771653544</td>\n",
              "      <td>28.52</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.61</td>\n",
              "      <td>6.7</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>13.61</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>8.551</td>\n",
              "      <td>2.932847189231987</td>\n",
              "      <td>27.81</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.36</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.87</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.48</td>\n",
              "      <td>0.99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.894292068198666</td>\n",
              "      <td>31.45</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.89</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.36</td>\n",
              "      <td>7.08</td>\n",
              "      <td>7.01</td>\n",
              "      <td>...</td>\n",
              "      <td>13.2</td>\n",
              "      <td>14.16</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2020-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2020-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.41</td>\n",
              "      <td>6.94</td>\n",
              "      <td>7.55</td>\n",
              "      <td>...</td>\n",
              "      <td>13.74</td>\n",
              "      <td>14.68</td>\n",
              "      <td>0.94</td>\n",
              "      <td>1.504</td>\n",
              "      <td>2.711</td>\n",
              "      <td>9.307</td>\n",
              "      <td>2.7686069868995635</td>\n",
              "      <td>30.19</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2020-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.45</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.39</td>\n",
              "      <td>6.84</td>\n",
              "      <td>7.08</td>\n",
              "      <td>...</td>\n",
              "      <td>12.85</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.455</td>\n",
              "      <td>2.719</td>\n",
              "      <td>8.417</td>\n",
              "      <td>2.804554085603113</td>\n",
              "      <td>30.31</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2020-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.2</td>\n",
              "      <td>6.6</td>\n",
              "      <td>...</td>\n",
              "      <td>13.16</td>\n",
              "      <td>14.11</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.417</td>\n",
              "      <td>2.715</td>\n",
              "      <td>8.464</td>\n",
              "      <td>2.8147310030395136</td>\n",
              "      <td>30.04</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2020-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.33</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.31</td>\n",
              "      <td>7.4</td>\n",
              "      <td>...</td>\n",
              "      <td>12.488</td>\n",
              "      <td>13.45</td>\n",
              "      <td>0.962</td>\n",
              "      <td>1.37</td>\n",
              "      <td>2.713</td>\n",
              "      <td>8.221</td>\n",
              "      <td>2.7953283151825756</td>\n",
              "      <td>30.51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f4ab02b-8f0f-4504-8c9a-7fec822b4149')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0f4ab02b-8f0f-4504-8c9a-7fec822b4149 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0f4ab02b-8f0f-4504-8c9a-7fec822b4149');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020 = data_2020.drop(labels=['Shortcut', 'Start Time'], axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a236e6cf-2dea-4c98-ebef-3592db839150",
        "id": "e2uizGFuz422"
      },
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-107-1090d7897350>:1: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.\n",
            "  data_2020 = data_2020.drop(labels=['Shortcut', 'Start Time'], axis=1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "670f3c1a-831f-41a4-a62a-1b4026f13828",
        "id": "A39Xl3ZVz422"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                 \\\n",
              "                           Raw   PTC PTC (OL)   SWC Filter Finish (OL) Finish   \n",
              "0    2020-01-01 00:00:00  6.16  5.11      5.2  5.26    5.3        6.71   7.14   \n",
              "1    2020-01-02 00:00:00   6.2  5.22     5.35  5.28    5.3        6.61    6.7   \n",
              "2    2020-01-03 00:00:00  5.85  5.29     5.25  5.32   5.36        6.94   6.87   \n",
              "3    2020-01-04 00:00:00  5.89  5.31     5.27  5.34   5.36        7.08   7.01   \n",
              "4    2020-01-05 00:00:00     0     0        0     0      0           0      0   \n",
              "..                   ...   ...   ...      ...   ...    ...         ...    ...   \n",
              "361  2020-12-27 00:00:00     0     0        0     0      0           0      0   \n",
              "362  2020-12-28 00:00:00  6.39  5.27     5.09  5.39   5.41        6.94   7.55   \n",
              "363  2020-12-29 00:00:00  6.45  5.27     5.31  5.38   5.39        6.84   7.08   \n",
              "364  2020-12-30 00:00:00  6.06  5.24     5.25  5.36   5.39         7.2    6.6   \n",
              "365  2020-12-31 00:00:00  6.12  5.26     5.23  5.33   5.39        7.31    7.4   \n",
              "\n",
              "    Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "        Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "0       1.96  2.14  ...               12.7   12.7        0            1.575   \n",
              "1        1.9  2.06  ...              12.63  13.61     0.98            1.575   \n",
              "2       1.97  2.14  ...              13.49  14.48     0.99                0   \n",
              "3       1.91  2.11  ...               13.2  14.16     0.96                0   \n",
              "4          0     0  ...                  0      0        0                0   \n",
              "..       ...   ...  ...                ...    ...      ...              ...   \n",
              "361        0     0  ...                  0      0        0                0   \n",
              "362      1.8     2  ...              13.74  14.68     0.94            1.504   \n",
              "363     1.83  2.02  ...              12.85   13.8     0.95            1.455   \n",
              "364      1.5  1.73  ...              13.16  14.11     0.95            1.417   \n",
              "365     1.78  1.94  ...             12.488  13.45    0.962             1.37   \n",
              "\n",
              "                      Chemical Dosages                         \n",
              "    Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "0     2.504  7.854   2.601026771653544  28.52       5.6   9.9  \n",
              "1     2.504  8.551   2.932847189231987  27.81       5.6  10.1  \n",
              "2         0      0   2.894292068198666  31.45       5.6  10.3  \n",
              "3         0      0                 NaN  30.98       5.6  10.3  \n",
              "4         0      0                 NaN      0         0     0  \n",
              "..      ...    ...                 ...    ...       ...   ...  \n",
              "361       0      0                 NaN      0         0   NaN  \n",
              "362   2.711  9.307  2.7686069868995635  30.19       4.8   NaN  \n",
              "363   2.719  8.417   2.804554085603113  30.31       4.8   NaN  \n",
              "364   2.715  8.464  2.8147310030395136  30.04       4.8   NaN  \n",
              "365   2.713  8.221  2.7953283151825756  30.51       4.8   NaN  \n",
              "\n",
              "[366 rows x 57 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8a3e08c8-32fe-4100-b2ea-e5c3a42e6035\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-01-01 00:00:00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.71</td>\n",
              "      <td>7.14</td>\n",
              "      <td>1.96</td>\n",
              "      <td>2.14</td>\n",
              "      <td>...</td>\n",
              "      <td>12.7</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>7.854</td>\n",
              "      <td>2.601026771653544</td>\n",
              "      <td>28.52</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-01-02 00:00:00</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.61</td>\n",
              "      <td>6.7</td>\n",
              "      <td>1.9</td>\n",
              "      <td>2.06</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>13.61</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.575</td>\n",
              "      <td>2.504</td>\n",
              "      <td>8.551</td>\n",
              "      <td>2.932847189231987</td>\n",
              "      <td>27.81</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-01-03 00:00:00</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.36</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.87</td>\n",
              "      <td>1.97</td>\n",
              "      <td>2.14</td>\n",
              "      <td>...</td>\n",
              "      <td>13.49</td>\n",
              "      <td>14.48</td>\n",
              "      <td>0.99</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.894292068198666</td>\n",
              "      <td>31.45</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-01-04 00:00:00</td>\n",
              "      <td>5.89</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.36</td>\n",
              "      <td>7.08</td>\n",
              "      <td>7.01</td>\n",
              "      <td>1.91</td>\n",
              "      <td>2.11</td>\n",
              "      <td>...</td>\n",
              "      <td>13.2</td>\n",
              "      <td>14.16</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-01-05 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2020-12-27 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2020-12-28 00:00:00</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.41</td>\n",
              "      <td>6.94</td>\n",
              "      <td>7.55</td>\n",
              "      <td>1.8</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>13.74</td>\n",
              "      <td>14.68</td>\n",
              "      <td>0.94</td>\n",
              "      <td>1.504</td>\n",
              "      <td>2.711</td>\n",
              "      <td>9.307</td>\n",
              "      <td>2.7686069868995635</td>\n",
              "      <td>30.19</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2020-12-29 00:00:00</td>\n",
              "      <td>6.45</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.39</td>\n",
              "      <td>6.84</td>\n",
              "      <td>7.08</td>\n",
              "      <td>1.83</td>\n",
              "      <td>2.02</td>\n",
              "      <td>...</td>\n",
              "      <td>12.85</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.455</td>\n",
              "      <td>2.719</td>\n",
              "      <td>8.417</td>\n",
              "      <td>2.804554085603113</td>\n",
              "      <td>30.31</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2020-12-30 00:00:00</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.2</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1.73</td>\n",
              "      <td>...</td>\n",
              "      <td>13.16</td>\n",
              "      <td>14.11</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.417</td>\n",
              "      <td>2.715</td>\n",
              "      <td>8.464</td>\n",
              "      <td>2.8147310030395136</td>\n",
              "      <td>30.04</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2020-12-31 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.33</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.31</td>\n",
              "      <td>7.4</td>\n",
              "      <td>1.78</td>\n",
              "      <td>1.94</td>\n",
              "      <td>...</td>\n",
              "      <td>12.488</td>\n",
              "      <td>13.45</td>\n",
              "      <td>0.962</td>\n",
              "      <td>1.37</td>\n",
              "      <td>2.713</td>\n",
              "      <td>8.221</td>\n",
              "      <td>2.7953283151825756</td>\n",
              "      <td>30.51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>366 rows × 57 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a3e08c8-32fe-4100-b2ea-e5c3a42e6035')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8a3e08c8-32fe-4100-b2ea-e5c3a42e6035 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8a3e08c8-32fe-4100-b2ea-e5c3a42e6035');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2019.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d28d30d3-7006-44e4-d596-14d097f13cef",
        "id": "8wRcctCoz422"
      },
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',      'PTC (OL)'),\n",
            "            (                    'pH',           'SWC'),\n",
            "            (                    'pH',        'Filter'),\n",
            "            (                    'pH',   'Finish (OL)'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (              'Chlorine',         'Total'),\n",
            "            (              'Chlorine',        'Sample'),\n",
            "            (              'Chlorine',      'Analyzer'),\n",
            "            (                'Colour',         'Raw A'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',         'SWC A'),\n",
            "            (                'Colour',      'Filter A'),\n",
            "            (                'Colour',      'Finish A'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',      'Raw (OL)'),\n",
            "            (             'Turbidity',           'SWC'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            (             'Turbidity',   'Finish (OL)'),\n",
            "            ('Total Dissolved Solids',           'Raw'),\n",
            "            ('Total Dissolved Solids',           'PTC'),\n",
            "            ('Total Dissolved Solids',           'SWC'),\n",
            "            ('Total Dissolved Solids',        'Filter'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',           'Raw'),\n",
            "            (          'Conductivity',           'PTC'),\n",
            "            (          'Conductivity',           'SWC'),\n",
            "            (          'Conductivity',        'Filter'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',           'Raw'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',           'Raw'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',           'Raw'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (                   'UVT',           'Raw'),\n",
            "            (                   'UVT',        'Filter'),\n",
            "            (                   'UVA',           'Raw'),\n",
            "            (                   'UVA',        'Filter'),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (    'Flows within plant',        'Filter'),\n",
            "            (    'Flows within plant',      'Backwash'),\n",
            "            (      'Flows from plant',      'Bishop s'),\n",
            "            (      'Flows from plant',       'Botwood'),\n",
            "            (      'Flows from plant',           'GFW'),\n",
            "            (      'Chemical Dosages',      'Chlorine'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2021**"
      ],
      "metadata": {
        "id": "nXrVJ6vj2TPX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_21 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2021')\n",
        "data_21.to_csv('2021.csv', index=False)"
      ],
      "metadata": {
        "id": "4YbeEwJu2YvO"
      },
      "execution_count": 110,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021 = pd.read_csv('/content/2021.csv')"
      ],
      "metadata": {
        "id": "e_Ym-5Mh2YvO"
      },
      "execution_count": 111,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "e4d7e502-0a52-4ec4-c21e-3f09bfe9fca4",
        "id": "lQqV25GF2YvO"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.  \\\n",
              "0                                                NaN                                                                           \n",
              "1                                               Date                                                                           \n",
              "2                                2021-01-01 00:00:00                                                                           \n",
              "3                                2021-01-02 00:00:00                                                                           \n",
              "4                                2021-01-03 00:00:00                                                                           \n",
              "\n",
              "   Unnamed: 1  Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5 Unnamed: 6  \\\n",
              "0         NaN         NaN         pH        NaN        NaN        NaN   \n",
              "1    Shortcut  Start Time        Raw        PTC   PTC (OL)        SWC   \n",
              "2  Click Here         NaN       6.07       5.19       5.25       5.28   \n",
              "3  Click Here         NaN       6.01       5.14       5.23        5.3   \n",
              "4  Click Here         NaN        NaN        NaN        NaN        NaN   \n",
              "\n",
              "  Unnamed: 7   Unnamed: 8 Unnamed: 9  ... Unnamed: 50 Unnamed: 51 Unnamed: 52  \\\n",
              "0        NaN          NaN        NaN  ...         NaN         NaN         NaN   \n",
              "1     Filter  Finish (OL)     Finish  ...      Finish      Filter    Backwash   \n",
              "2       5.34         7.42       7.53  ...      12.898      13.874       0.976   \n",
              "3       5.37         7.46       7.51  ...       12.29       13.26        0.97   \n",
              "4        NaN          NaN        NaN  ...         NaN         NaN         NaN   \n",
              "\n",
              "        Unnamed: 53 Unnamed: 54 Unnamed: 55       Unnamed: 56 Unnamed: 57  \\\n",
              "0  Flows from plant         NaN         NaN  Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW          Chlorine        Alum   \n",
              "2              1.41       2.711       8.168            2.8888       30.56   \n",
              "3               NaN         NaN         NaN           3.01435       30.38   \n",
              "4               NaN         NaN         NaN               NaN         NaN   \n",
              "\n",
              "  Unnamed: 58  Unnamed: 59  \n",
              "0         NaN          NaN  \n",
              "1  Lime (Pre)  Lime (Post)  \n",
              "2         4.8          9.3  \n",
              "3         4.8          9.3  \n",
              "4         NaN          NaN  \n",
              "\n",
              "[5 rows x 60 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9a924e2b-52bf-4da7-8a9c-e2834d07e414\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "      <th>Unnamed: 58</th>\n",
              "      <th>Unnamed: 59</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Shortcut</td>\n",
              "      <td>Start Time</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.07</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.34</td>\n",
              "      <td>7.42</td>\n",
              "      <td>7.53</td>\n",
              "      <td>...</td>\n",
              "      <td>12.898</td>\n",
              "      <td>13.874</td>\n",
              "      <td>0.976</td>\n",
              "      <td>1.41</td>\n",
              "      <td>2.711</td>\n",
              "      <td>8.168</td>\n",
              "      <td>2.8888</td>\n",
              "      <td>30.56</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.46</td>\n",
              "      <td>7.51</td>\n",
              "      <td>...</td>\n",
              "      <td>12.29</td>\n",
              "      <td>13.26</td>\n",
              "      <td>0.97</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.01435</td>\n",
              "      <td>30.38</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 60 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a924e2b-52bf-4da7-8a9c-e2834d07e414')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9a924e2b-52bf-4da7-8a9c-e2834d07e414 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9a924e2b-52bf-4da7-8a9c-e2834d07e414');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021 = data_2021.drop(data_2021.index[0])"
      ],
      "metadata": {
        "id": "nzpiYKYq2YvO"
      },
      "execution_count": 113,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021.columns = pd.MultiIndex.from_tuples([('Date',' '),('Shortcut',' '),('Start Time',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Used',' '),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "d9p4wrqg2YvP"
      },
      "execution_count": 114,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021 = data_2021.drop(data_2021.index[0])"
      ],
      "metadata": {
        "id": "-_4ZXy_B2YvP"
      },
      "execution_count": 115,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "25e98955-fda4-4cf6-cf01-6436ded3906e",
        "id": "4MUws0jq2YvP"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "2    2021-01-01 00:00:00  Click Here        NaN  6.07  5.19     5.25  5.28   \n",
              "3    2021-01-02 00:00:00  Click Here        NaN  6.01  5.14     5.23   5.3   \n",
              "4    2021-01-03 00:00:00  Click Here        NaN   NaN   NaN      NaN   NaN   \n",
              "5    2021-01-04 00:00:00  Click Here        NaN  5.83  5.17     5.21  5.36   \n",
              "6    2021-01-05 00:00:00  Click Here        NaN  6.01  5.25     5.21   5.4   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "362  2021-12-27 00:00:00  Click Here        NaN  6.06  5.17     4.96  5.29   \n",
              "363  2021-12-28 00:00:00  Click Here        NaN  6.13  5.18     5.14  5.31   \n",
              "364  2021-12-29 00:00:00  Click Here        NaN  6.09  5.17     5.15  5.24   \n",
              "365  2021-12-30 00:00:00  Click Here        NaN  6.17  5.26     5.14   5.6   \n",
              "366  2021-12-31 00:00:00  Click Here        NaN  6.16  5.12     5.21  5.24   \n",
              "\n",
              "                               ... Flows within plant                   \\\n",
              "    Filter Finish (OL) Finish  ...             Finish  Filter Backwash   \n",
              "2     5.34        7.42   7.53  ...             12.898  13.874    0.976   \n",
              "3     5.37        7.46   7.51  ...              12.29   13.26     0.97   \n",
              "4      NaN         NaN    NaN  ...                NaN     NaN      NaN   \n",
              "5     5.37         6.8   7.39  ...              12.94   13.91     0.97   \n",
              "6     5.45        7.24   6.93  ...              12.89   13.87     0.98   \n",
              "..     ...         ...    ...  ...                ...     ...      ...   \n",
              "362   5.31        7.38   7.84  ...                  0       0        0   \n",
              "363   5.35        7.18   7.33  ...              11.76   12.79     1.03   \n",
              "364   5.29        6.95   6.77  ...              12.46   13.49     1.03   \n",
              "365   6.04        7.77    6.6  ...              12.41   13.48     1.07   \n",
              "366   5.26        7.11   7.65  ...              12.08   13.15     1.07   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                         \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "2               1.41   2.711  8.168              2.8888  30.56       4.8   9.3  \n",
              "3                NaN     NaN    NaN             3.01435  30.38       4.8   9.3  \n",
              "4                NaN     NaN    NaN                 NaN    NaN       NaN   NaN  \n",
              "5              1.508    2.63  8.423             2.70786  31.92       4.8   9.3  \n",
              "6              1.508    2.67  8.424             2.79585  31.69       4.8   9.6  \n",
              "..               ...     ...    ...                 ...    ...       ...   ...  \n",
              "362                0       0      0                 NaN  30.98       5.2  11.8  \n",
              "363            1.382   1.703  8.519   2.471906462585034  31.22       5.2  11.8  \n",
              "364            1.364   1.715  8.602  3.3197383627608343  30.57       5.2  11.8  \n",
              "365             1.36   1.719  8.915    3.22665592264303  30.86       5.2  11.8  \n",
              "366            1.341   1.737  8.311  3.3974834437086097  30.31       5.2  11.6  \n",
              "\n",
              "[365 rows x 60 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e4f58d64-b7e5-489e-9b92-b24247188f7d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.07</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.34</td>\n",
              "      <td>7.42</td>\n",
              "      <td>7.53</td>\n",
              "      <td>...</td>\n",
              "      <td>12.898</td>\n",
              "      <td>13.874</td>\n",
              "      <td>0.976</td>\n",
              "      <td>1.41</td>\n",
              "      <td>2.711</td>\n",
              "      <td>8.168</td>\n",
              "      <td>2.8888</td>\n",
              "      <td>30.56</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.46</td>\n",
              "      <td>7.51</td>\n",
              "      <td>...</td>\n",
              "      <td>12.29</td>\n",
              "      <td>13.26</td>\n",
              "      <td>0.97</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.01435</td>\n",
              "      <td>30.38</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.83</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.37</td>\n",
              "      <td>6.8</td>\n",
              "      <td>7.39</td>\n",
              "      <td>...</td>\n",
              "      <td>12.94</td>\n",
              "      <td>13.91</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.63</td>\n",
              "      <td>8.423</td>\n",
              "      <td>2.70786</td>\n",
              "      <td>31.92</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.24</td>\n",
              "      <td>6.93</td>\n",
              "      <td>...</td>\n",
              "      <td>12.89</td>\n",
              "      <td>13.87</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.67</td>\n",
              "      <td>8.424</td>\n",
              "      <td>2.79585</td>\n",
              "      <td>31.69</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2021-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.17</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>7.38</td>\n",
              "      <td>7.84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2021-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.13</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.35</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.33</td>\n",
              "      <td>...</td>\n",
              "      <td>11.76</td>\n",
              "      <td>12.79</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.382</td>\n",
              "      <td>1.703</td>\n",
              "      <td>8.519</td>\n",
              "      <td>2.471906462585034</td>\n",
              "      <td>31.22</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2021-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.29</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.77</td>\n",
              "      <td>...</td>\n",
              "      <td>12.46</td>\n",
              "      <td>13.49</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.364</td>\n",
              "      <td>1.715</td>\n",
              "      <td>8.602</td>\n",
              "      <td>3.3197383627608343</td>\n",
              "      <td>30.57</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2021-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.04</td>\n",
              "      <td>7.77</td>\n",
              "      <td>6.6</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.48</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.36</td>\n",
              "      <td>1.719</td>\n",
              "      <td>8.915</td>\n",
              "      <td>3.22665592264303</td>\n",
              "      <td>30.86</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2021-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.26</td>\n",
              "      <td>7.11</td>\n",
              "      <td>7.65</td>\n",
              "      <td>...</td>\n",
              "      <td>12.08</td>\n",
              "      <td>13.15</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.341</td>\n",
              "      <td>1.737</td>\n",
              "      <td>8.311</td>\n",
              "      <td>3.3974834437086097</td>\n",
              "      <td>30.31</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 60 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4f58d64-b7e5-489e-9b92-b24247188f7d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e4f58d64-b7e5-489e-9b92-b24247188f7d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e4f58d64-b7e5-489e-9b92-b24247188f7d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021 = data_2021.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "0a45mmch2YvP"
      },
      "execution_count": 117,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "179cb8c0-0005-4969-de56-dad74456c798",
        "id": "hHfPixt42YvP"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "0    2021-01-01 00:00:00  Click Here        NaN  6.07  5.19     5.25  5.28   \n",
              "1    2021-01-02 00:00:00  Click Here        NaN  6.01  5.14     5.23   5.3   \n",
              "2    2021-01-03 00:00:00  Click Here        NaN   NaN   NaN      NaN   NaN   \n",
              "3    2021-01-04 00:00:00  Click Here        NaN  5.83  5.17     5.21  5.36   \n",
              "4    2021-01-05 00:00:00  Click Here        NaN  6.01  5.25     5.21   5.4   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "360  2021-12-27 00:00:00  Click Here        NaN  6.06  5.17     4.96  5.29   \n",
              "361  2021-12-28 00:00:00  Click Here        NaN  6.13  5.18     5.14  5.31   \n",
              "362  2021-12-29 00:00:00  Click Here        NaN  6.09  5.17     5.15  5.24   \n",
              "363  2021-12-30 00:00:00  Click Here        NaN  6.17  5.26     5.14   5.6   \n",
              "364  2021-12-31 00:00:00  Click Here        NaN  6.16  5.12     5.21  5.24   \n",
              "\n",
              "                               ... Flows within plant                   \\\n",
              "    Filter Finish (OL) Finish  ...             Finish  Filter Backwash   \n",
              "0     5.34        7.42   7.53  ...             12.898  13.874    0.976   \n",
              "1     5.37        7.46   7.51  ...              12.29   13.26     0.97   \n",
              "2      NaN         NaN    NaN  ...                NaN     NaN      NaN   \n",
              "3     5.37         6.8   7.39  ...              12.94   13.91     0.97   \n",
              "4     5.45        7.24   6.93  ...              12.89   13.87     0.98   \n",
              "..     ...         ...    ...  ...                ...     ...      ...   \n",
              "360   5.31        7.38   7.84  ...                  0       0        0   \n",
              "361   5.35        7.18   7.33  ...              11.76   12.79     1.03   \n",
              "362   5.29        6.95   6.77  ...              12.46   13.49     1.03   \n",
              "363   6.04        7.77    6.6  ...              12.41   13.48     1.07   \n",
              "364   5.26        7.11   7.65  ...              12.08   13.15     1.07   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                         \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "0               1.41   2.711  8.168              2.8888  30.56       4.8   9.3  \n",
              "1                NaN     NaN    NaN             3.01435  30.38       4.8   9.3  \n",
              "2                NaN     NaN    NaN                 NaN    NaN       NaN   NaN  \n",
              "3              1.508    2.63  8.423             2.70786  31.92       4.8   9.3  \n",
              "4              1.508    2.67  8.424             2.79585  31.69       4.8   9.6  \n",
              "..               ...     ...    ...                 ...    ...       ...   ...  \n",
              "360                0       0      0                 NaN  30.98       5.2  11.8  \n",
              "361            1.382   1.703  8.519   2.471906462585034  31.22       5.2  11.8  \n",
              "362            1.364   1.715  8.602  3.3197383627608343  30.57       5.2  11.8  \n",
              "363             1.36   1.719  8.915    3.22665592264303  30.86       5.2  11.8  \n",
              "364            1.341   1.737  8.311  3.3974834437086097  30.31       5.2  11.6  \n",
              "\n",
              "[365 rows x 60 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d9489f46-196d-4f04-ac65-aa79e0789bfe\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.07</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.34</td>\n",
              "      <td>7.42</td>\n",
              "      <td>7.53</td>\n",
              "      <td>...</td>\n",
              "      <td>12.898</td>\n",
              "      <td>13.874</td>\n",
              "      <td>0.976</td>\n",
              "      <td>1.41</td>\n",
              "      <td>2.711</td>\n",
              "      <td>8.168</td>\n",
              "      <td>2.8888</td>\n",
              "      <td>30.56</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.46</td>\n",
              "      <td>7.51</td>\n",
              "      <td>...</td>\n",
              "      <td>12.29</td>\n",
              "      <td>13.26</td>\n",
              "      <td>0.97</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.01435</td>\n",
              "      <td>30.38</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.83</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.37</td>\n",
              "      <td>6.8</td>\n",
              "      <td>7.39</td>\n",
              "      <td>...</td>\n",
              "      <td>12.94</td>\n",
              "      <td>13.91</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.63</td>\n",
              "      <td>8.423</td>\n",
              "      <td>2.70786</td>\n",
              "      <td>31.92</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.24</td>\n",
              "      <td>6.93</td>\n",
              "      <td>...</td>\n",
              "      <td>12.89</td>\n",
              "      <td>13.87</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.67</td>\n",
              "      <td>8.424</td>\n",
              "      <td>2.79585</td>\n",
              "      <td>31.69</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2021-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.17</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>7.38</td>\n",
              "      <td>7.84</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2021-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.13</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.35</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.33</td>\n",
              "      <td>...</td>\n",
              "      <td>11.76</td>\n",
              "      <td>12.79</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.382</td>\n",
              "      <td>1.703</td>\n",
              "      <td>8.519</td>\n",
              "      <td>2.471906462585034</td>\n",
              "      <td>31.22</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2021-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.29</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.77</td>\n",
              "      <td>...</td>\n",
              "      <td>12.46</td>\n",
              "      <td>13.49</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.364</td>\n",
              "      <td>1.715</td>\n",
              "      <td>8.602</td>\n",
              "      <td>3.3197383627608343</td>\n",
              "      <td>30.57</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2021-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.04</td>\n",
              "      <td>7.77</td>\n",
              "      <td>6.6</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.48</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.36</td>\n",
              "      <td>1.719</td>\n",
              "      <td>8.915</td>\n",
              "      <td>3.22665592264303</td>\n",
              "      <td>30.86</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2021-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.26</td>\n",
              "      <td>7.11</td>\n",
              "      <td>7.65</td>\n",
              "      <td>...</td>\n",
              "      <td>12.08</td>\n",
              "      <td>13.15</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.341</td>\n",
              "      <td>1.737</td>\n",
              "      <td>8.311</td>\n",
              "      <td>3.3974834437086097</td>\n",
              "      <td>30.31</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 60 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9489f46-196d-4f04-ac65-aa79e0789bfe')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d9489f46-196d-4f04-ac65-aa79e0789bfe button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d9489f46-196d-4f04-ac65-aa79e0789bfe');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021 = data_2021.drop(labels=['Shortcut', 'Start Time'], axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8dd8031d-c174-42ec-c6b4-df8dcacb4733",
        "id": "HKBIBAeL2YvP"
      },
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-119-5d5768b467d0>:1: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.\n",
            "  data_2021 = data_2021.drop(labels=['Shortcut', 'Start Time'], axis=1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ab149f3d-1564-44a1-fed0-157a24ffb586",
        "id": "TMA7mJIn2YvQ"
      },
      "execution_count": 120,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                 \\\n",
              "                           Raw   PTC PTC (OL)   SWC Filter Finish (OL) Finish   \n",
              "0    2021-01-01 00:00:00  6.07  5.19     5.25  5.28   5.34        7.42   7.53   \n",
              "1    2021-01-02 00:00:00  6.01  5.14     5.23   5.3   5.37        7.46   7.51   \n",
              "2    2021-01-03 00:00:00   NaN   NaN      NaN   NaN    NaN         NaN    NaN   \n",
              "3    2021-01-04 00:00:00  5.83  5.17     5.21  5.36   5.37         6.8   7.39   \n",
              "4    2021-01-05 00:00:00  6.01  5.25     5.21   5.4   5.45        7.24   6.93   \n",
              "..                   ...   ...   ...      ...   ...    ...         ...    ...   \n",
              "360  2021-12-27 00:00:00  6.06  5.17     4.96  5.29   5.31        7.38   7.84   \n",
              "361  2021-12-28 00:00:00  6.13  5.18     5.14  5.31   5.35        7.18   7.33   \n",
              "362  2021-12-29 00:00:00  6.09  5.17     5.15  5.24   5.29        6.95   6.77   \n",
              "363  2021-12-30 00:00:00  6.17  5.26     5.14   5.6   6.04        7.77    6.6   \n",
              "364  2021-12-31 00:00:00  6.16  5.12     5.21  5.24   5.26        7.11   7.65   \n",
              "\n",
              "    Chlorine        ... Flows within plant                  Flows from plant  \\\n",
              "        Free Total  ...             Finish  Filter Backwash         Bishop s   \n",
              "0       1.74   1.9  ...             12.898  13.874    0.976             1.41   \n",
              "1       1.82  2.04  ...              12.29   13.26     0.97              NaN   \n",
              "2        NaN   NaN  ...                NaN     NaN      NaN              NaN   \n",
              "3       1.58  1.86  ...              12.94   13.91     0.97            1.508   \n",
              "4       1.66  1.77  ...              12.89   13.87     0.98            1.508   \n",
              "..       ...   ...  ...                ...     ...      ...              ...   \n",
              "360     1.62  1.74  ...                  0       0        0                0   \n",
              "361     1.67  1.83  ...              11.76   12.79     1.03            1.382   \n",
              "362     1.76  1.91  ...              12.46   13.49     1.03            1.364   \n",
              "363     1.56  1.79  ...              12.41   13.48     1.07             1.36   \n",
              "364     1.58  1.79  ...              12.08   13.15     1.07            1.341   \n",
              "\n",
              "                      Chemical Dosages                         \n",
              "    Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "0     2.711  8.168              2.8888  30.56       4.8   9.3  \n",
              "1       NaN    NaN             3.01435  30.38       4.8   9.3  \n",
              "2       NaN    NaN                 NaN    NaN       NaN   NaN  \n",
              "3      2.63  8.423             2.70786  31.92       4.8   9.3  \n",
              "4      2.67  8.424             2.79585  31.69       4.8   9.6  \n",
              "..      ...    ...                 ...    ...       ...   ...  \n",
              "360       0      0                 NaN  30.98       5.2  11.8  \n",
              "361   1.703  8.519   2.471906462585034  31.22       5.2  11.8  \n",
              "362   1.715  8.602  3.3197383627608343  30.57       5.2  11.8  \n",
              "363   1.719  8.915    3.22665592264303  30.86       5.2  11.8  \n",
              "364   1.737  8.311  3.3974834437086097  30.31       5.2  11.6  \n",
              "\n",
              "[365 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b64b8fbe-07a3-4439-9465-6084e48be243\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-01-01 00:00:00</td>\n",
              "      <td>6.07</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.34</td>\n",
              "      <td>7.42</td>\n",
              "      <td>7.53</td>\n",
              "      <td>1.74</td>\n",
              "      <td>1.9</td>\n",
              "      <td>...</td>\n",
              "      <td>12.898</td>\n",
              "      <td>13.874</td>\n",
              "      <td>0.976</td>\n",
              "      <td>1.41</td>\n",
              "      <td>2.711</td>\n",
              "      <td>8.168</td>\n",
              "      <td>2.8888</td>\n",
              "      <td>30.56</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-01-02 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.23</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.46</td>\n",
              "      <td>7.51</td>\n",
              "      <td>1.82</td>\n",
              "      <td>2.04</td>\n",
              "      <td>...</td>\n",
              "      <td>12.29</td>\n",
              "      <td>13.26</td>\n",
              "      <td>0.97</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.01435</td>\n",
              "      <td>30.38</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-01-03 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-01-04 00:00:00</td>\n",
              "      <td>5.83</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.37</td>\n",
              "      <td>6.8</td>\n",
              "      <td>7.39</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.86</td>\n",
              "      <td>...</td>\n",
              "      <td>12.94</td>\n",
              "      <td>13.91</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.63</td>\n",
              "      <td>8.423</td>\n",
              "      <td>2.70786</td>\n",
              "      <td>31.92</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-01-05 00:00:00</td>\n",
              "      <td>6.01</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.24</td>\n",
              "      <td>6.93</td>\n",
              "      <td>1.66</td>\n",
              "      <td>1.77</td>\n",
              "      <td>...</td>\n",
              "      <td>12.89</td>\n",
              "      <td>13.87</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.67</td>\n",
              "      <td>8.424</td>\n",
              "      <td>2.79585</td>\n",
              "      <td>31.69</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2021-12-27 00:00:00</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.17</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>7.38</td>\n",
              "      <td>7.84</td>\n",
              "      <td>1.62</td>\n",
              "      <td>1.74</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2021-12-28 00:00:00</td>\n",
              "      <td>6.13</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.35</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.33</td>\n",
              "      <td>1.67</td>\n",
              "      <td>1.83</td>\n",
              "      <td>...</td>\n",
              "      <td>11.76</td>\n",
              "      <td>12.79</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.382</td>\n",
              "      <td>1.703</td>\n",
              "      <td>8.519</td>\n",
              "      <td>2.471906462585034</td>\n",
              "      <td>31.22</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2021-12-29 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.29</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.77</td>\n",
              "      <td>1.76</td>\n",
              "      <td>1.91</td>\n",
              "      <td>...</td>\n",
              "      <td>12.46</td>\n",
              "      <td>13.49</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.364</td>\n",
              "      <td>1.715</td>\n",
              "      <td>8.602</td>\n",
              "      <td>3.3197383627608343</td>\n",
              "      <td>30.57</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2021-12-30 00:00:00</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.04</td>\n",
              "      <td>7.77</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.56</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.48</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.36</td>\n",
              "      <td>1.719</td>\n",
              "      <td>8.915</td>\n",
              "      <td>3.22665592264303</td>\n",
              "      <td>30.86</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2021-12-31 00:00:00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.26</td>\n",
              "      <td>7.11</td>\n",
              "      <td>7.65</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>12.08</td>\n",
              "      <td>13.15</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.341</td>\n",
              "      <td>1.737</td>\n",
              "      <td>8.311</td>\n",
              "      <td>3.3974834437086097</td>\n",
              "      <td>30.31</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b64b8fbe-07a3-4439-9465-6084e48be243')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b64b8fbe-07a3-4439-9465-6084e48be243 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b64b8fbe-07a3-4439-9465-6084e48be243');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2021.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ab75cdc9-5d9b-4959-cea1-4c52c6ccfa45",
        "id": "Jh2oXcMP2YvQ"
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',      'PTC (OL)'),\n",
            "            (                    'pH',           'SWC'),\n",
            "            (                    'pH',        'Filter'),\n",
            "            (                    'pH',   'Finish (OL)'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (              'Chlorine',         'Total'),\n",
            "            (              'Chlorine',        'Sample'),\n",
            "            (              'Chlorine',      'Analyzer'),\n",
            "            (                'Colour',         'Raw A'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',         'SWC A'),\n",
            "            (                'Colour',      'Filter A'),\n",
            "            (                'Colour',      'Finish A'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',      'Raw (OL)'),\n",
            "            (             'Turbidity',           'SWC'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            (             'Turbidity',   'Finish (OL)'),\n",
            "            ('Total Dissolved Solids',           'Raw'),\n",
            "            ('Total Dissolved Solids',           'PTC'),\n",
            "            ('Total Dissolved Solids',           'SWC'),\n",
            "            ('Total Dissolved Solids',        'Filter'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',           'Raw'),\n",
            "            (          'Conductivity',           'PTC'),\n",
            "            (          'Conductivity',           'SWC'),\n",
            "            (          'Conductivity',        'Filter'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',           'Raw'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',           'Raw'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',           'Raw'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (               'Cl Used',             ' '),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (                   'UVT',           'Raw'),\n",
            "            (                   'UVT',        'Filter'),\n",
            "            (                   'UVA',           'Raw'),\n",
            "            (                   'UVA',        'Filter'),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (    'Flows within plant',        'Filter'),\n",
            "            (    'Flows within plant',      'Backwash'),\n",
            "            (      'Flows from plant',      'Bishop s'),\n",
            "            (      'Flows from plant',       'Botwood'),\n",
            "            (      'Flows from plant',           'GFW'),\n",
            "            (      'Chemical Dosages',      'Chlorine'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2022**"
      ],
      "metadata": {
        "id": "mWWQ6HF7CZA8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_22 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2022')\n",
        "data_22.to_csv('2022.csv', index=False)"
      ],
      "metadata": {
        "id": "fxa8JAXPCbw2"
      },
      "execution_count": 122,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022 = pd.read_csv('/content/2022.csv')"
      ],
      "metadata": {
        "id": "N6mi90qaCbw2"
      },
      "execution_count": 123,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "173d57ed-e50f-4d8e-b4ce-026106e3d239",
        "id": "n1tDF0UdCbw3"
      },
      "execution_count": 124,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.  \\\n",
              "0                                                NaN                                                                           \n",
              "1                                               Date                                                                           \n",
              "2                                2022-01-01 00:00:00                                                                           \n",
              "3                                2022-01-02 00:00:00                                                                           \n",
              "4                                2022-01-03 00:00:00                                                                           \n",
              "\n",
              "   Unnamed: 1  Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5 Unnamed: 6  \\\n",
              "0         NaN         NaN         pH        NaN        NaN        NaN   \n",
              "1    Shortcut  Start Time        Raw        PTC   PTC (OL)        SWC   \n",
              "2  Click Here           0       6.23       5.18       5.16       5.24   \n",
              "3  Click Here           0          0          0          0          0   \n",
              "4  Click Here           0       6.18       5.16       5.12        5.2   \n",
              "\n",
              "  Unnamed: 7   Unnamed: 8 Unnamed: 9  ... Unnamed: 49 Unnamed: 50 Unnamed: 51  \\\n",
              "0        NaN          NaN        NaN  ...         NaN         NaN         NaN   \n",
              "1     Filter  Finish (OL)     Finish  ...      Finish      Filter    Backwash   \n",
              "2       5.28         6.87       7.56  ...          12       13.03        1.03   \n",
              "3          0            0          0  ...        12.2       13.26        1.06   \n",
              "4       5.25         7.14        7.1  ...       12.92       13.98           0   \n",
              "\n",
              "        Unnamed: 52 Unnamed: 53 Unnamed: 54         Unnamed: 55 Unnamed: 56  \\\n",
              "0  Flows from plant         NaN         NaN    Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW            Chlorine        Alum   \n",
              "2                 0           0           0   3.356951666666667       30.12   \n",
              "3             1.315        1.75       8.405   3.299314754098361           0   \n",
              "4             1.402       1.854       8.766  3.2767414860681114       30.09   \n",
              "\n",
              "  Unnamed: 57  Unnamed: 58  \n",
              "0         NaN          NaN  \n",
              "1  Lime (Pre)  Lime (Post)  \n",
              "2         5.2         11.6  \n",
              "3         5.2         11.8  \n",
              "4         5.2         11.8  \n",
              "\n",
              "[5 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d850e08f-14e2-4c11-b220-eeff8eba9fba\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "      <th>Unnamed: 58</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>Shortcut</td>\n",
              "      <td>Start Time</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.23</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.28</td>\n",
              "      <td>6.87</td>\n",
              "      <td>7.56</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>13.03</td>\n",
              "      <td>1.03</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.356951666666667</td>\n",
              "      <td>30.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.2</td>\n",
              "      <td>13.26</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.315</td>\n",
              "      <td>1.75</td>\n",
              "      <td>8.405</td>\n",
              "      <td>3.299314754098361</td>\n",
              "      <td>0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.25</td>\n",
              "      <td>7.14</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>12.92</td>\n",
              "      <td>13.98</td>\n",
              "      <td>0</td>\n",
              "      <td>1.402</td>\n",
              "      <td>1.854</td>\n",
              "      <td>8.766</td>\n",
              "      <td>3.2767414860681114</td>\n",
              "      <td>30.09</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d850e08f-14e2-4c11-b220-eeff8eba9fba')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d850e08f-14e2-4c11-b220-eeff8eba9fba button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d850e08f-14e2-4c11-b220-eeff8eba9fba');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 124
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022 = data_2022.drop(data_2022.index[0])"
      ],
      "metadata": {
        "id": "4lyziMlBCbw3"
      },
      "execution_count": 125,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022.columns = pd.MultiIndex.from_tuples([('Date',' '),('Shortcut',' '),('Start Time',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "PUlFJKqKCbw3"
      },
      "execution_count": 126,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022 = data_2022.drop(data_2022.index[0])"
      ],
      "metadata": {
        "id": "xtDIU4E6Cbw3"
      },
      "execution_count": 127,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "b1235996-175d-460d-bc24-3af3fe40f7ed",
        "id": "otKhJjqCCbw4"
      },
      "execution_count": 128,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "2    2022-01-01 00:00:00  Click Here          0  6.23  5.18     5.16  5.24   \n",
              "3    2022-01-02 00:00:00  Click Here          0     0     0        0     0   \n",
              "4    2022-01-03 00:00:00  Click Here          0  6.18  5.16     5.12   5.2   \n",
              "5    2022-01-04 00:00:00  Click Here          0  6.12   5.1     5.07  5.17   \n",
              "6    2022-01-05 00:00:00  Click Here          0  6.27  5.14     5.19  5.24   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "362  2022-12-27 00:00:00  Click Here        NaN  6.29  5.88     5.99  5.63   \n",
              "363  2022-12-28 00:00:00  Click Here        NaN  6.74  5.61     5.46  6.16   \n",
              "364  2022-12-29 00:00:00  Click Here        NaN  6.81  5.43     5.44  5.54   \n",
              "365  2022-12-30 00:00:00  Click Here        NaN  6.54  5.46     5.43  5.52   \n",
              "366  2022-12-31 00:00:00  Click Here        NaN  6.43  5.49     5.44  5.45   \n",
              "\n",
              "                               ... Flows within plant                  \\\n",
              "    Filter Finish (OL) Finish  ...             Finish Filter Backwash   \n",
              "2     5.28        6.87   7.56  ...                 12  13.03     1.03   \n",
              "3        0           0      0  ...               12.2  13.26     1.06   \n",
              "4     5.25        7.14    7.1  ...              12.92  13.98        0   \n",
              "5     5.21        6.49   6.62  ...              12.78  13.83     1.05   \n",
              "6     5.25        6.37   6.22  ...              13.07  14.13     1.06   \n",
              "..     ...         ...    ...  ...                ...    ...      ...   \n",
              "362   5.77        7.49   7.65  ...              11.68  12.53     0.85   \n",
              "363   5.87        7.28   7.35  ...              11.85  12.82     0.97   \n",
              "364   5.52        7.44   7.31  ...              12.32  13.25     0.93   \n",
              "365   5.61        7.18    7.2  ...              12.21  13.12     0.91   \n",
              "366   5.53         7.1   7.49  ...              12.18   13.1     0.92   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                         \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "2                  0       0      0   3.356951666666667  30.12       5.2  11.6  \n",
              "3              1.315    1.75  8.405   3.299314754098361      0       5.2  11.8  \n",
              "4              1.402   1.854  8.766  3.2767414860681114  30.09       5.2  11.8  \n",
              "5              1.368   2.283  8.523   3.211392801251957  30.67       5.2  11.8  \n",
              "6              1.345   2.465  8.819  3.3033970925784235  32.12       5.2    12  \n",
              "..               ...     ...    ...                 ...    ...       ...   ...  \n",
              "362            1.018    2.32  8.442   2.828171232876713  30.91       5.6   8.9  \n",
              "363            1.022   2.346  8.484   3.041225316455696  30.47       5.5   8.9  \n",
              "364            1.133   2.382  9.006  3.0877159090909094  30.13       5.4   8.9  \n",
              "365            1.288   2.393  8.297  3.0954545454545452  28.47       5.4   8.9  \n",
              "366                0       0      0  2.9174532019704436  27.82       5.5   8.9  \n",
              "\n",
              "[365 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7947efdc-dc86-4e41-bf23-35d069fd7244\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.23</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.28</td>\n",
              "      <td>6.87</td>\n",
              "      <td>7.56</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>13.03</td>\n",
              "      <td>1.03</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.356951666666667</td>\n",
              "      <td>30.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.2</td>\n",
              "      <td>13.26</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.315</td>\n",
              "      <td>1.75</td>\n",
              "      <td>8.405</td>\n",
              "      <td>3.299314754098361</td>\n",
              "      <td>0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.25</td>\n",
              "      <td>7.14</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>12.92</td>\n",
              "      <td>13.98</td>\n",
              "      <td>0</td>\n",
              "      <td>1.402</td>\n",
              "      <td>1.854</td>\n",
              "      <td>8.766</td>\n",
              "      <td>3.2767414860681114</td>\n",
              "      <td>30.09</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2022-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.07</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.21</td>\n",
              "      <td>6.49</td>\n",
              "      <td>6.62</td>\n",
              "      <td>...</td>\n",
              "      <td>12.78</td>\n",
              "      <td>13.83</td>\n",
              "      <td>1.05</td>\n",
              "      <td>1.368</td>\n",
              "      <td>2.283</td>\n",
              "      <td>8.523</td>\n",
              "      <td>3.211392801251957</td>\n",
              "      <td>30.67</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2022-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.27</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.22</td>\n",
              "      <td>...</td>\n",
              "      <td>13.07</td>\n",
              "      <td>14.13</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.345</td>\n",
              "      <td>2.465</td>\n",
              "      <td>8.819</td>\n",
              "      <td>3.3033970925784235</td>\n",
              "      <td>32.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2022-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.88</td>\n",
              "      <td>5.99</td>\n",
              "      <td>5.63</td>\n",
              "      <td>5.77</td>\n",
              "      <td>7.49</td>\n",
              "      <td>7.65</td>\n",
              "      <td>...</td>\n",
              "      <td>11.68</td>\n",
              "      <td>12.53</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.018</td>\n",
              "      <td>2.32</td>\n",
              "      <td>8.442</td>\n",
              "      <td>2.828171232876713</td>\n",
              "      <td>30.91</td>\n",
              "      <td>5.6</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2022-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.74</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.46</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.87</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.35</td>\n",
              "      <td>...</td>\n",
              "      <td>11.85</td>\n",
              "      <td>12.82</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.022</td>\n",
              "      <td>2.346</td>\n",
              "      <td>8.484</td>\n",
              "      <td>3.041225316455696</td>\n",
              "      <td>30.47</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2022-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.54</td>\n",
              "      <td>5.52</td>\n",
              "      <td>7.44</td>\n",
              "      <td>7.31</td>\n",
              "      <td>...</td>\n",
              "      <td>12.32</td>\n",
              "      <td>13.25</td>\n",
              "      <td>0.93</td>\n",
              "      <td>1.133</td>\n",
              "      <td>2.382</td>\n",
              "      <td>9.006</td>\n",
              "      <td>3.0877159090909094</td>\n",
              "      <td>30.13</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2022-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.54</td>\n",
              "      <td>5.46</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.61</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.2</td>\n",
              "      <td>...</td>\n",
              "      <td>12.21</td>\n",
              "      <td>13.12</td>\n",
              "      <td>0.91</td>\n",
              "      <td>1.288</td>\n",
              "      <td>2.393</td>\n",
              "      <td>8.297</td>\n",
              "      <td>3.0954545454545452</td>\n",
              "      <td>28.47</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2022-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.53</td>\n",
              "      <td>7.1</td>\n",
              "      <td>7.49</td>\n",
              "      <td>...</td>\n",
              "      <td>12.18</td>\n",
              "      <td>13.1</td>\n",
              "      <td>0.92</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9174532019704436</td>\n",
              "      <td>27.82</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7947efdc-dc86-4e41-bf23-35d069fd7244')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7947efdc-dc86-4e41-bf23-35d069fd7244 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7947efdc-dc86-4e41-bf23-35d069fd7244');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 128
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022 = data_2022.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "QXuehsiYCbw4"
      },
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "8b146324-9d0b-4eb4-c44c-ccde56564087",
        "id": "qZf4AVlrCbw4"
      },
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    Shortcut Start Time    pH                       \\\n",
              "                                                  Raw   PTC PTC (OL)   SWC   \n",
              "0    2022-01-01 00:00:00  Click Here          0  6.23  5.18     5.16  5.24   \n",
              "1    2022-01-02 00:00:00  Click Here          0     0     0        0     0   \n",
              "2    2022-01-03 00:00:00  Click Here          0  6.18  5.16     5.12   5.2   \n",
              "3    2022-01-04 00:00:00  Click Here          0  6.12   5.1     5.07  5.17   \n",
              "4    2022-01-05 00:00:00  Click Here          0  6.27  5.14     5.19  5.24   \n",
              "..                   ...         ...        ...   ...   ...      ...   ...   \n",
              "360  2022-12-27 00:00:00  Click Here        NaN  6.29  5.88     5.99  5.63   \n",
              "361  2022-12-28 00:00:00  Click Here        NaN  6.74  5.61     5.46  6.16   \n",
              "362  2022-12-29 00:00:00  Click Here        NaN  6.81  5.43     5.44  5.54   \n",
              "363  2022-12-30 00:00:00  Click Here        NaN  6.54  5.46     5.43  5.52   \n",
              "364  2022-12-31 00:00:00  Click Here        NaN  6.43  5.49     5.44  5.45   \n",
              "\n",
              "                               ... Flows within plant                  \\\n",
              "    Filter Finish (OL) Finish  ...             Finish Filter Backwash   \n",
              "0     5.28        6.87   7.56  ...                 12  13.03     1.03   \n",
              "1        0           0      0  ...               12.2  13.26     1.06   \n",
              "2     5.25        7.14    7.1  ...              12.92  13.98        0   \n",
              "3     5.21        6.49   6.62  ...              12.78  13.83     1.05   \n",
              "4     5.25        6.37   6.22  ...              13.07  14.13     1.06   \n",
              "..     ...         ...    ...  ...                ...    ...      ...   \n",
              "360   5.77        7.49   7.65  ...              11.68  12.53     0.85   \n",
              "361   5.87        7.28   7.35  ...              11.85  12.82     0.97   \n",
              "362   5.52        7.44   7.31  ...              12.32  13.25     0.93   \n",
              "363   5.61        7.18    7.2  ...              12.21  13.12     0.91   \n",
              "364   5.53         7.1   7.49  ...              12.18   13.1     0.92   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                         \n",
              "            Bishop s Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "0                  0       0      0   3.356951666666667  30.12       5.2  11.6  \n",
              "1              1.315    1.75  8.405   3.299314754098361      0       5.2  11.8  \n",
              "2              1.402   1.854  8.766  3.2767414860681114  30.09       5.2  11.8  \n",
              "3              1.368   2.283  8.523   3.211392801251957  30.67       5.2  11.8  \n",
              "4              1.345   2.465  8.819  3.3033970925784235  32.12       5.2    12  \n",
              "..               ...     ...    ...                 ...    ...       ...   ...  \n",
              "360            1.018    2.32  8.442   2.828171232876713  30.91       5.6   8.9  \n",
              "361            1.022   2.346  8.484   3.041225316455696  30.47       5.5   8.9  \n",
              "362            1.133   2.382  9.006  3.0877159090909094  30.13       5.4   8.9  \n",
              "363            1.288   2.393  8.297  3.0954545454545452  28.47       5.4   8.9  \n",
              "364                0       0      0  2.9174532019704436  27.82       5.5   8.9  \n",
              "\n",
              "[365 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f745df64-f369-41a4-9749-b80b71585d15\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-01-01 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.23</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.28</td>\n",
              "      <td>6.87</td>\n",
              "      <td>7.56</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>13.03</td>\n",
              "      <td>1.03</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.356951666666667</td>\n",
              "      <td>30.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-01-02 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.2</td>\n",
              "      <td>13.26</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.315</td>\n",
              "      <td>1.75</td>\n",
              "      <td>8.405</td>\n",
              "      <td>3.299314754098361</td>\n",
              "      <td>0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-01-03 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.25</td>\n",
              "      <td>7.14</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>12.92</td>\n",
              "      <td>13.98</td>\n",
              "      <td>0</td>\n",
              "      <td>1.402</td>\n",
              "      <td>1.854</td>\n",
              "      <td>8.766</td>\n",
              "      <td>3.2767414860681114</td>\n",
              "      <td>30.09</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-01-04 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.07</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.21</td>\n",
              "      <td>6.49</td>\n",
              "      <td>6.62</td>\n",
              "      <td>...</td>\n",
              "      <td>12.78</td>\n",
              "      <td>13.83</td>\n",
              "      <td>1.05</td>\n",
              "      <td>1.368</td>\n",
              "      <td>2.283</td>\n",
              "      <td>8.523</td>\n",
              "      <td>3.211392801251957</td>\n",
              "      <td>30.67</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-01-05 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>0</td>\n",
              "      <td>6.27</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.22</td>\n",
              "      <td>...</td>\n",
              "      <td>13.07</td>\n",
              "      <td>14.13</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.345</td>\n",
              "      <td>2.465</td>\n",
              "      <td>8.819</td>\n",
              "      <td>3.3033970925784235</td>\n",
              "      <td>32.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2022-12-27 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.88</td>\n",
              "      <td>5.99</td>\n",
              "      <td>5.63</td>\n",
              "      <td>5.77</td>\n",
              "      <td>7.49</td>\n",
              "      <td>7.65</td>\n",
              "      <td>...</td>\n",
              "      <td>11.68</td>\n",
              "      <td>12.53</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.018</td>\n",
              "      <td>2.32</td>\n",
              "      <td>8.442</td>\n",
              "      <td>2.828171232876713</td>\n",
              "      <td>30.91</td>\n",
              "      <td>5.6</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2022-12-28 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.74</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.46</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.87</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.35</td>\n",
              "      <td>...</td>\n",
              "      <td>11.85</td>\n",
              "      <td>12.82</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.022</td>\n",
              "      <td>2.346</td>\n",
              "      <td>8.484</td>\n",
              "      <td>3.041225316455696</td>\n",
              "      <td>30.47</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2022-12-29 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.54</td>\n",
              "      <td>5.52</td>\n",
              "      <td>7.44</td>\n",
              "      <td>7.31</td>\n",
              "      <td>...</td>\n",
              "      <td>12.32</td>\n",
              "      <td>13.25</td>\n",
              "      <td>0.93</td>\n",
              "      <td>1.133</td>\n",
              "      <td>2.382</td>\n",
              "      <td>9.006</td>\n",
              "      <td>3.0877159090909094</td>\n",
              "      <td>30.13</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2022-12-30 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.54</td>\n",
              "      <td>5.46</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.61</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.2</td>\n",
              "      <td>...</td>\n",
              "      <td>12.21</td>\n",
              "      <td>13.12</td>\n",
              "      <td>0.91</td>\n",
              "      <td>1.288</td>\n",
              "      <td>2.393</td>\n",
              "      <td>8.297</td>\n",
              "      <td>3.0954545454545452</td>\n",
              "      <td>28.47</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2022-12-31 00:00:00</td>\n",
              "      <td>Click Here</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.53</td>\n",
              "      <td>7.1</td>\n",
              "      <td>7.49</td>\n",
              "      <td>...</td>\n",
              "      <td>12.18</td>\n",
              "      <td>13.1</td>\n",
              "      <td>0.92</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9174532019704436</td>\n",
              "      <td>27.82</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f745df64-f369-41a4-9749-b80b71585d15')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f745df64-f369-41a4-9749-b80b71585d15 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f745df64-f369-41a4-9749-b80b71585d15');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022 = data_2022.drop(labels=['Shortcut', 'Start Time'], axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cc41c344-72ea-480e-c932-9d49329fa5c3",
        "id": "DuDDJkVXCbw4"
      },
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-131-d9b1e7e8c0a9>:1: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.\n",
            "  data_2022 = data_2022.drop(labels=['Shortcut', 'Start Time'], axis=1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "3589c729-5aea-4a67-9995-8a28a97eba29",
        "id": "rKFKjIAoCbw5"
      },
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                 \\\n",
              "                           Raw   PTC PTC (OL)   SWC Filter Finish (OL) Finish   \n",
              "0    2022-01-01 00:00:00  6.23  5.18     5.16  5.24   5.28        6.87   7.56   \n",
              "1    2022-01-02 00:00:00     0     0        0     0      0           0      0   \n",
              "2    2022-01-03 00:00:00  6.18  5.16     5.12   5.2   5.25        7.14    7.1   \n",
              "3    2022-01-04 00:00:00  6.12   5.1     5.07  5.17   5.21        6.49   6.62   \n",
              "4    2022-01-05 00:00:00  6.27  5.14     5.19  5.24   5.25        6.37   6.22   \n",
              "..                   ...   ...   ...      ...   ...    ...         ...    ...   \n",
              "360  2022-12-27 00:00:00  6.29  5.88     5.99  5.63   5.77        7.49   7.65   \n",
              "361  2022-12-28 00:00:00  6.74  5.61     5.46  6.16   5.87        7.28   7.35   \n",
              "362  2022-12-29 00:00:00  6.81  5.43     5.44  5.54   5.52        7.44   7.31   \n",
              "363  2022-12-30 00:00:00  6.54  5.46     5.43  5.52   5.61        7.18    7.2   \n",
              "364  2022-12-31 00:00:00  6.43  5.49     5.44  5.45   5.53         7.1   7.49   \n",
              "\n",
              "    Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "        Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "0       1.55  1.76  ...                 12  13.03     1.03                0   \n",
              "1          0     0  ...               12.2  13.26     1.06            1.315   \n",
              "2       1.57  1.86  ...              12.92  13.98        0            1.402   \n",
              "3       1.45  1.72  ...              12.78  13.83     1.05            1.368   \n",
              "4        1.6  1.91  ...              13.07  14.13     1.06            1.345   \n",
              "..       ...   ...  ...                ...    ...      ...              ...   \n",
              "360     1.73  1.88  ...              11.68  12.53     0.85            1.018   \n",
              "361     1.67  1.83  ...              11.85  12.82     0.97            1.022   \n",
              "362     1.62  1.97  ...              12.32  13.25     0.93            1.133   \n",
              "363     1.66  1.84  ...              12.21  13.12     0.91            1.288   \n",
              "364     1.65  1.78  ...              12.18   13.1     0.92                0   \n",
              "\n",
              "                      Chemical Dosages                         \n",
              "    Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "0         0      0   3.356951666666667  30.12       5.2  11.6  \n",
              "1      1.75  8.405   3.299314754098361      0       5.2  11.8  \n",
              "2     1.854  8.766  3.2767414860681114  30.09       5.2  11.8  \n",
              "3     2.283  8.523   3.211392801251957  30.67       5.2  11.8  \n",
              "4     2.465  8.819  3.3033970925784235  32.12       5.2    12  \n",
              "..      ...    ...                 ...    ...       ...   ...  \n",
              "360    2.32  8.442   2.828171232876713  30.91       5.6   8.9  \n",
              "361   2.346  8.484   3.041225316455696  30.47       5.5   8.9  \n",
              "362   2.382  9.006  3.0877159090909094  30.13       5.4   8.9  \n",
              "363   2.393  8.297  3.0954545454545452  28.47       5.4   8.9  \n",
              "364       0      0  2.9174532019704436  27.82       5.5   8.9  \n",
              "\n",
              "[365 rows x 57 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-241f1604-c5b0-4bfc-93b9-43ad0686df57\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-01-01 00:00:00</td>\n",
              "      <td>6.23</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.28</td>\n",
              "      <td>6.87</td>\n",
              "      <td>7.56</td>\n",
              "      <td>1.55</td>\n",
              "      <td>1.76</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>13.03</td>\n",
              "      <td>1.03</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.356951666666667</td>\n",
              "      <td>30.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-01-02 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.2</td>\n",
              "      <td>13.26</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.315</td>\n",
              "      <td>1.75</td>\n",
              "      <td>8.405</td>\n",
              "      <td>3.299314754098361</td>\n",
              "      <td>0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-01-03 00:00:00</td>\n",
              "      <td>6.18</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.25</td>\n",
              "      <td>7.14</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.57</td>\n",
              "      <td>1.86</td>\n",
              "      <td>...</td>\n",
              "      <td>12.92</td>\n",
              "      <td>13.98</td>\n",
              "      <td>0</td>\n",
              "      <td>1.402</td>\n",
              "      <td>1.854</td>\n",
              "      <td>8.766</td>\n",
              "      <td>3.2767414860681114</td>\n",
              "      <td>30.09</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-01-04 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.07</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.21</td>\n",
              "      <td>6.49</td>\n",
              "      <td>6.62</td>\n",
              "      <td>1.45</td>\n",
              "      <td>1.72</td>\n",
              "      <td>...</td>\n",
              "      <td>12.78</td>\n",
              "      <td>13.83</td>\n",
              "      <td>1.05</td>\n",
              "      <td>1.368</td>\n",
              "      <td>2.283</td>\n",
              "      <td>8.523</td>\n",
              "      <td>3.211392801251957</td>\n",
              "      <td>30.67</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-01-05 00:00:00</td>\n",
              "      <td>6.27</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.22</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1.91</td>\n",
              "      <td>...</td>\n",
              "      <td>13.07</td>\n",
              "      <td>14.13</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.345</td>\n",
              "      <td>2.465</td>\n",
              "      <td>8.819</td>\n",
              "      <td>3.3033970925784235</td>\n",
              "      <td>32.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2022-12-27 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.88</td>\n",
              "      <td>5.99</td>\n",
              "      <td>5.63</td>\n",
              "      <td>5.77</td>\n",
              "      <td>7.49</td>\n",
              "      <td>7.65</td>\n",
              "      <td>1.73</td>\n",
              "      <td>1.88</td>\n",
              "      <td>...</td>\n",
              "      <td>11.68</td>\n",
              "      <td>12.53</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.018</td>\n",
              "      <td>2.32</td>\n",
              "      <td>8.442</td>\n",
              "      <td>2.828171232876713</td>\n",
              "      <td>30.91</td>\n",
              "      <td>5.6</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2022-12-28 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.46</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.87</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.67</td>\n",
              "      <td>1.83</td>\n",
              "      <td>...</td>\n",
              "      <td>11.85</td>\n",
              "      <td>12.82</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.022</td>\n",
              "      <td>2.346</td>\n",
              "      <td>8.484</td>\n",
              "      <td>3.041225316455696</td>\n",
              "      <td>30.47</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2022-12-29 00:00:00</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.54</td>\n",
              "      <td>5.52</td>\n",
              "      <td>7.44</td>\n",
              "      <td>7.31</td>\n",
              "      <td>1.62</td>\n",
              "      <td>1.97</td>\n",
              "      <td>...</td>\n",
              "      <td>12.32</td>\n",
              "      <td>13.25</td>\n",
              "      <td>0.93</td>\n",
              "      <td>1.133</td>\n",
              "      <td>2.382</td>\n",
              "      <td>9.006</td>\n",
              "      <td>3.0877159090909094</td>\n",
              "      <td>30.13</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2022-12-30 00:00:00</td>\n",
              "      <td>6.54</td>\n",
              "      <td>5.46</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.61</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.2</td>\n",
              "      <td>1.66</td>\n",
              "      <td>1.84</td>\n",
              "      <td>...</td>\n",
              "      <td>12.21</td>\n",
              "      <td>13.12</td>\n",
              "      <td>0.91</td>\n",
              "      <td>1.288</td>\n",
              "      <td>2.393</td>\n",
              "      <td>8.297</td>\n",
              "      <td>3.0954545454545452</td>\n",
              "      <td>28.47</td>\n",
              "      <td>5.4</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2022-12-31 00:00:00</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.53</td>\n",
              "      <td>7.1</td>\n",
              "      <td>7.49</td>\n",
              "      <td>1.65</td>\n",
              "      <td>1.78</td>\n",
              "      <td>...</td>\n",
              "      <td>12.18</td>\n",
              "      <td>13.1</td>\n",
              "      <td>0.92</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.9174532019704436</td>\n",
              "      <td>27.82</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>365 rows × 57 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-241f1604-c5b0-4bfc-93b9-43ad0686df57')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-241f1604-c5b0-4bfc-93b9-43ad0686df57 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-241f1604-c5b0-4bfc-93b9-43ad0686df57');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2022.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "80b9686e-2a67-4ca4-a11e-66309e4e7cdd",
        "id": "Up-QOhP2Cbw5"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',      'PTC (OL)'),\n",
            "            (                    'pH',           'SWC'),\n",
            "            (                    'pH',        'Filter'),\n",
            "            (                    'pH',   'Finish (OL)'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (              'Chlorine',         'Total'),\n",
            "            (              'Chlorine',        'Sample'),\n",
            "            (              'Chlorine',      'Analyzer'),\n",
            "            (                'Colour',         'Raw A'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',         'SWC A'),\n",
            "            (                'Colour',      'Filter A'),\n",
            "            (                'Colour',      'Finish A'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',      'Raw (OL)'),\n",
            "            (             'Turbidity',           'SWC'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            (             'Turbidity',   'Finish (OL)'),\n",
            "            ('Total Dissolved Solids',           'Raw'),\n",
            "            ('Total Dissolved Solids',           'PTC'),\n",
            "            ('Total Dissolved Solids',           'SWC'),\n",
            "            ('Total Dissolved Solids',        'Filter'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',           'Raw'),\n",
            "            (          'Conductivity',           'PTC'),\n",
            "            (          'Conductivity',           'SWC'),\n",
            "            (          'Conductivity',        'Filter'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',           'Raw'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',           'Raw'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',           'Raw'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (                   'UVT',           'Raw'),\n",
            "            (                   'UVT',        'Filter'),\n",
            "            (                   'UVA',           'Raw'),\n",
            "            (                   'UVA',        'Filter'),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (    'Flows within plant',        'Filter'),\n",
            "            (    'Flows within plant',      'Backwash'),\n",
            "            (      'Flows from plant',      'Bishop s'),\n",
            "            (      'Flows from plant',       'Botwood'),\n",
            "            (      'Flows from plant',           'GFW'),\n",
            "            (      'Chemical Dosages',      'Chlorine'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2023**"
      ],
      "metadata": {
        "id": "5Vcq1YLTDQsG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_23 = pd.read_excel('/content/New Dataset.xlsx', sheet_name='2023')\n",
        "data_23.to_csv('2023.csv', index=False)"
      ],
      "metadata": {
        "id": "li71a3C_DS_X"
      },
      "execution_count": 134,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023 = pd.read_csv('/content/2023.csv')"
      ],
      "metadata": {
        "id": "WbQm1McQDS_X"
      },
      "execution_count": 135,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "49256c56-5ae2-4e39-c508-26c4a7148945",
        "id": "8ynAjf2dDS_X"
      },
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.  \\\n",
              "0                                                NaN                                                                           \n",
              "1                                               Date                                                                           \n",
              "2                                2023-01-01 00:00:00                                                                           \n",
              "3                                2023-01-02 00:00:00                                                                           \n",
              "4                                2023-01-03 00:00:00                                                                           \n",
              "\n",
              "   Unnamed: 1  Unnamed: 2 Unnamed: 3 Unnamed: 4 Unnamed: 5 Unnamed: 6  \\\n",
              "0         NaN         NaN         pH        NaN        NaN        NaN   \n",
              "1         NaN         NaN        Raw        PTC   PTC (OL)        SWC   \n",
              "2         NaN         NaN          0          0          0          0   \n",
              "3         NaN         NaN       6.58       5.21       5.37       5.44   \n",
              "4         NaN         NaN       6.74       5.39       5.45       5.47   \n",
              "\n",
              "  Unnamed: 7   Unnamed: 8 Unnamed: 9  ... Unnamed: 49 Unnamed: 50 Unnamed: 51  \\\n",
              "0        NaN          NaN        NaN  ...         NaN         NaN         NaN   \n",
              "1     Filter  Finish (OL)     Finish  ...      Finish      Filter    Backwash   \n",
              "2          0            0          0  ...       11.91       12.84        0.92   \n",
              "3       5.52         7.09       7.03  ...       12.69       13.65        0.96   \n",
              "4       5.49         7.31       7.29  ...       12.73       13.59        0.86   \n",
              "\n",
              "        Unnamed: 52 Unnamed: 53 Unnamed: 54         Unnamed: 55 Unnamed: 56  \\\n",
              "0  Flows from plant         NaN         NaN    Chemical Dosages         NaN   \n",
              "1          Bishop's     Botwood         GFW            Chlorine        Alum   \n",
              "2             1.295       2.455       8.443   2.942041981528128           0   \n",
              "3             1.311       2.455       8.869   3.234526398739165        31.6   \n",
              "4              1.36       2.485       9.113  3.0670856245090334       31.86   \n",
              "\n",
              "  Unnamed: 57  Unnamed: 58  \n",
              "0         NaN          NaN  \n",
              "1  Lime (Pre)  Lime (Post)  \n",
              "2           0            0  \n",
              "3         5.5          8.9  \n",
              "4         5.3          8.9  \n",
              "\n",
              "[5 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1c832699-d4a4-4238-a2b1-d4209242233b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Note: The password to unlock the sheets is \"WTPLAB\". Don't unlock any of them unless you plan on making permanent changes.</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 49</th>\n",
              "      <th>Unnamed: 50</th>\n",
              "      <th>Unnamed: 51</th>\n",
              "      <th>Unnamed: 52</th>\n",
              "      <th>Unnamed: 53</th>\n",
              "      <th>Unnamed: 54</th>\n",
              "      <th>Unnamed: 55</th>\n",
              "      <th>Unnamed: 56</th>\n",
              "      <th>Unnamed: 57</th>\n",
              "      <th>Unnamed: 58</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Flows from plant</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chemical Dosages</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Date</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Raw</td>\n",
              "      <td>PTC</td>\n",
              "      <td>PTC (OL)</td>\n",
              "      <td>SWC</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Finish (OL)</td>\n",
              "      <td>Finish</td>\n",
              "      <td>...</td>\n",
              "      <td>Finish</td>\n",
              "      <td>Filter</td>\n",
              "      <td>Backwash</td>\n",
              "      <td>Bishop's</td>\n",
              "      <td>Botwood</td>\n",
              "      <td>GFW</td>\n",
              "      <td>Chlorine</td>\n",
              "      <td>Alum</td>\n",
              "      <td>Lime (Pre)</td>\n",
              "      <td>Lime (Post)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023-01-01 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>11.91</td>\n",
              "      <td>12.84</td>\n",
              "      <td>0.92</td>\n",
              "      <td>1.295</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.443</td>\n",
              "      <td>2.942041981528128</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023-01-02 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.58</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.52</td>\n",
              "      <td>7.09</td>\n",
              "      <td>7.03</td>\n",
              "      <td>...</td>\n",
              "      <td>12.69</td>\n",
              "      <td>13.65</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.311</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.869</td>\n",
              "      <td>3.234526398739165</td>\n",
              "      <td>31.6</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023-01-03 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.74</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.31</td>\n",
              "      <td>7.29</td>\n",
              "      <td>...</td>\n",
              "      <td>12.73</td>\n",
              "      <td>13.59</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.36</td>\n",
              "      <td>2.485</td>\n",
              "      <td>9.113</td>\n",
              "      <td>3.0670856245090334</td>\n",
              "      <td>31.86</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c832699-d4a4-4238-a2b1-d4209242233b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1c832699-d4a4-4238-a2b1-d4209242233b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1c832699-d4a4-4238-a2b1-d4209242233b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023 = data_2023.drop(data_2023.index[0])"
      ],
      "metadata": {
        "id": "y9DbdiLaDS_X"
      },
      "execution_count": 137,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023.columns = pd.MultiIndex.from_tuples([('Date',' '),('Shortcut',' '),('Start Time',' '),('pH','Raw'),('pH','PTC'),('pH','PTC (OL)'),('pH','SWC'),('pH','Filter'),('pH','Finish (OL)'),('pH','Finish'), ('Chlorine','Free'),('Chlorine','Total'),('Chlorine','Sample'),('Chlorine','Analyzer'), ('Colour','Raw A'),('Colour','Raw T'),('Colour','SWC A'),('Colour','Filter A'),('Colour','Finish A'),('Colour','Finish T'), ('Turbidity', 'Raw'),('Turbidity','Raw (OL)'),('Turbidity', 'SWC'),('Turbidity','Filter'),('Turbidity','Finish'),('Turbidity','Finish (OL)'), ('Total Dissolved Solids', 'Raw'),('Total Dissolved Solids','PTC'),('Total Dissolved Solids','SWC'),('Total Dissolved Solids','Filter'),('Total Dissolved Solids','Finish'),('Conductivity','Raw'),('Conductivity','PTC'),('Conductivity','SWC'),('Conductivity','Filter'),('Conductivity','Finish'),('Hardness', 'Raw'),('Hardness','Finish'),('Alkalinity','Raw'),('Alkalinity','Finish'),('Aluminum', 'Finish (Free)'),('Temperature', 'Raw'),('Temperature','Finish'),('Cl Demand', ' '),('UVT', 'Raw'),('UVT','Filter'),('UVA', 'Raw'),('UVA','Filter'),('Flows within plant','Raw'),('Flows within plant','Finish'),('Flows within plant','Filter'),('Flows within plant','Backwash'),('Flows from plant', 'Bishop s'),('Flows from plant','Botwood'),('Flows from plant','GFW'),('Chemical Dosages', 'Chlorine'),('Chemical Dosages','Alum'),('Chemical Dosages','Limestone'),('Chemical Dosages','Lime')])"
      ],
      "metadata": {
        "id": "1imcigwODS_Y"
      },
      "execution_count": 138,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023 = data_2023.drop(data_2023.index[0])"
      ],
      "metadata": {
        "id": "_dv4ipfLDS_Y"
      },
      "execution_count": 139,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "72481faa-930d-4b07-ab31-5ef4a512f7b7",
        "id": "4jBdPQZzDS_Y"
      },
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   Date Shortcut Start Time    pH                        \\\n",
              "                                              Raw    PTC PTC (OL)   SWC   \n",
              "2   2023-01-01 00:00:00      NaN        NaN     0      0        0     0   \n",
              "3   2023-01-02 00:00:00      NaN        NaN  6.58   5.21     5.37  5.44   \n",
              "4   2023-01-03 00:00:00      NaN        NaN  6.74   5.39     5.45  5.47   \n",
              "5   2023-01-04 00:00:00      NaN        NaN  6.22   5.42     5.42   5.4   \n",
              "6   2023-01-05 00:00:00      NaN        NaN  6.38   5.43     5.38  5.45   \n",
              "7   2023-01-06 00:00:00      NaN        NaN  6.11  5.445     5.29  5.55   \n",
              "8   2023-01-07 00:00:00      NaN        NaN  6.17   5.51     5.48  5.71   \n",
              "9   2023-01-08 00:00:00      NaN        NaN     0      0        0     0   \n",
              "10  2023-01-09 00:00:00      NaN        NaN  6.61    5.4     5.45  5.43   \n",
              "11  2023-01-10 00:00:00      NaN        NaN  6.43   5.44      5.1  5.49   \n",
              "12  2023-01-11 00:00:00      NaN        NaN  6.27   5.51     5.52  5.57   \n",
              "13  2023-01-12 00:00:00      NaN        NaN  6.41   5.41     5.45  5.59   \n",
              "14  2023-01-13 00:00:00      NaN        NaN  6.73   5.42     5.34   5.4   \n",
              "15  2023-01-14 00:00:00      NaN        NaN  7.61   5.37     5.32  5.42   \n",
              "16  2023-01-15 00:00:00      NaN        NaN     0      0        0     0   \n",
              "17  2023-01-16 00:00:00      NaN        NaN  7.29    5.4     5.24  5.43   \n",
              "18  2023-01-17 00:00:00      NaN        NaN   7.7   5.86     5.41   6.2   \n",
              "19  2023-01-18 00:00:00      NaN        NaN  7.46   5.35     5.82  5.38   \n",
              "20  2023-01-19 00:00:00      NaN        NaN   7.3   5.39     5.39  5.48   \n",
              "21  2023-01-20 00:00:00      NaN        NaN   7.3   5.53     5.44  5.59   \n",
              "22  2023-01-21 00:00:00      NaN        NaN  7.14   5.37     5.32   5.3   \n",
              "23  2023-01-22 00:00:00      NaN        NaN  7.29   5.21     5.39  5.27   \n",
              "24  2023-01-23 00:00:00      NaN        NaN  7.84   5.38     5.41  5.35   \n",
              "25  2023-01-24 00:00:00      NaN        NaN   7.7   5.47     5.55  5.45   \n",
              "26  2023-01-25 00:00:00      NaN        NaN  7.46   5.45     5.48  5.53   \n",
              "27  2023-01-26 00:00:00      NaN        NaN  7.25    5.3     5.46   5.4   \n",
              "28  2023-01-27 00:00:00      NaN        NaN  6.32   5.42     5.31  5.52   \n",
              "29  2023-01-28 00:00:00      NaN        NaN  6.26   5.57      5.5  5.61   \n",
              "30  2023-01-29 00:00:00      NaN        NaN     0      0        0     0   \n",
              "31  2023-01-30 00:00:00      NaN        NaN   7.6   5.22     5.59  5.42   \n",
              "32  2023-01-31 00:00:00      NaN        NaN  7.23   5.38      5.4  5.42   \n",
              "33  2023-02-01 00:00:00      NaN        NaN  6.29   5.54     5.57  5.71   \n",
              "34  2023-02-02 00:00:00      NaN        NaN  6.31   5.49     5.55  5.61   \n",
              "35  2023-02-03 00:00:00      NaN        NaN  6.41   5.69     5.55  5.65   \n",
              "36  2023-02-04 00:00:00      NaN        NaN  6.39   5.57     5.59  5.53   \n",
              "37  2023-02-05 00:00:00      NaN        NaN     0      0        0     0   \n",
              "38  2023-02-06 00:00:00      NaN        NaN  6.31   5.74     5.47  5.98   \n",
              "39  2023-02-07 00:00:00      NaN        NaN  6.25   5.44     5.49   5.5   \n",
              "40  2023-02-08 00:00:00      NaN        NaN  6.25   5.35     5.45  5.42   \n",
              "\n",
              "                              ... Flows within plant                  \\\n",
              "   Filter Finish (OL) Finish  ...             Finish Filter Backwash   \n",
              "2       0           0      0  ...              11.91  12.84     0.92   \n",
              "3    5.52        7.09   7.03  ...              12.69  13.65     0.96   \n",
              "4    5.49        7.31   7.29  ...              12.73  13.59     0.86   \n",
              "5    5.45        6.95   6.93  ...              12.41  13.22     0.81   \n",
              "6    5.48        7.13   7.11  ...              12.31  13.13     0.82   \n",
              "7    5.65        6.92   6.73  ...              12.63  13.47     0.84   \n",
              "8    5.77        7.09   6.99  ...              12.59  13.45     0.86   \n",
              "9       0           0      0  ...                  0      0        0   \n",
              "10   5.47        7.01   7.05  ...              12.17  13.02     0.85   \n",
              "11   5.48        7.06   7.24  ...              12.87  13.73     0.86   \n",
              "12   5.76        7.33   7.11  ...              12.51  13.41      0.9   \n",
              "13   5.71        7.01   6.93  ...              13.19  14.03     0.84   \n",
              "14   5.43        7.04    7.1  ...              12.56  13.43     0.87   \n",
              "15   5.41        7.28   6.95  ...              13.18  14.02     0.84   \n",
              "16      0           0      0  ...              12.56  13.37     0.81   \n",
              "17   5.37        6.55   6.42  ...              13.39  15.09      1.7   \n",
              "18   6.67        7.65   7.13  ...              12.97   13.8     0.83   \n",
              "19   5.39        7.28   7.59  ...              13.71  14.59     0.88   \n",
              "20   5.45        7.28   7.55  ...              13.08  14.06     0.98   \n",
              "21   5.51         7.3   7.41  ...               13.8  14.63     0.83   \n",
              "22   5.37        7.53   7.52  ...              12.26  13.25     0.99   \n",
              "23   5.33        7.01   7.02  ...              12.79  13.74     0.95   \n",
              "24   5.37         7.4   7.13  ...              12.57  13.56     0.99   \n",
              "25   5.46         7.5   7.31  ...               12.9  13.86     0.96   \n",
              "26   5.49        7.32   7.16  ...              12.55  13.53     0.98   \n",
              "27   5.43        7.26   7.29  ...              12.59  13.55     0.96   \n",
              "28   5.47        6.41   6.98  ...              12.87  12.87        0   \n",
              "29   5.71        7.73   6.89  ...              11.72   12.7     0.98   \n",
              "30      0           0      0  ...                  0      0        0   \n",
              "31   5.45        7.45   7.58  ...              12.41  13.36     0.95   \n",
              "32   5.47        7.12   7.65  ...              12.69  13.67     0.98   \n",
              "33   5.86        7.23   7.14  ...              12.75  13.73     0.98   \n",
              "34   5.63        6.92   7.26  ...              13.14  14.15     1.01   \n",
              "35   5.58        6.86   6.91  ...              12.36  13.33     0.97   \n",
              "36    5.5        7.03   6.95  ...              13.26  14.24     0.98   \n",
              "37      0           0      0  ...              13.75  14.76     1.01   \n",
              "38   6.15        7.54   7.02  ...               13.8  14.77     0.97   \n",
              "39   5.58        7.66   7.39  ...              13.68  14.65     0.97   \n",
              "40   5.49        6.82   6.74  ...                  0      0        0   \n",
              "\n",
              "   Flows from plant                   Chemical Dosages                        \n",
              "           Bishop s Botwood    GFW            Chlorine   Alum Limestone Lime  \n",
              "2             1.295   2.455  8.443   2.942041981528128      0         0    0  \n",
              "3             1.311   2.455  8.869   3.234526398739165   31.6       5.5  8.9  \n",
              "4              1.36   2.485  9.113  3.0670856245090334  31.86       5.3  8.9  \n",
              "5             1.372     2.3  8.553   3.065323126510879  32.57       5.1  8.9  \n",
              "6             1.372   2.185  8.427  2.9275808285946385  28.62       5.5  9.1  \n",
              "7             2.625   2.123  8.489  3.0270261282660327   32.1       5.7  9.1  \n",
              "8                 0       0      0  3.1011914217633043  32.05       5.7  9.2  \n",
              "9                 0       0      0                 NaN      0         0    0  \n",
              "10            1.523   2.232  8.279  2.8788151191454396  33.44       5.7  9.2  \n",
              "11            1.548   2.229  8.861  3.0333690753690754  32.36       5.9  9.4  \n",
              "12            1.566   2.176  8.442   3.061505995203837  29.85       5.9  9.6  \n",
              "13            1.622   2.181  8.788  2.9597771038665655  29.56       5.9  9.6  \n",
              "14            1.646   2.181  8.452  3.0431735668789806  30.44       5.7  9.6  \n",
              "15            1.812   2.195  9.052   3.113930197268589   31.1       4.2  9.6  \n",
              "16            1.759   2.059  8.557  3.1371544585987263      0       5.5  9.6  \n",
              "17            1.709   2.284  9.457    3.35532785660941  31.44       5.5  9.6  \n",
              "18              1.6   0.986  8.896  3.2417070161912105  31.93       5.5  9.6  \n",
              "19            1.584   2.541  9.803  3.2127702407002183  29.62       4.8  9.6  \n",
              "20            1.486   2.455  8.543  3.2911529051987767   30.4       5.2  9.4  \n",
              "21            1.442   2.384  8.767   2.611486956521739  26.65       5.1  9.4  \n",
              "22            1.383    2.38  8.222  3.2661337683523657  36.97       4.8  9.4  \n",
              "23            1.405    2.37  8.426  2.7392634870992967  37.34         5  9.4  \n",
              "24            1.443   2.305  8.036  3.2773237867939535  36.42       5.2  9.4  \n",
              "25            1.427   2.217  9.169   3.181871317829457  38.67       7.6    9  \n",
              "26            1.424   2.235  8.166  2.8715952191235057  38.35       7.2    9  \n",
              "27            1.414   2.245  8.678   2.703445591739476  36.91       7.3    9  \n",
              "28            1.386   2.244  8.105  2.7917296037296038   35.8       7.5    9  \n",
              "29                0       0      0  3.1605682593856654  39.14       7.8  9.2  \n",
              "30                0       0      0                 NaN      0         0    0  \n",
              "31            1.375   2.312  8.345  2.5008412570507654  39.03       7.5  9.2  \n",
              "32            1.333   2.331  8.809   3.155460992907802  29.83       7.5    9  \n",
              "33            1.354   2.337  8.028  3.0818588235294118  30.43       7.2    9  \n",
              "34            1.334    2.34  9.363  2.8950273972602742  31.16         7    9  \n",
              "35            1.301   2.373  8.614   2.834561488673139   31.8       6.4  9.2  \n",
              "36                0       0      0  2.8287692307692307  31.26       6.2  9.1  \n",
              "37            1.407   2.369  9.171  2.8415447272727272      0       5.9  9.4  \n",
              "38            1.535   2.394  9.509  2.8016405797101447  30.46       5.9  9.4  \n",
              "39            1.508   2.633  9.293   2.927105263157895  32.03       5.1  9.4  \n",
              "40                0       0      0                 NaN   29.1       5.1  9.6  \n",
              "\n",
              "[39 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8a47474d-db93-4998-afd8-f90aab9408cf\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023-01-01 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>11.91</td>\n",
              "      <td>12.84</td>\n",
              "      <td>0.92</td>\n",
              "      <td>1.295</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.443</td>\n",
              "      <td>2.942041981528128</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023-01-02 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.58</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.52</td>\n",
              "      <td>7.09</td>\n",
              "      <td>7.03</td>\n",
              "      <td>...</td>\n",
              "      <td>12.69</td>\n",
              "      <td>13.65</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.311</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.869</td>\n",
              "      <td>3.234526398739165</td>\n",
              "      <td>31.6</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023-01-03 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.74</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.31</td>\n",
              "      <td>7.29</td>\n",
              "      <td>...</td>\n",
              "      <td>12.73</td>\n",
              "      <td>13.59</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.36</td>\n",
              "      <td>2.485</td>\n",
              "      <td>9.113</td>\n",
              "      <td>3.0670856245090334</td>\n",
              "      <td>31.86</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2023-01-04 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.22</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.93</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.22</td>\n",
              "      <td>0.81</td>\n",
              "      <td>1.372</td>\n",
              "      <td>2.3</td>\n",
              "      <td>8.553</td>\n",
              "      <td>3.065323126510879</td>\n",
              "      <td>32.57</td>\n",
              "      <td>5.1</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2023-01-05 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.38</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.48</td>\n",
              "      <td>7.13</td>\n",
              "      <td>7.11</td>\n",
              "      <td>...</td>\n",
              "      <td>12.31</td>\n",
              "      <td>13.13</td>\n",
              "      <td>0.82</td>\n",
              "      <td>1.372</td>\n",
              "      <td>2.185</td>\n",
              "      <td>8.427</td>\n",
              "      <td>2.9275808285946385</td>\n",
              "      <td>28.62</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2023-01-06 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.445</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.65</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.73</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>13.47</td>\n",
              "      <td>0.84</td>\n",
              "      <td>2.625</td>\n",
              "      <td>2.123</td>\n",
              "      <td>8.489</td>\n",
              "      <td>3.0270261282660327</td>\n",
              "      <td>32.1</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2023-01-07 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.71</td>\n",
              "      <td>5.77</td>\n",
              "      <td>7.09</td>\n",
              "      <td>6.99</td>\n",
              "      <td>...</td>\n",
              "      <td>12.59</td>\n",
              "      <td>13.45</td>\n",
              "      <td>0.86</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.1011914217633043</td>\n",
              "      <td>32.05</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2023-01-08 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>2023-01-09 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.61</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.47</td>\n",
              "      <td>7.01</td>\n",
              "      <td>7.05</td>\n",
              "      <td>...</td>\n",
              "      <td>12.17</td>\n",
              "      <td>13.02</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.523</td>\n",
              "      <td>2.232</td>\n",
              "      <td>8.279</td>\n",
              "      <td>2.8788151191454396</td>\n",
              "      <td>33.44</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>2023-01-10 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.48</td>\n",
              "      <td>7.06</td>\n",
              "      <td>7.24</td>\n",
              "      <td>...</td>\n",
              "      <td>12.87</td>\n",
              "      <td>13.73</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.548</td>\n",
              "      <td>2.229</td>\n",
              "      <td>8.861</td>\n",
              "      <td>3.0333690753690754</td>\n",
              "      <td>32.36</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>2023-01-11 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.27</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.76</td>\n",
              "      <td>7.33</td>\n",
              "      <td>7.11</td>\n",
              "      <td>...</td>\n",
              "      <td>12.51</td>\n",
              "      <td>13.41</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.566</td>\n",
              "      <td>2.176</td>\n",
              "      <td>8.442</td>\n",
              "      <td>3.061505995203837</td>\n",
              "      <td>29.85</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>2023-01-12 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.41</td>\n",
              "      <td>5.41</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.71</td>\n",
              "      <td>7.01</td>\n",
              "      <td>6.93</td>\n",
              "      <td>...</td>\n",
              "      <td>13.19</td>\n",
              "      <td>14.03</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.622</td>\n",
              "      <td>2.181</td>\n",
              "      <td>8.788</td>\n",
              "      <td>2.9597771038665655</td>\n",
              "      <td>29.56</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2023-01-13 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.73</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.43</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>12.56</td>\n",
              "      <td>13.43</td>\n",
              "      <td>0.87</td>\n",
              "      <td>1.646</td>\n",
              "      <td>2.181</td>\n",
              "      <td>8.452</td>\n",
              "      <td>3.0431735668789806</td>\n",
              "      <td>30.44</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2023-01-14 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.61</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.41</td>\n",
              "      <td>7.28</td>\n",
              "      <td>6.95</td>\n",
              "      <td>...</td>\n",
              "      <td>13.18</td>\n",
              "      <td>14.02</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.812</td>\n",
              "      <td>2.195</td>\n",
              "      <td>9.052</td>\n",
              "      <td>3.113930197268589</td>\n",
              "      <td>31.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>2023-01-15 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.56</td>\n",
              "      <td>13.37</td>\n",
              "      <td>0.81</td>\n",
              "      <td>1.759</td>\n",
              "      <td>2.059</td>\n",
              "      <td>8.557</td>\n",
              "      <td>3.1371544585987263</td>\n",
              "      <td>0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>2023-01-16 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.37</td>\n",
              "      <td>6.55</td>\n",
              "      <td>6.42</td>\n",
              "      <td>...</td>\n",
              "      <td>13.39</td>\n",
              "      <td>15.09</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.709</td>\n",
              "      <td>2.284</td>\n",
              "      <td>9.457</td>\n",
              "      <td>3.35532785660941</td>\n",
              "      <td>31.44</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2023-01-17 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.7</td>\n",
              "      <td>5.86</td>\n",
              "      <td>5.41</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6.67</td>\n",
              "      <td>7.65</td>\n",
              "      <td>7.13</td>\n",
              "      <td>...</td>\n",
              "      <td>12.97</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0.83</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.986</td>\n",
              "      <td>8.896</td>\n",
              "      <td>3.2417070161912105</td>\n",
              "      <td>31.93</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>2023-01-18 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.46</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.59</td>\n",
              "      <td>...</td>\n",
              "      <td>13.71</td>\n",
              "      <td>14.59</td>\n",
              "      <td>0.88</td>\n",
              "      <td>1.584</td>\n",
              "      <td>2.541</td>\n",
              "      <td>9.803</td>\n",
              "      <td>3.2127702407002183</td>\n",
              "      <td>29.62</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>2023-01-19 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.55</td>\n",
              "      <td>...</td>\n",
              "      <td>13.08</td>\n",
              "      <td>14.06</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.486</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.543</td>\n",
              "      <td>3.2911529051987767</td>\n",
              "      <td>30.4</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>2023-01-20 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.51</td>\n",
              "      <td>7.3</td>\n",
              "      <td>7.41</td>\n",
              "      <td>...</td>\n",
              "      <td>13.8</td>\n",
              "      <td>14.63</td>\n",
              "      <td>0.83</td>\n",
              "      <td>1.442</td>\n",
              "      <td>2.384</td>\n",
              "      <td>8.767</td>\n",
              "      <td>2.611486956521739</td>\n",
              "      <td>26.65</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>2023-01-21 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.14</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.53</td>\n",
              "      <td>7.52</td>\n",
              "      <td>...</td>\n",
              "      <td>12.26</td>\n",
              "      <td>13.25</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.383</td>\n",
              "      <td>2.38</td>\n",
              "      <td>8.222</td>\n",
              "      <td>3.2661337683523657</td>\n",
              "      <td>36.97</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>2023-01-22 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.33</td>\n",
              "      <td>7.01</td>\n",
              "      <td>7.02</td>\n",
              "      <td>...</td>\n",
              "      <td>12.79</td>\n",
              "      <td>13.74</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.405</td>\n",
              "      <td>2.37</td>\n",
              "      <td>8.426</td>\n",
              "      <td>2.7392634870992967</td>\n",
              "      <td>37.34</td>\n",
              "      <td>5</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>2023-01-23 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.84</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.41</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.4</td>\n",
              "      <td>7.13</td>\n",
              "      <td>...</td>\n",
              "      <td>12.57</td>\n",
              "      <td>13.56</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.443</td>\n",
              "      <td>2.305</td>\n",
              "      <td>8.036</td>\n",
              "      <td>3.2773237867939535</td>\n",
              "      <td>36.42</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>2023-01-24 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.7</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.46</td>\n",
              "      <td>7.5</td>\n",
              "      <td>7.31</td>\n",
              "      <td>...</td>\n",
              "      <td>12.9</td>\n",
              "      <td>13.86</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.427</td>\n",
              "      <td>2.217</td>\n",
              "      <td>9.169</td>\n",
              "      <td>3.181871317829457</td>\n",
              "      <td>38.67</td>\n",
              "      <td>7.6</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>2023-01-25 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.46</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.32</td>\n",
              "      <td>7.16</td>\n",
              "      <td>...</td>\n",
              "      <td>12.55</td>\n",
              "      <td>13.53</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.424</td>\n",
              "      <td>2.235</td>\n",
              "      <td>8.166</td>\n",
              "      <td>2.8715952191235057</td>\n",
              "      <td>38.35</td>\n",
              "      <td>7.2</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>2023-01-26 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.25</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.46</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.43</td>\n",
              "      <td>7.26</td>\n",
              "      <td>7.29</td>\n",
              "      <td>...</td>\n",
              "      <td>12.59</td>\n",
              "      <td>13.55</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.414</td>\n",
              "      <td>2.245</td>\n",
              "      <td>8.678</td>\n",
              "      <td>2.703445591739476</td>\n",
              "      <td>36.91</td>\n",
              "      <td>7.3</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>2023-01-27 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.47</td>\n",
              "      <td>6.41</td>\n",
              "      <td>6.98</td>\n",
              "      <td>...</td>\n",
              "      <td>12.87</td>\n",
              "      <td>12.87</td>\n",
              "      <td>0</td>\n",
              "      <td>1.386</td>\n",
              "      <td>2.244</td>\n",
              "      <td>8.105</td>\n",
              "      <td>2.7917296037296038</td>\n",
              "      <td>35.8</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>2023-01-28 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.26</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.71</td>\n",
              "      <td>7.73</td>\n",
              "      <td>6.89</td>\n",
              "      <td>...</td>\n",
              "      <td>11.72</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.1605682593856654</td>\n",
              "      <td>39.14</td>\n",
              "      <td>7.8</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>2023-01-29 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>2023-01-30 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.6</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.45</td>\n",
              "      <td>7.58</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.36</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.375</td>\n",
              "      <td>2.312</td>\n",
              "      <td>8.345</td>\n",
              "      <td>2.5008412570507654</td>\n",
              "      <td>39.03</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>2023-01-31 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.23</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.47</td>\n",
              "      <td>7.12</td>\n",
              "      <td>7.65</td>\n",
              "      <td>...</td>\n",
              "      <td>12.69</td>\n",
              "      <td>13.67</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.333</td>\n",
              "      <td>2.331</td>\n",
              "      <td>8.809</td>\n",
              "      <td>3.155460992907802</td>\n",
              "      <td>29.83</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>2023-02-01 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.54</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.71</td>\n",
              "      <td>5.86</td>\n",
              "      <td>7.23</td>\n",
              "      <td>7.14</td>\n",
              "      <td>...</td>\n",
              "      <td>12.75</td>\n",
              "      <td>13.73</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.354</td>\n",
              "      <td>2.337</td>\n",
              "      <td>8.028</td>\n",
              "      <td>3.0818588235294118</td>\n",
              "      <td>30.43</td>\n",
              "      <td>7.2</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>2023-02-02 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.63</td>\n",
              "      <td>6.92</td>\n",
              "      <td>7.26</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>14.15</td>\n",
              "      <td>1.01</td>\n",
              "      <td>1.334</td>\n",
              "      <td>2.34</td>\n",
              "      <td>9.363</td>\n",
              "      <td>2.8950273972602742</td>\n",
              "      <td>31.16</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>2023-02-03 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.41</td>\n",
              "      <td>5.69</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.65</td>\n",
              "      <td>5.58</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.91</td>\n",
              "      <td>...</td>\n",
              "      <td>12.36</td>\n",
              "      <td>13.33</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.301</td>\n",
              "      <td>2.373</td>\n",
              "      <td>8.614</td>\n",
              "      <td>2.834561488673139</td>\n",
              "      <td>31.8</td>\n",
              "      <td>6.4</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>2023-02-04 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.03</td>\n",
              "      <td>6.95</td>\n",
              "      <td>...</td>\n",
              "      <td>13.26</td>\n",
              "      <td>14.24</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.8287692307692307</td>\n",
              "      <td>31.26</td>\n",
              "      <td>6.2</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>2023-02-05 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>13.75</td>\n",
              "      <td>14.76</td>\n",
              "      <td>1.01</td>\n",
              "      <td>1.407</td>\n",
              "      <td>2.369</td>\n",
              "      <td>9.171</td>\n",
              "      <td>2.8415447272727272</td>\n",
              "      <td>0</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>2023-02-06 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.74</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.98</td>\n",
              "      <td>6.15</td>\n",
              "      <td>7.54</td>\n",
              "      <td>7.02</td>\n",
              "      <td>...</td>\n",
              "      <td>13.8</td>\n",
              "      <td>14.77</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.535</td>\n",
              "      <td>2.394</td>\n",
              "      <td>9.509</td>\n",
              "      <td>2.8016405797101447</td>\n",
              "      <td>30.46</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>2023-02-07 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.58</td>\n",
              "      <td>7.66</td>\n",
              "      <td>7.39</td>\n",
              "      <td>...</td>\n",
              "      <td>13.68</td>\n",
              "      <td>14.65</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.633</td>\n",
              "      <td>9.293</td>\n",
              "      <td>2.927105263157895</td>\n",
              "      <td>32.03</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>2023-02-08 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.49</td>\n",
              "      <td>6.82</td>\n",
              "      <td>6.74</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.1</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>39 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a47474d-db93-4998-afd8-f90aab9408cf')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8a47474d-db93-4998-afd8-f90aab9408cf button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8a47474d-db93-4998-afd8-f90aab9408cf');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023 = data_2023.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "aZyEExx2DS_Z"
      },
      "execution_count": 141,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "7c8787bb-61b6-4f14-fd31-198085795740",
        "id": "wR0ODchaDS_Z"
      },
      "execution_count": 142,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   Date Shortcut Start Time    pH                        \\\n",
              "                                              Raw    PTC PTC (OL)   SWC   \n",
              "0   2023-01-01 00:00:00      NaN        NaN     0      0        0     0   \n",
              "1   2023-01-02 00:00:00      NaN        NaN  6.58   5.21     5.37  5.44   \n",
              "2   2023-01-03 00:00:00      NaN        NaN  6.74   5.39     5.45  5.47   \n",
              "3   2023-01-04 00:00:00      NaN        NaN  6.22   5.42     5.42   5.4   \n",
              "4   2023-01-05 00:00:00      NaN        NaN  6.38   5.43     5.38  5.45   \n",
              "5   2023-01-06 00:00:00      NaN        NaN  6.11  5.445     5.29  5.55   \n",
              "6   2023-01-07 00:00:00      NaN        NaN  6.17   5.51     5.48  5.71   \n",
              "7   2023-01-08 00:00:00      NaN        NaN     0      0        0     0   \n",
              "8   2023-01-09 00:00:00      NaN        NaN  6.61    5.4     5.45  5.43   \n",
              "9   2023-01-10 00:00:00      NaN        NaN  6.43   5.44      5.1  5.49   \n",
              "10  2023-01-11 00:00:00      NaN        NaN  6.27   5.51     5.52  5.57   \n",
              "11  2023-01-12 00:00:00      NaN        NaN  6.41   5.41     5.45  5.59   \n",
              "12  2023-01-13 00:00:00      NaN        NaN  6.73   5.42     5.34   5.4   \n",
              "13  2023-01-14 00:00:00      NaN        NaN  7.61   5.37     5.32  5.42   \n",
              "14  2023-01-15 00:00:00      NaN        NaN     0      0        0     0   \n",
              "15  2023-01-16 00:00:00      NaN        NaN  7.29    5.4     5.24  5.43   \n",
              "16  2023-01-17 00:00:00      NaN        NaN   7.7   5.86     5.41   6.2   \n",
              "17  2023-01-18 00:00:00      NaN        NaN  7.46   5.35     5.82  5.38   \n",
              "18  2023-01-19 00:00:00      NaN        NaN   7.3   5.39     5.39  5.48   \n",
              "19  2023-01-20 00:00:00      NaN        NaN   7.3   5.53     5.44  5.59   \n",
              "20  2023-01-21 00:00:00      NaN        NaN  7.14   5.37     5.32   5.3   \n",
              "21  2023-01-22 00:00:00      NaN        NaN  7.29   5.21     5.39  5.27   \n",
              "22  2023-01-23 00:00:00      NaN        NaN  7.84   5.38     5.41  5.35   \n",
              "23  2023-01-24 00:00:00      NaN        NaN   7.7   5.47     5.55  5.45   \n",
              "24  2023-01-25 00:00:00      NaN        NaN  7.46   5.45     5.48  5.53   \n",
              "25  2023-01-26 00:00:00      NaN        NaN  7.25    5.3     5.46   5.4   \n",
              "26  2023-01-27 00:00:00      NaN        NaN  6.32   5.42     5.31  5.52   \n",
              "27  2023-01-28 00:00:00      NaN        NaN  6.26   5.57      5.5  5.61   \n",
              "28  2023-01-29 00:00:00      NaN        NaN     0      0        0     0   \n",
              "29  2023-01-30 00:00:00      NaN        NaN   7.6   5.22     5.59  5.42   \n",
              "30  2023-01-31 00:00:00      NaN        NaN  7.23   5.38      5.4  5.42   \n",
              "31  2023-02-01 00:00:00      NaN        NaN  6.29   5.54     5.57  5.71   \n",
              "32  2023-02-02 00:00:00      NaN        NaN  6.31   5.49     5.55  5.61   \n",
              "33  2023-02-03 00:00:00      NaN        NaN  6.41   5.69     5.55  5.65   \n",
              "34  2023-02-04 00:00:00      NaN        NaN  6.39   5.57     5.59  5.53   \n",
              "35  2023-02-05 00:00:00      NaN        NaN     0      0        0     0   \n",
              "36  2023-02-06 00:00:00      NaN        NaN  6.31   5.74     5.47  5.98   \n",
              "37  2023-02-07 00:00:00      NaN        NaN  6.25   5.44     5.49   5.5   \n",
              "38  2023-02-08 00:00:00      NaN        NaN  6.25   5.35     5.45  5.42   \n",
              "\n",
              "                              ... Flows within plant                  \\\n",
              "   Filter Finish (OL) Finish  ...             Finish Filter Backwash   \n",
              "0       0           0      0  ...              11.91  12.84     0.92   \n",
              "1    5.52        7.09   7.03  ...              12.69  13.65     0.96   \n",
              "2    5.49        7.31   7.29  ...              12.73  13.59     0.86   \n",
              "3    5.45        6.95   6.93  ...              12.41  13.22     0.81   \n",
              "4    5.48        7.13   7.11  ...              12.31  13.13     0.82   \n",
              "5    5.65        6.92   6.73  ...              12.63  13.47     0.84   \n",
              "6    5.77        7.09   6.99  ...              12.59  13.45     0.86   \n",
              "7       0           0      0  ...                  0      0        0   \n",
              "8    5.47        7.01   7.05  ...              12.17  13.02     0.85   \n",
              "9    5.48        7.06   7.24  ...              12.87  13.73     0.86   \n",
              "10   5.76        7.33   7.11  ...              12.51  13.41      0.9   \n",
              "11   5.71        7.01   6.93  ...              13.19  14.03     0.84   \n",
              "12   5.43        7.04    7.1  ...              12.56  13.43     0.87   \n",
              "13   5.41        7.28   6.95  ...              13.18  14.02     0.84   \n",
              "14      0           0      0  ...              12.56  13.37     0.81   \n",
              "15   5.37        6.55   6.42  ...              13.39  15.09      1.7   \n",
              "16   6.67        7.65   7.13  ...              12.97   13.8     0.83   \n",
              "17   5.39        7.28   7.59  ...              13.71  14.59     0.88   \n",
              "18   5.45        7.28   7.55  ...              13.08  14.06     0.98   \n",
              "19   5.51         7.3   7.41  ...               13.8  14.63     0.83   \n",
              "20   5.37        7.53   7.52  ...              12.26  13.25     0.99   \n",
              "21   5.33        7.01   7.02  ...              12.79  13.74     0.95   \n",
              "22   5.37         7.4   7.13  ...              12.57  13.56     0.99   \n",
              "23   5.46         7.5   7.31  ...               12.9  13.86     0.96   \n",
              "24   5.49        7.32   7.16  ...              12.55  13.53     0.98   \n",
              "25   5.43        7.26   7.29  ...              12.59  13.55     0.96   \n",
              "26   5.47        6.41   6.98  ...              12.87  12.87        0   \n",
              "27   5.71        7.73   6.89  ...              11.72   12.7     0.98   \n",
              "28      0           0      0  ...                  0      0        0   \n",
              "29   5.45        7.45   7.58  ...              12.41  13.36     0.95   \n",
              "30   5.47        7.12   7.65  ...              12.69  13.67     0.98   \n",
              "31   5.86        7.23   7.14  ...              12.75  13.73     0.98   \n",
              "32   5.63        6.92   7.26  ...              13.14  14.15     1.01   \n",
              "33   5.58        6.86   6.91  ...              12.36  13.33     0.97   \n",
              "34    5.5        7.03   6.95  ...              13.26  14.24     0.98   \n",
              "35      0           0      0  ...              13.75  14.76     1.01   \n",
              "36   6.15        7.54   7.02  ...               13.8  14.77     0.97   \n",
              "37   5.58        7.66   7.39  ...              13.68  14.65     0.97   \n",
              "38   5.49        6.82   6.74  ...                  0      0        0   \n",
              "\n",
              "   Flows from plant                   Chemical Dosages                        \n",
              "           Bishop s Botwood    GFW            Chlorine   Alum Limestone Lime  \n",
              "0             1.295   2.455  8.443   2.942041981528128      0         0    0  \n",
              "1             1.311   2.455  8.869   3.234526398739165   31.6       5.5  8.9  \n",
              "2              1.36   2.485  9.113  3.0670856245090334  31.86       5.3  8.9  \n",
              "3             1.372     2.3  8.553   3.065323126510879  32.57       5.1  8.9  \n",
              "4             1.372   2.185  8.427  2.9275808285946385  28.62       5.5  9.1  \n",
              "5             2.625   2.123  8.489  3.0270261282660327   32.1       5.7  9.1  \n",
              "6                 0       0      0  3.1011914217633043  32.05       5.7  9.2  \n",
              "7                 0       0      0                 NaN      0         0    0  \n",
              "8             1.523   2.232  8.279  2.8788151191454396  33.44       5.7  9.2  \n",
              "9             1.548   2.229  8.861  3.0333690753690754  32.36       5.9  9.4  \n",
              "10            1.566   2.176  8.442   3.061505995203837  29.85       5.9  9.6  \n",
              "11            1.622   2.181  8.788  2.9597771038665655  29.56       5.9  9.6  \n",
              "12            1.646   2.181  8.452  3.0431735668789806  30.44       5.7  9.6  \n",
              "13            1.812   2.195  9.052   3.113930197268589   31.1       4.2  9.6  \n",
              "14            1.759   2.059  8.557  3.1371544585987263      0       5.5  9.6  \n",
              "15            1.709   2.284  9.457    3.35532785660941  31.44       5.5  9.6  \n",
              "16              1.6   0.986  8.896  3.2417070161912105  31.93       5.5  9.6  \n",
              "17            1.584   2.541  9.803  3.2127702407002183  29.62       4.8  9.6  \n",
              "18            1.486   2.455  8.543  3.2911529051987767   30.4       5.2  9.4  \n",
              "19            1.442   2.384  8.767   2.611486956521739  26.65       5.1  9.4  \n",
              "20            1.383    2.38  8.222  3.2661337683523657  36.97       4.8  9.4  \n",
              "21            1.405    2.37  8.426  2.7392634870992967  37.34         5  9.4  \n",
              "22            1.443   2.305  8.036  3.2773237867939535  36.42       5.2  9.4  \n",
              "23            1.427   2.217  9.169   3.181871317829457  38.67       7.6    9  \n",
              "24            1.424   2.235  8.166  2.8715952191235057  38.35       7.2    9  \n",
              "25            1.414   2.245  8.678   2.703445591739476  36.91       7.3    9  \n",
              "26            1.386   2.244  8.105  2.7917296037296038   35.8       7.5    9  \n",
              "27                0       0      0  3.1605682593856654  39.14       7.8  9.2  \n",
              "28                0       0      0                 NaN      0         0    0  \n",
              "29            1.375   2.312  8.345  2.5008412570507654  39.03       7.5  9.2  \n",
              "30            1.333   2.331  8.809   3.155460992907802  29.83       7.5    9  \n",
              "31            1.354   2.337  8.028  3.0818588235294118  30.43       7.2    9  \n",
              "32            1.334    2.34  9.363  2.8950273972602742  31.16         7    9  \n",
              "33            1.301   2.373  8.614   2.834561488673139   31.8       6.4  9.2  \n",
              "34                0       0      0  2.8287692307692307  31.26       6.2  9.1  \n",
              "35            1.407   2.369  9.171  2.8415447272727272      0       5.9  9.4  \n",
              "36            1.535   2.394  9.509  2.8016405797101447  30.46       5.9  9.4  \n",
              "37            1.508   2.633  9.293   2.927105263157895  32.03       5.1  9.4  \n",
              "38                0       0      0                 NaN   29.1       5.1  9.6  \n",
              "\n",
              "[39 rows x 59 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5e8d3ac-1f51-442e-aec8-591dd290394d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Shortcut</th>\n",
              "      <th>Start Time</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2023-01-01 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>11.91</td>\n",
              "      <td>12.84</td>\n",
              "      <td>0.92</td>\n",
              "      <td>1.295</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.443</td>\n",
              "      <td>2.942041981528128</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2023-01-02 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.58</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.52</td>\n",
              "      <td>7.09</td>\n",
              "      <td>7.03</td>\n",
              "      <td>...</td>\n",
              "      <td>12.69</td>\n",
              "      <td>13.65</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.311</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.869</td>\n",
              "      <td>3.234526398739165</td>\n",
              "      <td>31.6</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023-01-03 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.74</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.31</td>\n",
              "      <td>7.29</td>\n",
              "      <td>...</td>\n",
              "      <td>12.73</td>\n",
              "      <td>13.59</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.36</td>\n",
              "      <td>2.485</td>\n",
              "      <td>9.113</td>\n",
              "      <td>3.0670856245090334</td>\n",
              "      <td>31.86</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023-01-04 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.22</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.93</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.22</td>\n",
              "      <td>0.81</td>\n",
              "      <td>1.372</td>\n",
              "      <td>2.3</td>\n",
              "      <td>8.553</td>\n",
              "      <td>3.065323126510879</td>\n",
              "      <td>32.57</td>\n",
              "      <td>5.1</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023-01-05 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.38</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.48</td>\n",
              "      <td>7.13</td>\n",
              "      <td>7.11</td>\n",
              "      <td>...</td>\n",
              "      <td>12.31</td>\n",
              "      <td>13.13</td>\n",
              "      <td>0.82</td>\n",
              "      <td>1.372</td>\n",
              "      <td>2.185</td>\n",
              "      <td>8.427</td>\n",
              "      <td>2.9275808285946385</td>\n",
              "      <td>28.62</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2023-01-06 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.445</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.65</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.73</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>13.47</td>\n",
              "      <td>0.84</td>\n",
              "      <td>2.625</td>\n",
              "      <td>2.123</td>\n",
              "      <td>8.489</td>\n",
              "      <td>3.0270261282660327</td>\n",
              "      <td>32.1</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2023-01-07 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.71</td>\n",
              "      <td>5.77</td>\n",
              "      <td>7.09</td>\n",
              "      <td>6.99</td>\n",
              "      <td>...</td>\n",
              "      <td>12.59</td>\n",
              "      <td>13.45</td>\n",
              "      <td>0.86</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.1011914217633043</td>\n",
              "      <td>32.05</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2023-01-08 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2023-01-09 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.61</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.47</td>\n",
              "      <td>7.01</td>\n",
              "      <td>7.05</td>\n",
              "      <td>...</td>\n",
              "      <td>12.17</td>\n",
              "      <td>13.02</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.523</td>\n",
              "      <td>2.232</td>\n",
              "      <td>8.279</td>\n",
              "      <td>2.8788151191454396</td>\n",
              "      <td>33.44</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2023-01-10 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.48</td>\n",
              "      <td>7.06</td>\n",
              "      <td>7.24</td>\n",
              "      <td>...</td>\n",
              "      <td>12.87</td>\n",
              "      <td>13.73</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.548</td>\n",
              "      <td>2.229</td>\n",
              "      <td>8.861</td>\n",
              "      <td>3.0333690753690754</td>\n",
              "      <td>32.36</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>2023-01-11 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.27</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.76</td>\n",
              "      <td>7.33</td>\n",
              "      <td>7.11</td>\n",
              "      <td>...</td>\n",
              "      <td>12.51</td>\n",
              "      <td>13.41</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.566</td>\n",
              "      <td>2.176</td>\n",
              "      <td>8.442</td>\n",
              "      <td>3.061505995203837</td>\n",
              "      <td>29.85</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>2023-01-12 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.41</td>\n",
              "      <td>5.41</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.71</td>\n",
              "      <td>7.01</td>\n",
              "      <td>6.93</td>\n",
              "      <td>...</td>\n",
              "      <td>13.19</td>\n",
              "      <td>14.03</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.622</td>\n",
              "      <td>2.181</td>\n",
              "      <td>8.788</td>\n",
              "      <td>2.9597771038665655</td>\n",
              "      <td>29.56</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>2023-01-13 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.73</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.43</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>12.56</td>\n",
              "      <td>13.43</td>\n",
              "      <td>0.87</td>\n",
              "      <td>1.646</td>\n",
              "      <td>2.181</td>\n",
              "      <td>8.452</td>\n",
              "      <td>3.0431735668789806</td>\n",
              "      <td>30.44</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>2023-01-14 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.61</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.41</td>\n",
              "      <td>7.28</td>\n",
              "      <td>6.95</td>\n",
              "      <td>...</td>\n",
              "      <td>13.18</td>\n",
              "      <td>14.02</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.812</td>\n",
              "      <td>2.195</td>\n",
              "      <td>9.052</td>\n",
              "      <td>3.113930197268589</td>\n",
              "      <td>31.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2023-01-15 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.56</td>\n",
              "      <td>13.37</td>\n",
              "      <td>0.81</td>\n",
              "      <td>1.759</td>\n",
              "      <td>2.059</td>\n",
              "      <td>8.557</td>\n",
              "      <td>3.1371544585987263</td>\n",
              "      <td>0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2023-01-16 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.37</td>\n",
              "      <td>6.55</td>\n",
              "      <td>6.42</td>\n",
              "      <td>...</td>\n",
              "      <td>13.39</td>\n",
              "      <td>15.09</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.709</td>\n",
              "      <td>2.284</td>\n",
              "      <td>9.457</td>\n",
              "      <td>3.35532785660941</td>\n",
              "      <td>31.44</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>2023-01-17 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.7</td>\n",
              "      <td>5.86</td>\n",
              "      <td>5.41</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6.67</td>\n",
              "      <td>7.65</td>\n",
              "      <td>7.13</td>\n",
              "      <td>...</td>\n",
              "      <td>12.97</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0.83</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.986</td>\n",
              "      <td>8.896</td>\n",
              "      <td>3.2417070161912105</td>\n",
              "      <td>31.93</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>2023-01-18 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.46</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.59</td>\n",
              "      <td>...</td>\n",
              "      <td>13.71</td>\n",
              "      <td>14.59</td>\n",
              "      <td>0.88</td>\n",
              "      <td>1.584</td>\n",
              "      <td>2.541</td>\n",
              "      <td>9.803</td>\n",
              "      <td>3.2127702407002183</td>\n",
              "      <td>29.62</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2023-01-19 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.55</td>\n",
              "      <td>...</td>\n",
              "      <td>13.08</td>\n",
              "      <td>14.06</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.486</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.543</td>\n",
              "      <td>3.2911529051987767</td>\n",
              "      <td>30.4</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>2023-01-20 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.3</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.51</td>\n",
              "      <td>7.3</td>\n",
              "      <td>7.41</td>\n",
              "      <td>...</td>\n",
              "      <td>13.8</td>\n",
              "      <td>14.63</td>\n",
              "      <td>0.83</td>\n",
              "      <td>1.442</td>\n",
              "      <td>2.384</td>\n",
              "      <td>8.767</td>\n",
              "      <td>2.611486956521739</td>\n",
              "      <td>26.65</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>2023-01-21 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.14</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.53</td>\n",
              "      <td>7.52</td>\n",
              "      <td>...</td>\n",
              "      <td>12.26</td>\n",
              "      <td>13.25</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.383</td>\n",
              "      <td>2.38</td>\n",
              "      <td>8.222</td>\n",
              "      <td>3.2661337683523657</td>\n",
              "      <td>36.97</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>2023-01-22 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.29</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.33</td>\n",
              "      <td>7.01</td>\n",
              "      <td>7.02</td>\n",
              "      <td>...</td>\n",
              "      <td>12.79</td>\n",
              "      <td>13.74</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.405</td>\n",
              "      <td>2.37</td>\n",
              "      <td>8.426</td>\n",
              "      <td>2.7392634870992967</td>\n",
              "      <td>37.34</td>\n",
              "      <td>5</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>2023-01-23 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.84</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.41</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.4</td>\n",
              "      <td>7.13</td>\n",
              "      <td>...</td>\n",
              "      <td>12.57</td>\n",
              "      <td>13.56</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.443</td>\n",
              "      <td>2.305</td>\n",
              "      <td>8.036</td>\n",
              "      <td>3.2773237867939535</td>\n",
              "      <td>36.42</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>2023-01-24 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.7</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.46</td>\n",
              "      <td>7.5</td>\n",
              "      <td>7.31</td>\n",
              "      <td>...</td>\n",
              "      <td>12.9</td>\n",
              "      <td>13.86</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.427</td>\n",
              "      <td>2.217</td>\n",
              "      <td>9.169</td>\n",
              "      <td>3.181871317829457</td>\n",
              "      <td>38.67</td>\n",
              "      <td>7.6</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>2023-01-25 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.46</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.32</td>\n",
              "      <td>7.16</td>\n",
              "      <td>...</td>\n",
              "      <td>12.55</td>\n",
              "      <td>13.53</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.424</td>\n",
              "      <td>2.235</td>\n",
              "      <td>8.166</td>\n",
              "      <td>2.8715952191235057</td>\n",
              "      <td>38.35</td>\n",
              "      <td>7.2</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>2023-01-26 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.25</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.46</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.43</td>\n",
              "      <td>7.26</td>\n",
              "      <td>7.29</td>\n",
              "      <td>...</td>\n",
              "      <td>12.59</td>\n",
              "      <td>13.55</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.414</td>\n",
              "      <td>2.245</td>\n",
              "      <td>8.678</td>\n",
              "      <td>2.703445591739476</td>\n",
              "      <td>36.91</td>\n",
              "      <td>7.3</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>2023-01-27 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.47</td>\n",
              "      <td>6.41</td>\n",
              "      <td>6.98</td>\n",
              "      <td>...</td>\n",
              "      <td>12.87</td>\n",
              "      <td>12.87</td>\n",
              "      <td>0</td>\n",
              "      <td>1.386</td>\n",
              "      <td>2.244</td>\n",
              "      <td>8.105</td>\n",
              "      <td>2.7917296037296038</td>\n",
              "      <td>35.8</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>2023-01-28 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.26</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.71</td>\n",
              "      <td>7.73</td>\n",
              "      <td>6.89</td>\n",
              "      <td>...</td>\n",
              "      <td>11.72</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.1605682593856654</td>\n",
              "      <td>39.14</td>\n",
              "      <td>7.8</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>2023-01-29 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>2023-01-30 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.6</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.45</td>\n",
              "      <td>7.58</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.36</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.375</td>\n",
              "      <td>2.312</td>\n",
              "      <td>8.345</td>\n",
              "      <td>2.5008412570507654</td>\n",
              "      <td>39.03</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>2023-01-31 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.23</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.47</td>\n",
              "      <td>7.12</td>\n",
              "      <td>7.65</td>\n",
              "      <td>...</td>\n",
              "      <td>12.69</td>\n",
              "      <td>13.67</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.333</td>\n",
              "      <td>2.331</td>\n",
              "      <td>8.809</td>\n",
              "      <td>3.155460992907802</td>\n",
              "      <td>29.83</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>2023-02-01 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.54</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.71</td>\n",
              "      <td>5.86</td>\n",
              "      <td>7.23</td>\n",
              "      <td>7.14</td>\n",
              "      <td>...</td>\n",
              "      <td>12.75</td>\n",
              "      <td>13.73</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.354</td>\n",
              "      <td>2.337</td>\n",
              "      <td>8.028</td>\n",
              "      <td>3.0818588235294118</td>\n",
              "      <td>30.43</td>\n",
              "      <td>7.2</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>2023-02-02 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.63</td>\n",
              "      <td>6.92</td>\n",
              "      <td>7.26</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>14.15</td>\n",
              "      <td>1.01</td>\n",
              "      <td>1.334</td>\n",
              "      <td>2.34</td>\n",
              "      <td>9.363</td>\n",
              "      <td>2.8950273972602742</td>\n",
              "      <td>31.16</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>2023-02-03 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.41</td>\n",
              "      <td>5.69</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.65</td>\n",
              "      <td>5.58</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.91</td>\n",
              "      <td>...</td>\n",
              "      <td>12.36</td>\n",
              "      <td>13.33</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.301</td>\n",
              "      <td>2.373</td>\n",
              "      <td>8.614</td>\n",
              "      <td>2.834561488673139</td>\n",
              "      <td>31.8</td>\n",
              "      <td>6.4</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>2023-02-04 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.03</td>\n",
              "      <td>6.95</td>\n",
              "      <td>...</td>\n",
              "      <td>13.26</td>\n",
              "      <td>14.24</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.8287692307692307</td>\n",
              "      <td>31.26</td>\n",
              "      <td>6.2</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>2023-02-05 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>13.75</td>\n",
              "      <td>14.76</td>\n",
              "      <td>1.01</td>\n",
              "      <td>1.407</td>\n",
              "      <td>2.369</td>\n",
              "      <td>9.171</td>\n",
              "      <td>2.8415447272727272</td>\n",
              "      <td>0</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>2023-02-06 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.74</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.98</td>\n",
              "      <td>6.15</td>\n",
              "      <td>7.54</td>\n",
              "      <td>7.02</td>\n",
              "      <td>...</td>\n",
              "      <td>13.8</td>\n",
              "      <td>14.77</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.535</td>\n",
              "      <td>2.394</td>\n",
              "      <td>9.509</td>\n",
              "      <td>2.8016405797101447</td>\n",
              "      <td>30.46</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>2023-02-07 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.58</td>\n",
              "      <td>7.66</td>\n",
              "      <td>7.39</td>\n",
              "      <td>...</td>\n",
              "      <td>13.68</td>\n",
              "      <td>14.65</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.633</td>\n",
              "      <td>9.293</td>\n",
              "      <td>2.927105263157895</td>\n",
              "      <td>32.03</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>2023-02-08 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.49</td>\n",
              "      <td>6.82</td>\n",
              "      <td>6.74</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.1</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>39 rows × 59 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5e8d3ac-1f51-442e-aec8-591dd290394d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d5e8d3ac-1f51-442e-aec8-591dd290394d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d5e8d3ac-1f51-442e-aec8-591dd290394d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023 = data_2023.drop(labels=['Shortcut', 'Start Time'], axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "40acbb85-4a55-4fe0-fa22-8f6a2adef369",
        "id": "KpGIuXxkDS_Z"
      },
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-143-2449541b247d>:1: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.\n",
            "  data_2023 = data_2023.drop(labels=['Shortcut', 'Start Time'], axis=1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ea4165bb-a734-48bc-de58-784148e1f2cf",
        "id": "OdNMsmqSDS_Z"
      },
      "execution_count": 144,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   Date    pH                                                  \\\n",
              "                          Raw    PTC PTC (OL)   SWC Filter Finish (OL) Finish   \n",
              "0   2023-01-01 00:00:00     0      0        0     0      0           0      0   \n",
              "1   2023-01-02 00:00:00  6.58   5.21     5.37  5.44   5.52        7.09   7.03   \n",
              "2   2023-01-03 00:00:00  6.74   5.39     5.45  5.47   5.49        7.31   7.29   \n",
              "3   2023-01-04 00:00:00  6.22   5.42     5.42   5.4   5.45        6.95   6.93   \n",
              "4   2023-01-05 00:00:00  6.38   5.43     5.38  5.45   5.48        7.13   7.11   \n",
              "5   2023-01-06 00:00:00  6.11  5.445     5.29  5.55   5.65        6.92   6.73   \n",
              "6   2023-01-07 00:00:00  6.17   5.51     5.48  5.71   5.77        7.09   6.99   \n",
              "7   2023-01-08 00:00:00     0      0        0     0      0           0      0   \n",
              "8   2023-01-09 00:00:00  6.61    5.4     5.45  5.43   5.47        7.01   7.05   \n",
              "9   2023-01-10 00:00:00  6.43   5.44      5.1  5.49   5.48        7.06   7.24   \n",
              "10  2023-01-11 00:00:00  6.27   5.51     5.52  5.57   5.76        7.33   7.11   \n",
              "11  2023-01-12 00:00:00  6.41   5.41     5.45  5.59   5.71        7.01   6.93   \n",
              "12  2023-01-13 00:00:00  6.73   5.42     5.34   5.4   5.43        7.04    7.1   \n",
              "13  2023-01-14 00:00:00  7.61   5.37     5.32  5.42   5.41        7.28   6.95   \n",
              "14  2023-01-15 00:00:00     0      0        0     0      0           0      0   \n",
              "15  2023-01-16 00:00:00  7.29    5.4     5.24  5.43   5.37        6.55   6.42   \n",
              "16  2023-01-17 00:00:00   7.7   5.86     5.41   6.2   6.67        7.65   7.13   \n",
              "17  2023-01-18 00:00:00  7.46   5.35     5.82  5.38   5.39        7.28   7.59   \n",
              "18  2023-01-19 00:00:00   7.3   5.39     5.39  5.48   5.45        7.28   7.55   \n",
              "19  2023-01-20 00:00:00   7.3   5.53     5.44  5.59   5.51         7.3   7.41   \n",
              "20  2023-01-21 00:00:00  7.14   5.37     5.32   5.3   5.37        7.53   7.52   \n",
              "21  2023-01-22 00:00:00  7.29   5.21     5.39  5.27   5.33        7.01   7.02   \n",
              "22  2023-01-23 00:00:00  7.84   5.38     5.41  5.35   5.37         7.4   7.13   \n",
              "23  2023-01-24 00:00:00   7.7   5.47     5.55  5.45   5.46         7.5   7.31   \n",
              "24  2023-01-25 00:00:00  7.46   5.45     5.48  5.53   5.49        7.32   7.16   \n",
              "25  2023-01-26 00:00:00  7.25    5.3     5.46   5.4   5.43        7.26   7.29   \n",
              "26  2023-01-27 00:00:00  6.32   5.42     5.31  5.52   5.47        6.41   6.98   \n",
              "27  2023-01-28 00:00:00  6.26   5.57      5.5  5.61   5.71        7.73   6.89   \n",
              "28  2023-01-29 00:00:00     0      0        0     0      0           0      0   \n",
              "29  2023-01-30 00:00:00   7.6   5.22     5.59  5.42   5.45        7.45   7.58   \n",
              "30  2023-01-31 00:00:00  7.23   5.38      5.4  5.42   5.47        7.12   7.65   \n",
              "31  2023-02-01 00:00:00  6.29   5.54     5.57  5.71   5.86        7.23   7.14   \n",
              "32  2023-02-02 00:00:00  6.31   5.49     5.55  5.61   5.63        6.92   7.26   \n",
              "33  2023-02-03 00:00:00  6.41   5.69     5.55  5.65   5.58        6.86   6.91   \n",
              "34  2023-02-04 00:00:00  6.39   5.57     5.59  5.53    5.5        7.03   6.95   \n",
              "35  2023-02-05 00:00:00     0      0        0     0      0           0      0   \n",
              "36  2023-02-06 00:00:00  6.31   5.74     5.47  5.98   6.15        7.54   7.02   \n",
              "37  2023-02-07 00:00:00  6.25   5.44     5.49   5.5   5.58        7.66   7.39   \n",
              "38  2023-02-08 00:00:00  6.25   5.35     5.45  5.42   5.49        6.82   6.74   \n",
              "\n",
              "   Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "       Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "0         0     0  ...              11.91  12.84     0.92            1.295   \n",
              "1      1.51  1.87  ...              12.69  13.65     0.96            1.311   \n",
              "2      1.52  1.86  ...              12.73  13.59     0.86             1.36   \n",
              "3      1.52  1.68  ...              12.41  13.22     0.81            1.372   \n",
              "4      1.61  1.78  ...              12.31  13.13     0.82            1.372   \n",
              "5      1.58  1.74  ...              12.63  13.47     0.84            2.625   \n",
              "6      1.64  1.87  ...              12.59  13.45     0.86                0   \n",
              "7         0     0  ...                  0      0        0                0   \n",
              "8      1.58  1.75  ...              12.17  13.02     0.85            1.523   \n",
              "9      1.64  1.77  ...              12.87  13.73     0.86            1.548   \n",
              "10     1.65  1.82  ...              12.51  13.41      0.9            1.566   \n",
              "11     1.69  1.95  ...              13.19  14.03     0.84            1.622   \n",
              "12     1.73  2.11  ...              12.56  13.43     0.87            1.646   \n",
              "13     1.41   1.7  ...              13.18  14.02     0.84            1.812   \n",
              "14        0     0  ...              12.56  13.37     0.81            1.759   \n",
              "15     1.27  1.41  ...              13.39  15.09      1.7            1.709   \n",
              "16     1.34  1.49  ...              12.97   13.8     0.83              1.6   \n",
              "17     1.48  1.64  ...              13.71  14.59     0.88            1.584   \n",
              "18     1.42  1.66  ...              13.08  14.06     0.98            1.486   \n",
              "19     1.46  1.64  ...               13.8  14.63     0.83            1.442   \n",
              "20      1.5  1.71  ...              12.26  13.25     0.99            1.383   \n",
              "21     1.66  1.78  ...              12.79  13.74     0.95            1.405   \n",
              "22     1.74  1.81  ...              12.57  13.56     0.99            1.443   \n",
              "23     1.67  1.95  ...               12.9  13.86     0.96            1.427   \n",
              "24     1.84  1.91  ...              12.55  13.53     0.98            1.424   \n",
              "25     1.57  1.63  ...              12.59  13.55     0.96            1.414   \n",
              "26     1.61  1.68  ...              12.87  12.87        0            1.386   \n",
              "27     1.48  1.61  ...              11.72   12.7     0.98                0   \n",
              "28        0     0  ...                  0      0        0                0   \n",
              "29        2   2.1  ...              12.41  13.36     0.95            1.375   \n",
              "30        2  2.22  ...              12.69  13.67     0.98            1.333   \n",
              "31     1.96  2.11  ...              12.75  13.73     0.98            1.354   \n",
              "32      1.8   1.9  ...              13.14  14.15     1.01            1.334   \n",
              "33     1.76  1.95  ...              12.36  13.33     0.97            1.301   \n",
              "34     1.73  1.92  ...              13.26  14.24     0.98                0   \n",
              "35        0     0  ...              13.75  14.76     1.01            1.407   \n",
              "36     1.82  1.89  ...               13.8  14.77     0.97            1.535   \n",
              "37     1.54  1.69  ...              13.68  14.65     0.97            1.508   \n",
              "38     1.71  1.78  ...                  0      0        0                0   \n",
              "\n",
              "                     Chemical Dosages                        \n",
              "   Botwood    GFW            Chlorine   Alum Limestone Lime  \n",
              "0    2.455  8.443   2.942041981528128      0         0    0  \n",
              "1    2.455  8.869   3.234526398739165   31.6       5.5  8.9  \n",
              "2    2.485  9.113  3.0670856245090334  31.86       5.3  8.9  \n",
              "3      2.3  8.553   3.065323126510879  32.57       5.1  8.9  \n",
              "4    2.185  8.427  2.9275808285946385  28.62       5.5  9.1  \n",
              "5    2.123  8.489  3.0270261282660327   32.1       5.7  9.1  \n",
              "6        0      0  3.1011914217633043  32.05       5.7  9.2  \n",
              "7        0      0                 NaN      0         0    0  \n",
              "8    2.232  8.279  2.8788151191454396  33.44       5.7  9.2  \n",
              "9    2.229  8.861  3.0333690753690754  32.36       5.9  9.4  \n",
              "10   2.176  8.442   3.061505995203837  29.85       5.9  9.6  \n",
              "11   2.181  8.788  2.9597771038665655  29.56       5.9  9.6  \n",
              "12   2.181  8.452  3.0431735668789806  30.44       5.7  9.6  \n",
              "13   2.195  9.052   3.113930197268589   31.1       4.2  9.6  \n",
              "14   2.059  8.557  3.1371544585987263      0       5.5  9.6  \n",
              "15   2.284  9.457    3.35532785660941  31.44       5.5  9.6  \n",
              "16   0.986  8.896  3.2417070161912105  31.93       5.5  9.6  \n",
              "17   2.541  9.803  3.2127702407002183  29.62       4.8  9.6  \n",
              "18   2.455  8.543  3.2911529051987767   30.4       5.2  9.4  \n",
              "19   2.384  8.767   2.611486956521739  26.65       5.1  9.4  \n",
              "20    2.38  8.222  3.2661337683523657  36.97       4.8  9.4  \n",
              "21    2.37  8.426  2.7392634870992967  37.34         5  9.4  \n",
              "22   2.305  8.036  3.2773237867939535  36.42       5.2  9.4  \n",
              "23   2.217  9.169   3.181871317829457  38.67       7.6    9  \n",
              "24   2.235  8.166  2.8715952191235057  38.35       7.2    9  \n",
              "25   2.245  8.678   2.703445591739476  36.91       7.3    9  \n",
              "26   2.244  8.105  2.7917296037296038   35.8       7.5    9  \n",
              "27       0      0  3.1605682593856654  39.14       7.8  9.2  \n",
              "28       0      0                 NaN      0         0    0  \n",
              "29   2.312  8.345  2.5008412570507654  39.03       7.5  9.2  \n",
              "30   2.331  8.809   3.155460992907802  29.83       7.5    9  \n",
              "31   2.337  8.028  3.0818588235294118  30.43       7.2    9  \n",
              "32    2.34  9.363  2.8950273972602742  31.16         7    9  \n",
              "33   2.373  8.614   2.834561488673139   31.8       6.4  9.2  \n",
              "34       0      0  2.8287692307692307  31.26       6.2  9.1  \n",
              "35   2.369  9.171  2.8415447272727272      0       5.9  9.4  \n",
              "36   2.394  9.509  2.8016405797101447  30.46       5.9  9.4  \n",
              "37   2.633  9.293   2.927105263157895  32.03       5.1  9.4  \n",
              "38       0      0                 NaN   29.1       5.1  9.6  \n",
              "\n",
              "[39 rows x 57 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1f599e02-da03-4447-b5f2-92a5b95dbd2a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2023-01-01 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>11.91</td>\n",
              "      <td>12.84</td>\n",
              "      <td>0.92</td>\n",
              "      <td>1.295</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.443</td>\n",
              "      <td>2.942041981528128</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2023-01-02 00:00:00</td>\n",
              "      <td>6.58</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.52</td>\n",
              "      <td>7.09</td>\n",
              "      <td>7.03</td>\n",
              "      <td>1.51</td>\n",
              "      <td>1.87</td>\n",
              "      <td>...</td>\n",
              "      <td>12.69</td>\n",
              "      <td>13.65</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.311</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.869</td>\n",
              "      <td>3.234526398739165</td>\n",
              "      <td>31.6</td>\n",
              "      <td>5.5</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023-01-03 00:00:00</td>\n",
              "      <td>6.74</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.31</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.52</td>\n",
              "      <td>1.86</td>\n",
              "      <td>...</td>\n",
              "      <td>12.73</td>\n",
              "      <td>13.59</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.36</td>\n",
              "      <td>2.485</td>\n",
              "      <td>9.113</td>\n",
              "      <td>3.0670856245090334</td>\n",
              "      <td>31.86</td>\n",
              "      <td>5.3</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023-01-04 00:00:00</td>\n",
              "      <td>6.22</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.93</td>\n",
              "      <td>1.52</td>\n",
              "      <td>1.68</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.22</td>\n",
              "      <td>0.81</td>\n",
              "      <td>1.372</td>\n",
              "      <td>2.3</td>\n",
              "      <td>8.553</td>\n",
              "      <td>3.065323126510879</td>\n",
              "      <td>32.57</td>\n",
              "      <td>5.1</td>\n",
              "      <td>8.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023-01-05 00:00:00</td>\n",
              "      <td>6.38</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.48</td>\n",
              "      <td>7.13</td>\n",
              "      <td>7.11</td>\n",
              "      <td>1.61</td>\n",
              "      <td>1.78</td>\n",
              "      <td>...</td>\n",
              "      <td>12.31</td>\n",
              "      <td>13.13</td>\n",
              "      <td>0.82</td>\n",
              "      <td>1.372</td>\n",
              "      <td>2.185</td>\n",
              "      <td>8.427</td>\n",
              "      <td>2.9275808285946385</td>\n",
              "      <td>28.62</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2023-01-06 00:00:00</td>\n",
              "      <td>6.11</td>\n",
              "      <td>5.445</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.65</td>\n",
              "      <td>6.92</td>\n",
              "      <td>6.73</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.74</td>\n",
              "      <td>...</td>\n",
              "      <td>12.63</td>\n",
              "      <td>13.47</td>\n",
              "      <td>0.84</td>\n",
              "      <td>2.625</td>\n",
              "      <td>2.123</td>\n",
              "      <td>8.489</td>\n",
              "      <td>3.0270261282660327</td>\n",
              "      <td>32.1</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2023-01-07 00:00:00</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.71</td>\n",
              "      <td>5.77</td>\n",
              "      <td>7.09</td>\n",
              "      <td>6.99</td>\n",
              "      <td>1.64</td>\n",
              "      <td>1.87</td>\n",
              "      <td>...</td>\n",
              "      <td>12.59</td>\n",
              "      <td>13.45</td>\n",
              "      <td>0.86</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.1011914217633043</td>\n",
              "      <td>32.05</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2023-01-08 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2023-01-09 00:00:00</td>\n",
              "      <td>6.61</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.47</td>\n",
              "      <td>7.01</td>\n",
              "      <td>7.05</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.75</td>\n",
              "      <td>...</td>\n",
              "      <td>12.17</td>\n",
              "      <td>13.02</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.523</td>\n",
              "      <td>2.232</td>\n",
              "      <td>8.279</td>\n",
              "      <td>2.8788151191454396</td>\n",
              "      <td>33.44</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2023-01-10 00:00:00</td>\n",
              "      <td>6.43</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.48</td>\n",
              "      <td>7.06</td>\n",
              "      <td>7.24</td>\n",
              "      <td>1.64</td>\n",
              "      <td>1.77</td>\n",
              "      <td>...</td>\n",
              "      <td>12.87</td>\n",
              "      <td>13.73</td>\n",
              "      <td>0.86</td>\n",
              "      <td>1.548</td>\n",
              "      <td>2.229</td>\n",
              "      <td>8.861</td>\n",
              "      <td>3.0333690753690754</td>\n",
              "      <td>32.36</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>2023-01-11 00:00:00</td>\n",
              "      <td>6.27</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.76</td>\n",
              "      <td>7.33</td>\n",
              "      <td>7.11</td>\n",
              "      <td>1.65</td>\n",
              "      <td>1.82</td>\n",
              "      <td>...</td>\n",
              "      <td>12.51</td>\n",
              "      <td>13.41</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.566</td>\n",
              "      <td>2.176</td>\n",
              "      <td>8.442</td>\n",
              "      <td>3.061505995203837</td>\n",
              "      <td>29.85</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>2023-01-12 00:00:00</td>\n",
              "      <td>6.41</td>\n",
              "      <td>5.41</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.71</td>\n",
              "      <td>7.01</td>\n",
              "      <td>6.93</td>\n",
              "      <td>1.69</td>\n",
              "      <td>1.95</td>\n",
              "      <td>...</td>\n",
              "      <td>13.19</td>\n",
              "      <td>14.03</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.622</td>\n",
              "      <td>2.181</td>\n",
              "      <td>8.788</td>\n",
              "      <td>2.9597771038665655</td>\n",
              "      <td>29.56</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>2023-01-13 00:00:00</td>\n",
              "      <td>6.73</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.43</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.73</td>\n",
              "      <td>2.11</td>\n",
              "      <td>...</td>\n",
              "      <td>12.56</td>\n",
              "      <td>13.43</td>\n",
              "      <td>0.87</td>\n",
              "      <td>1.646</td>\n",
              "      <td>2.181</td>\n",
              "      <td>8.452</td>\n",
              "      <td>3.0431735668789806</td>\n",
              "      <td>30.44</td>\n",
              "      <td>5.7</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>2023-01-14 00:00:00</td>\n",
              "      <td>7.61</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.41</td>\n",
              "      <td>7.28</td>\n",
              "      <td>6.95</td>\n",
              "      <td>1.41</td>\n",
              "      <td>1.7</td>\n",
              "      <td>...</td>\n",
              "      <td>13.18</td>\n",
              "      <td>14.02</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.812</td>\n",
              "      <td>2.195</td>\n",
              "      <td>9.052</td>\n",
              "      <td>3.113930197268589</td>\n",
              "      <td>31.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2023-01-15 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>12.56</td>\n",
              "      <td>13.37</td>\n",
              "      <td>0.81</td>\n",
              "      <td>1.759</td>\n",
              "      <td>2.059</td>\n",
              "      <td>8.557</td>\n",
              "      <td>3.1371544585987263</td>\n",
              "      <td>0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2023-01-16 00:00:00</td>\n",
              "      <td>7.29</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.43</td>\n",
              "      <td>5.37</td>\n",
              "      <td>6.55</td>\n",
              "      <td>6.42</td>\n",
              "      <td>1.27</td>\n",
              "      <td>1.41</td>\n",
              "      <td>...</td>\n",
              "      <td>13.39</td>\n",
              "      <td>15.09</td>\n",
              "      <td>1.7</td>\n",
              "      <td>1.709</td>\n",
              "      <td>2.284</td>\n",
              "      <td>9.457</td>\n",
              "      <td>3.35532785660941</td>\n",
              "      <td>31.44</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>2023-01-17 00:00:00</td>\n",
              "      <td>7.7</td>\n",
              "      <td>5.86</td>\n",
              "      <td>5.41</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6.67</td>\n",
              "      <td>7.65</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.34</td>\n",
              "      <td>1.49</td>\n",
              "      <td>...</td>\n",
              "      <td>12.97</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0.83</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.986</td>\n",
              "      <td>8.896</td>\n",
              "      <td>3.2417070161912105</td>\n",
              "      <td>31.93</td>\n",
              "      <td>5.5</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>2023-01-18 00:00:00</td>\n",
              "      <td>7.46</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.39</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.59</td>\n",
              "      <td>1.48</td>\n",
              "      <td>1.64</td>\n",
              "      <td>...</td>\n",
              "      <td>13.71</td>\n",
              "      <td>14.59</td>\n",
              "      <td>0.88</td>\n",
              "      <td>1.584</td>\n",
              "      <td>2.541</td>\n",
              "      <td>9.803</td>\n",
              "      <td>3.2127702407002183</td>\n",
              "      <td>29.62</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2023-01-19 00:00:00</td>\n",
              "      <td>7.3</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.55</td>\n",
              "      <td>1.42</td>\n",
              "      <td>1.66</td>\n",
              "      <td>...</td>\n",
              "      <td>13.08</td>\n",
              "      <td>14.06</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.486</td>\n",
              "      <td>2.455</td>\n",
              "      <td>8.543</td>\n",
              "      <td>3.2911529051987767</td>\n",
              "      <td>30.4</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>2023-01-20 00:00:00</td>\n",
              "      <td>7.3</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.51</td>\n",
              "      <td>7.3</td>\n",
              "      <td>7.41</td>\n",
              "      <td>1.46</td>\n",
              "      <td>1.64</td>\n",
              "      <td>...</td>\n",
              "      <td>13.8</td>\n",
              "      <td>14.63</td>\n",
              "      <td>0.83</td>\n",
              "      <td>1.442</td>\n",
              "      <td>2.384</td>\n",
              "      <td>8.767</td>\n",
              "      <td>2.611486956521739</td>\n",
              "      <td>26.65</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>2023-01-21 00:00:00</td>\n",
              "      <td>7.14</td>\n",
              "      <td>5.37</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.53</td>\n",
              "      <td>7.52</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1.71</td>\n",
              "      <td>...</td>\n",
              "      <td>12.26</td>\n",
              "      <td>13.25</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.383</td>\n",
              "      <td>2.38</td>\n",
              "      <td>8.222</td>\n",
              "      <td>3.2661337683523657</td>\n",
              "      <td>36.97</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>2023-01-22 00:00:00</td>\n",
              "      <td>7.29</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.39</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.33</td>\n",
              "      <td>7.01</td>\n",
              "      <td>7.02</td>\n",
              "      <td>1.66</td>\n",
              "      <td>1.78</td>\n",
              "      <td>...</td>\n",
              "      <td>12.79</td>\n",
              "      <td>13.74</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.405</td>\n",
              "      <td>2.37</td>\n",
              "      <td>8.426</td>\n",
              "      <td>2.7392634870992967</td>\n",
              "      <td>37.34</td>\n",
              "      <td>5</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>2023-01-23 00:00:00</td>\n",
              "      <td>7.84</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.41</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.37</td>\n",
              "      <td>7.4</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.74</td>\n",
              "      <td>1.81</td>\n",
              "      <td>...</td>\n",
              "      <td>12.57</td>\n",
              "      <td>13.56</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.443</td>\n",
              "      <td>2.305</td>\n",
              "      <td>8.036</td>\n",
              "      <td>3.2773237867939535</td>\n",
              "      <td>36.42</td>\n",
              "      <td>5.2</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>2023-01-24 00:00:00</td>\n",
              "      <td>7.7</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.46</td>\n",
              "      <td>7.5</td>\n",
              "      <td>7.31</td>\n",
              "      <td>1.67</td>\n",
              "      <td>1.95</td>\n",
              "      <td>...</td>\n",
              "      <td>12.9</td>\n",
              "      <td>13.86</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.427</td>\n",
              "      <td>2.217</td>\n",
              "      <td>9.169</td>\n",
              "      <td>3.181871317829457</td>\n",
              "      <td>38.67</td>\n",
              "      <td>7.6</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>2023-01-25 00:00:00</td>\n",
              "      <td>7.46</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.48</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.49</td>\n",
              "      <td>7.32</td>\n",
              "      <td>7.16</td>\n",
              "      <td>1.84</td>\n",
              "      <td>1.91</td>\n",
              "      <td>...</td>\n",
              "      <td>12.55</td>\n",
              "      <td>13.53</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.424</td>\n",
              "      <td>2.235</td>\n",
              "      <td>8.166</td>\n",
              "      <td>2.8715952191235057</td>\n",
              "      <td>38.35</td>\n",
              "      <td>7.2</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>2023-01-26 00:00:00</td>\n",
              "      <td>7.25</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.46</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.43</td>\n",
              "      <td>7.26</td>\n",
              "      <td>7.29</td>\n",
              "      <td>1.57</td>\n",
              "      <td>1.63</td>\n",
              "      <td>...</td>\n",
              "      <td>12.59</td>\n",
              "      <td>13.55</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.414</td>\n",
              "      <td>2.245</td>\n",
              "      <td>8.678</td>\n",
              "      <td>2.703445591739476</td>\n",
              "      <td>36.91</td>\n",
              "      <td>7.3</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>2023-01-27 00:00:00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.47</td>\n",
              "      <td>6.41</td>\n",
              "      <td>6.98</td>\n",
              "      <td>1.61</td>\n",
              "      <td>1.68</td>\n",
              "      <td>...</td>\n",
              "      <td>12.87</td>\n",
              "      <td>12.87</td>\n",
              "      <td>0</td>\n",
              "      <td>1.386</td>\n",
              "      <td>2.244</td>\n",
              "      <td>8.105</td>\n",
              "      <td>2.7917296037296038</td>\n",
              "      <td>35.8</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>2023-01-28 00:00:00</td>\n",
              "      <td>6.26</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.71</td>\n",
              "      <td>7.73</td>\n",
              "      <td>6.89</td>\n",
              "      <td>1.48</td>\n",
              "      <td>1.61</td>\n",
              "      <td>...</td>\n",
              "      <td>11.72</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3.1605682593856654</td>\n",
              "      <td>39.14</td>\n",
              "      <td>7.8</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>2023-01-29 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>2023-01-30 00:00:00</td>\n",
              "      <td>7.6</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.45</td>\n",
              "      <td>7.45</td>\n",
              "      <td>7.58</td>\n",
              "      <td>2</td>\n",
              "      <td>2.1</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.36</td>\n",
              "      <td>0.95</td>\n",
              "      <td>1.375</td>\n",
              "      <td>2.312</td>\n",
              "      <td>8.345</td>\n",
              "      <td>2.5008412570507654</td>\n",
              "      <td>39.03</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>2023-01-31 00:00:00</td>\n",
              "      <td>7.23</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.47</td>\n",
              "      <td>7.12</td>\n",
              "      <td>7.65</td>\n",
              "      <td>2</td>\n",
              "      <td>2.22</td>\n",
              "      <td>...</td>\n",
              "      <td>12.69</td>\n",
              "      <td>13.67</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.333</td>\n",
              "      <td>2.331</td>\n",
              "      <td>8.809</td>\n",
              "      <td>3.155460992907802</td>\n",
              "      <td>29.83</td>\n",
              "      <td>7.5</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>2023-02-01 00:00:00</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.54</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.71</td>\n",
              "      <td>5.86</td>\n",
              "      <td>7.23</td>\n",
              "      <td>7.14</td>\n",
              "      <td>1.96</td>\n",
              "      <td>2.11</td>\n",
              "      <td>...</td>\n",
              "      <td>12.75</td>\n",
              "      <td>13.73</td>\n",
              "      <td>0.98</td>\n",
              "      <td>1.354</td>\n",
              "      <td>2.337</td>\n",
              "      <td>8.028</td>\n",
              "      <td>3.0818588235294118</td>\n",
              "      <td>30.43</td>\n",
              "      <td>7.2</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>2023-02-02 00:00:00</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.61</td>\n",
              "      <td>5.63</td>\n",
              "      <td>6.92</td>\n",
              "      <td>7.26</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1.9</td>\n",
              "      <td>...</td>\n",
              "      <td>13.14</td>\n",
              "      <td>14.15</td>\n",
              "      <td>1.01</td>\n",
              "      <td>1.334</td>\n",
              "      <td>2.34</td>\n",
              "      <td>9.363</td>\n",
              "      <td>2.8950273972602742</td>\n",
              "      <td>31.16</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>2023-02-03 00:00:00</td>\n",
              "      <td>6.41</td>\n",
              "      <td>5.69</td>\n",
              "      <td>5.55</td>\n",
              "      <td>5.65</td>\n",
              "      <td>5.58</td>\n",
              "      <td>6.86</td>\n",
              "      <td>6.91</td>\n",
              "      <td>1.76</td>\n",
              "      <td>1.95</td>\n",
              "      <td>...</td>\n",
              "      <td>12.36</td>\n",
              "      <td>13.33</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.301</td>\n",
              "      <td>2.373</td>\n",
              "      <td>8.614</td>\n",
              "      <td>2.834561488673139</td>\n",
              "      <td>31.8</td>\n",
              "      <td>6.4</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>2023-02-04 00:00:00</td>\n",
              "      <td>6.39</td>\n",
              "      <td>5.57</td>\n",
              "      <td>5.59</td>\n",
              "      <td>5.53</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.03</td>\n",
              "      <td>6.95</td>\n",
              "      <td>1.73</td>\n",
              "      <td>1.92</td>\n",
              "      <td>...</td>\n",
              "      <td>13.26</td>\n",
              "      <td>14.24</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.8287692307692307</td>\n",
              "      <td>31.26</td>\n",
              "      <td>6.2</td>\n",
              "      <td>9.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>2023-02-05 00:00:00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>13.75</td>\n",
              "      <td>14.76</td>\n",
              "      <td>1.01</td>\n",
              "      <td>1.407</td>\n",
              "      <td>2.369</td>\n",
              "      <td>9.171</td>\n",
              "      <td>2.8415447272727272</td>\n",
              "      <td>0</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>2023-02-06 00:00:00</td>\n",
              "      <td>6.31</td>\n",
              "      <td>5.74</td>\n",
              "      <td>5.47</td>\n",
              "      <td>5.98</td>\n",
              "      <td>6.15</td>\n",
              "      <td>7.54</td>\n",
              "      <td>7.02</td>\n",
              "      <td>1.82</td>\n",
              "      <td>1.89</td>\n",
              "      <td>...</td>\n",
              "      <td>13.8</td>\n",
              "      <td>14.77</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.535</td>\n",
              "      <td>2.394</td>\n",
              "      <td>9.509</td>\n",
              "      <td>2.8016405797101447</td>\n",
              "      <td>30.46</td>\n",
              "      <td>5.9</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>2023-02-07 00:00:00</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.44</td>\n",
              "      <td>5.49</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.58</td>\n",
              "      <td>7.66</td>\n",
              "      <td>7.39</td>\n",
              "      <td>1.54</td>\n",
              "      <td>1.69</td>\n",
              "      <td>...</td>\n",
              "      <td>13.68</td>\n",
              "      <td>14.65</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.508</td>\n",
              "      <td>2.633</td>\n",
              "      <td>9.293</td>\n",
              "      <td>2.927105263157895</td>\n",
              "      <td>32.03</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>2023-02-08 00:00:00</td>\n",
              "      <td>6.25</td>\n",
              "      <td>5.35</td>\n",
              "      <td>5.45</td>\n",
              "      <td>5.42</td>\n",
              "      <td>5.49</td>\n",
              "      <td>6.82</td>\n",
              "      <td>6.74</td>\n",
              "      <td>1.71</td>\n",
              "      <td>1.78</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>29.1</td>\n",
              "      <td>5.1</td>\n",
              "      <td>9.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>39 rows × 57 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f599e02-da03-4447-b5f2-92a5b95dbd2a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1f599e02-da03-4447-b5f2-92a5b95dbd2a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1f599e02-da03-4447-b5f2-92a5b95dbd2a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 144
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_2023.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4fb9d53f-9c07-4fb5-f178-d81886a8a328",
        "id": "1_6_3sxFDS_a"
      },
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MultiIndex([(                  'Date',             ' '),\n",
            "            (                    'pH',           'Raw'),\n",
            "            (                    'pH',           'PTC'),\n",
            "            (                    'pH',      'PTC (OL)'),\n",
            "            (                    'pH',           'SWC'),\n",
            "            (                    'pH',        'Filter'),\n",
            "            (                    'pH',   'Finish (OL)'),\n",
            "            (                    'pH',        'Finish'),\n",
            "            (              'Chlorine',          'Free'),\n",
            "            (              'Chlorine',         'Total'),\n",
            "            (              'Chlorine',        'Sample'),\n",
            "            (              'Chlorine',      'Analyzer'),\n",
            "            (                'Colour',         'Raw A'),\n",
            "            (                'Colour',         'Raw T'),\n",
            "            (                'Colour',         'SWC A'),\n",
            "            (                'Colour',      'Filter A'),\n",
            "            (                'Colour',      'Finish A'),\n",
            "            (                'Colour',      'Finish T'),\n",
            "            (             'Turbidity',           'Raw'),\n",
            "            (             'Turbidity',      'Raw (OL)'),\n",
            "            (             'Turbidity',           'SWC'),\n",
            "            (             'Turbidity',        'Filter'),\n",
            "            (             'Turbidity',        'Finish'),\n",
            "            (             'Turbidity',   'Finish (OL)'),\n",
            "            ('Total Dissolved Solids',           'Raw'),\n",
            "            ('Total Dissolved Solids',           'PTC'),\n",
            "            ('Total Dissolved Solids',           'SWC'),\n",
            "            ('Total Dissolved Solids',        'Filter'),\n",
            "            ('Total Dissolved Solids',        'Finish'),\n",
            "            (          'Conductivity',           'Raw'),\n",
            "            (          'Conductivity',           'PTC'),\n",
            "            (          'Conductivity',           'SWC'),\n",
            "            (          'Conductivity',        'Filter'),\n",
            "            (          'Conductivity',        'Finish'),\n",
            "            (              'Hardness',           'Raw'),\n",
            "            (              'Hardness',        'Finish'),\n",
            "            (            'Alkalinity',           'Raw'),\n",
            "            (            'Alkalinity',        'Finish'),\n",
            "            (              'Aluminum', 'Finish (Free)'),\n",
            "            (           'Temperature',           'Raw'),\n",
            "            (           'Temperature',        'Finish'),\n",
            "            (             'Cl Demand',             ' '),\n",
            "            (                   'UVT',           'Raw'),\n",
            "            (                   'UVT',        'Filter'),\n",
            "            (                   'UVA',           'Raw'),\n",
            "            (                   'UVA',        'Filter'),\n",
            "            (    'Flows within plant',           'Raw'),\n",
            "            (    'Flows within plant',        'Finish'),\n",
            "            (    'Flows within plant',        'Filter'),\n",
            "            (    'Flows within plant',      'Backwash'),\n",
            "            (      'Flows from plant',      'Bishop s'),\n",
            "            (      'Flows from plant',       'Botwood'),\n",
            "            (      'Flows from plant',           'GFW'),\n",
            "            (      'Chemical Dosages',      'Chlorine'),\n",
            "            (      'Chemical Dosages',          'Alum'),\n",
            "            (      'Chemical Dosages',     'Limestone'),\n",
            "            (      'Chemical Dosages',          'Lime')],\n",
            "           )\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Handling missing values**"
      ],
      "metadata": {
        "id": "lkuGtegeNT72"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# we do not have pH.Finish sub-column in 2014 \n",
        "# Dataframe does not have limestone in 244 days"
      ],
      "metadata": {
        "id": "L82Pq8GEV4bX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2009**"
      ],
      "metadata": {
        "id": "ipnSYU-j1CAP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2009.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "85M2Ao57Q4pW",
        "outputId": "5980ca1d-903f-494e-faf0-415396ce8a06"
      },
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     0\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        Finish           1\n",
              "Chlorine                Free             1\n",
              "Colour                  Raw T            0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           1\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2009 = data_2009.copy()"
      ],
      "metadata": {
        "id": "6iqb9vJfpfsw"
      },
      "execution_count": 147,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'pH'\n",
        "subcol = 'Finish'\n",
        "df_2009[(col, subcol)] = df_2009[(col, subcol)].fillna(df_2009[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "JL4DJeZ5XpNv"
      },
      "execution_count": 148,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chlorine'\n",
        "subcol = 'Free'\n",
        "df_2009[(col, subcol)] = df_2009[(col, subcol)].fillna(df_2009[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "S8kC0uRClusG"
      },
      "execution_count": 149,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Temperature'\n",
        "subcol = 'Finish'\n",
        "df_2009[(col, subcol)] = df_2009[(col, subcol)].fillna(df_2009[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "l1cWWyEOnmKX"
      },
      "execution_count": 150,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2009.iloc[320][('Temperature','Finish')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CherLWRDn1xG",
        "outputId": "5272a8c9-9f68-4c9e-d9f7-f8933d6f7efc"
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2009.iloc[96][('Chlorine','Free')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5BBVLvQXmBRs",
        "outputId": "99330c66-3c77-4741-d82a-b452e44d8e67"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1.475\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2009.iloc[209][('pH','Finish')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b7tVqKPsiUeW",
        "outputId": "d87bf967-d68e-4573-baf1-ee2da897a29c"
      },
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5.6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2009.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yizvtmslYCdv",
        "outputId": "b0a1ed74-8892-449b-de11-9fe05aec2d48"
      },
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     0\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        Finish           0\n",
              "Chlorine                Free             0\n",
              "Colour                  Raw T            0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           0\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2010**"
      ],
      "metadata": {
        "id": "pX5G5GDT1SnD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2010.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H4Tl9CGBRIaF",
        "outputId": "75e9905f-8f85-4084-eb14-6117a57e25d4"
      },
      "execution_count": 155,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     0\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        Finish           0\n",
              "Chlorine                Free             0\n",
              "Colour                  Raw T            0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           0\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 155
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2010 = data_2010.copy()"
      ],
      "metadata": {
        "id": "r5hguyQtj0t_"
      },
      "execution_count": 156,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2011**"
      ],
      "metadata": {
        "id": "x0wsFVx11YUp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2011.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OcN4rPYkRMUJ",
        "outputId": "e503f9bf-3c38-49f4-a1ea-2d2dada1ddf1"
      },
      "execution_count": 157,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     0\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        Finish           0\n",
              "Chlorine                Free             0\n",
              "Colour                  Raw T            0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           0\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2011 = data_2011.copy()"
      ],
      "metadata": {
        "id": "q2cC5fb7kNBM"
      },
      "execution_count": 158,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2012**"
      ],
      "metadata": {
        "id": "jcqual-A1atK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2012.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mdRQKN8RRQCu",
        "outputId": "34d2fb64-80d6-491a-adb3-aadf0c347343"
      },
      "execution_count": 159,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                       0\n",
              "pH                      Raw                0\n",
              "                        PTC                0\n",
              "                        Finish             0\n",
              "Chlorine                Free               1\n",
              "Colour                  Raw T              0\n",
              "                        Finish T           0\n",
              "Turbidity               Raw                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "Total Dissolved Solids  Finish             0\n",
              "Conductivity            Finish             0\n",
              "Hardness                Finish             0\n",
              "Alkalinity              Finish             1\n",
              "Aluminum                Finish (Free)      0\n",
              "Temperature             Finish             0\n",
              "Cl Used                                    0\n",
              "Cl Demand                                  0\n",
              "Flows within plant      Raw                0\n",
              "                        Finish             0\n",
              "Chemical Dosages        Alum               1\n",
              "                        Limestone        244\n",
              "                        Lime              26\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 159
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2012 = data_2012.copy()"
      ],
      "metadata": {
        "id": "LkVuYENDpxs9"
      },
      "execution_count": 160,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Alkalinity'\n",
        "subcol = 'Finish'\n",
        "df_2012[(col, subcol)] = df_2012[(col, subcol)].fillna(df_2012[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "EePslTe2pIcf"
      },
      "execution_count": 161,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chlorine'\n",
        "subcol = 'Free'\n",
        "df_2012[(col, subcol)] = df_2012[(col, subcol)].fillna(df_2012[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "K_vUqyoupIcg"
      },
      "execution_count": 162,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chemical Dosages'\n",
        "subcol = 'Alum'\n",
        "df_2012[(col, subcol)] = df_2012[(col, subcol)].fillna(df_2012[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "CRmmtLOLpIch"
      },
      "execution_count": 163,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chemical Dosages'\n",
        "subcol = 'Lime'\n",
        "df_2012[(col, subcol)] = df_2012[(col, subcol)].fillna(df_2012[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "_sbYQMMYvD-G"
      },
      "execution_count": 164,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[336][('Chemical Dosages','Lime')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7dff3e19-b663-4d6b-b761-12258511347e",
        "id": "VXS6OylEpIch"
      },
      "execution_count": 165,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "11.455\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[273][('Chemical Dosages','Alum')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mlf6A7XUvMVc",
        "outputId": "1899fd0c-0450-444c-a51e-cb3063e5cde1"
      },
      "execution_count": 166,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "36.709999999999994\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[206][('Chlorine','Free')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "95bb504c-a738-473f-e83e-2095a854515b",
        "id": "j0BlXIOipIci"
      },
      "execution_count": 167,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1.2714999999999999\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[168][('Alkalinity','Finish')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5c60f4f7-1e28-40cc-c735-535a36afe063",
        "id": "r4-79s3CpIcj"
      },
      "execution_count": 168,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6.575000000000001\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2012.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e705902d-3955-4e07-c8f8-e85fc9188d79",
        "id": "pYUHVBQVpIcj"
      },
      "execution_count": 169,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                       0\n",
              "pH                      Raw                0\n",
              "                        PTC                0\n",
              "                        Finish             0\n",
              "Chlorine                Free               0\n",
              "Colour                  Raw T              0\n",
              "                        Finish T           0\n",
              "Turbidity               Raw                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "Total Dissolved Solids  Finish             0\n",
              "Conductivity            Finish             0\n",
              "Hardness                Finish             0\n",
              "Alkalinity              Finish             0\n",
              "Aluminum                Finish (Free)      0\n",
              "Temperature             Finish             0\n",
              "Cl Used                                    0\n",
              "Cl Demand                                  0\n",
              "Flows within plant      Raw                0\n",
              "                        Finish             0\n",
              "Chemical Dosages        Alum               0\n",
              "                        Limestone        244\n",
              "                        Lime               0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 169
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2013**"
      ],
      "metadata": {
        "id": "IHyZLSUD1iSq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2013.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NWDNSsvGRQHH",
        "outputId": "d263ab71-c9e4-4992-943f-f52f9b2b3b5d"
      },
      "execution_count": 170,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                       1\n",
              "pH                      Raw                0\n",
              "                        PTC                0\n",
              "                        Finish             0\n",
              "Chlorine                Free               1\n",
              "Colour                  Raw T              0\n",
              "                        Finish T           0\n",
              "Turbidity               Raw                0\n",
              "                        Filter             0\n",
              "                        Finish             2\n",
              "Total Dissolved Solids  Finish             0\n",
              "Conductivity            Finish             0\n",
              "Hardness                Finish             0\n",
              "Alkalinity              Finish             1\n",
              "Aluminum                Finish (Free)      0\n",
              "Temperature             Finish             3\n",
              "Cl Used                                    0\n",
              "Cl Demand                                  0\n",
              "Flows within plant      Raw                0\n",
              "                        Finish             0\n",
              "Chemical Dosages        Alum               0\n",
              "                        Limestone        326\n",
              "                        Lime               3\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 170
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2013 = data_2013.copy()"
      ],
      "metadata": {
        "id": "522XUm4Qxvoe"
      },
      "execution_count": 171,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Alkalinity'\n",
        "subcol = 'Finish'\n",
        "df_2013[(col, subcol)] = df_2013[(col, subcol)].fillna(df_2013[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "bZy9jHEpxvof"
      },
      "execution_count": 172,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chlorine'\n",
        "subcol = 'Free'\n",
        "df_2013[(col, subcol)] = df_2013[(col, subcol)].fillna(df_2013[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "D9JfGaf-xvof"
      },
      "execution_count": 173,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Turbidity'\n",
        "subcol = 'Finish'\n",
        "df_2013[(col, subcol)] = df_2013[(col, subcol)].fillna(df_2013[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "Qt9h9ZfIxvof"
      },
      "execution_count": 174,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Temperature'\n",
        "subcol = 'Finish'\n",
        "df_2013[(col, subcol)] = df_2013[(col, subcol)].fillna(df_2013[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "q-CSW6R9xvof"
      },
      "execution_count": 175,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chemical Dosages'\n",
        "subcol = 'Lime'\n",
        "df_2013[(col, subcol)] = df_2013[(col, subcol)].fillna(df_2013[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "9a7tfxPy0wXc"
      },
      "execution_count": 176,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[336][('Chemical Dosages','Lime')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "96c327d5-2a6e-4d05-ed74-40d4cb18b39a",
        "id": "kD070Td5xvof"
      },
      "execution_count": 177,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "11.455\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[273][('Chemical Dosages','Alum')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wUu8BRcTxvof",
        "outputId": "e7992148-e698-44e8-f568-2cf4b8991777"
      },
      "execution_count": 178,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "36.709999999999994\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[206][('Chlorine','Free')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eb376763-e29f-429e-f1af-fc12ec8da5f1",
        "id": "g0fjD4gSxvog"
      },
      "execution_count": 179,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1.2714999999999999\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2012.iloc[168][('Alkalinity','Finish')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1c23f9e9-97c3-4bd3-af56-97ec0b06e1bb",
        "id": "HEn8E-gGxvog"
      },
      "execution_count": 180,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6.575000000000001\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2013.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "982db8ae-533c-45ee-9cb7-602213a5aa1a",
        "id": "8MT_28n-xvog"
      },
      "execution_count": 181,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                       1\n",
              "pH                      Raw                0\n",
              "                        PTC                0\n",
              "                        Finish             0\n",
              "Chlorine                Free               0\n",
              "Colour                  Raw T              0\n",
              "                        Finish T           0\n",
              "Turbidity               Raw                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "Total Dissolved Solids  Finish             0\n",
              "Conductivity            Finish             0\n",
              "Hardness                Finish             0\n",
              "Alkalinity              Finish             0\n",
              "Aluminum                Finish (Free)      0\n",
              "Temperature             Finish             0\n",
              "Cl Used                                    0\n",
              "Cl Demand                                  0\n",
              "Flows within plant      Raw                0\n",
              "                        Finish             0\n",
              "Chemical Dosages        Alum               0\n",
              "                        Limestone        326\n",
              "                        Lime               0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2014**"
      ],
      "metadata": {
        "id": "i8anMdjC17WS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2014.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dM819S42RdRZ",
        "outputId": "57e7324c-3f63-4d07-9b60-b8f20df8fc8b"
      },
      "execution_count": 182,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     1\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "Chlorine                Free             0\n",
              "Colour                  Raw T            0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           1\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2014 = data_2014.copy()"
      ],
      "metadata": {
        "id": "2e-zLIjH2SDr"
      },
      "execution_count": 183,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Temperature'\n",
        "subcol = 'Finish'\n",
        "df_2014[(col, subcol)] = df_2014[(col, subcol)].fillna(df_2014[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "GdL4k3nm2MDr"
      },
      "execution_count": 184,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_2014.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O9xz6yuT2iAX",
        "outputId": "4e3f7d33-2f5b-4c1f-b761-5935aa6135bc"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     1\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "Chlorine                Free             0\n",
              "Colour                  Raw T            0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           0\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 185
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2015**"
      ],
      "metadata": {
        "id": "KJ2PNJMG2pyH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2015.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VwU15IkuRlc8",
        "outputId": "26f59e64-d4d0-432b-bf0e-0697e7534179"
      },
      "execution_count": 186,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     1\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        Finish           0\n",
              "Chlorine                Free             0\n",
              "Colour                  Raw T            1\n",
              "                        Finish T         1\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           1\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           1\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           0\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             1\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2015 = data_2015.copy()"
      ],
      "metadata": {
        "id": "5cu-evK24RwF"
      },
      "execution_count": 187,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_2015[('Conductivity','Finish')].loc[246] = '53.8'"
      ],
      "metadata": {
        "id": "zwgje60t1lxF"
      },
      "execution_count": 188,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Alkalinity'\n",
        "subcol = 'Finish'\n",
        "df_2015[(col, subcol)] = df_2015[(col, subcol)].fillna(df_2015[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "zrVwm-KJ4RwG"
      },
      "execution_count": 189,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chemical Dosages'\n",
        "subcol = 'Alum'\n",
        "df_2015[(col, subcol)] = df_2015[(col, subcol)].fillna(df_2015[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "vEjwmVJe4RwI"
      },
      "execution_count": 190,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Turbidity'\n",
        "subcol = 'Finish'\n",
        "df_2015[(col, subcol)] = df_2015[(col, subcol)].fillna(df_2015[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "c1AYHYnV4RwH"
      },
      "execution_count": 191,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Colour'\n",
        "subcol = 'Raw T'\n",
        "df_2015[(col, subcol)] = df_2015[(col, subcol)].fillna(df_2015[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "KzbP4Pys4RwJ"
      },
      "execution_count": 192,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Colour'\n",
        "subcol = 'Finish T'\n",
        "df_2015.loc[331][('Colour','Finish T')] = 0\n",
        "df_2015.loc[267][('Colour','Finish T')] = 0"
      ],
      "metadata": {
        "id": "UYQpKdQi5tuW"
      },
      "execution_count": 193,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "value = df_2015.iloc[331][('Colour','Finish T')]\n",
        "print(value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vm_33UbC6hO0",
        "outputId": "81879fde-a395-44c5-d284-42159d3d9c4e"
      },
      "execution_count": 194,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2015.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "78359547-ead0-4bf0-f5cf-fa9f74c5a353",
        "id": "pzwgkYqi4RwN"
      },
      "execution_count": 195,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     1\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        Finish           0\n",
              "Chlorine                Free             0\n",
              "Colour                  Raw T            0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Total Dissolved Solids  Finish           0\n",
              "Conductivity            Finish           0\n",
              "Hardness                Finish           0\n",
              "Alkalinity              Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Finish           0\n",
              "Cl Used                                  0\n",
              "Cl Demand                                0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "Chemical Dosages        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 195
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2019**"
      ],
      "metadata": {
        "id": "MGB0NLJzJ_2s"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2019.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XfhVy-CCRoTU",
        "outputId": "81da3e93-c5f4-4106-d3a4-86a8a0ae78d7"
      },
      "execution_count": 196,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                      0\n",
              "pH                      Raw               0\n",
              "                        PTC               0\n",
              "                        PTC (OL)          0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish (OL)       0\n",
              "                        Finish            0\n",
              "Chlorine                Free              0\n",
              "                        Total             0\n",
              "                        Sample            0\n",
              "                        Analyzer          0\n",
              "Colour                  Raw A             0\n",
              "                        Raw T             0\n",
              "                        SWC A             0\n",
              "                        Filter A          0\n",
              "                        Finish A          0\n",
              "                        Finish T          0\n",
              "Turbidity               Raw               0\n",
              "                        Raw (OL)          0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish            0\n",
              "                        Finish (OL)       0\n",
              "Total Dissolved Solids  Raw               0\n",
              "                        PTC               0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish            0\n",
              "Conductivity            Raw               0\n",
              "                        PTC               0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish            0\n",
              "Hardness                Raw              59\n",
              "                        Finish           59\n",
              "Alkalinity              Raw               0\n",
              "                        Finish            0\n",
              "Aluminum                Finish (Free)     0\n",
              "Temperature             Raw               0\n",
              "                        Finish            0\n",
              "Cl Demand                                60\n",
              "UVT                     Raw               0\n",
              "                        Filter            0\n",
              "UVA                     Raw               0\n",
              "                        Filter            0\n",
              "Flows within plant      Raw               0\n",
              "                        Finish            0\n",
              "                        Filter            0\n",
              "                        Backwash          0\n",
              "Flows from plant        Bishop s          0\n",
              "                        Botwood           0\n",
              "                        GFW               0\n",
              "Chemical Dosages        Chlorine         60\n",
              "                        Alum              0\n",
              "                        Limestone         0\n",
              "                        Lime              0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 196
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2019 = data_2019.copy()"
      ],
      "metadata": {
        "id": "wqOzsl_fK8UP"
      },
      "execution_count": 197,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Hardness'\n",
        "subcol = 'Raw'\n",
        "df_2019[(col, subcol)] = df_2019[(col, subcol)].fillna(df_2019[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "joqAMI7tK8UQ"
      },
      "execution_count": 198,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Hardness'\n",
        "subcol = 'Finish'\n",
        "df_2019[(col, subcol)] = df_2019[(col, subcol)].fillna(df_2019[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "y3RC41QmL-Xc"
      },
      "execution_count": 199,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Cl Demand'\n",
        "subcol = ' '\n",
        "df_2019[(col, subcol)] = df_2019[(col, subcol)].fillna(df_2019[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "VhnZaqEgK8UQ"
      },
      "execution_count": 200,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# replace missing values in each column with the average of the previous and next values\n",
        "col = 'Chemical Dosages'\n",
        "subcol = 'Chlorine'\n",
        "df_2019[(col, subcol)] = df_2019[(col, subcol)].fillna(df_2019[(col, subcol)].rolling(3, min_periods=1, center=True).mean())"
      ],
      "metadata": {
        "id": "r4NwRFaBK8UQ"
      },
      "execution_count": 201,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_2019.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "444ff1bb-5a4f-4e81-e57b-1389ef37576b",
        "id": "oLCS7G3EK8UR"
      },
      "execution_count": 202,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     0\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        PTC (OL)         0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish (OL)      0\n",
              "                        Finish           0\n",
              "Chlorine                Free             0\n",
              "                        Total            0\n",
              "                        Sample           0\n",
              "                        Analyzer         0\n",
              "Colour                  Raw A            0\n",
              "                        Raw T            0\n",
              "                        SWC A            0\n",
              "                        Filter A         0\n",
              "                        Finish A         0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Raw (OL)         0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "                        Finish (OL)      0\n",
              "Total Dissolved Solids  Raw              0\n",
              "                        PTC              0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Conductivity            Raw              0\n",
              "                        PTC              0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Hardness                Raw              0\n",
              "                        Finish           0\n",
              "Alkalinity              Raw              0\n",
              "                        Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Raw              0\n",
              "                        Finish           0\n",
              "Cl Demand                                0\n",
              "UVT                     Raw              0\n",
              "                        Filter           0\n",
              "UVA                     Raw              0\n",
              "                        Filter           0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "                        Filter           0\n",
              "                        Backwash         0\n",
              "Flows from plant        Bishop s         0\n",
              "                        Botwood          0\n",
              "                        GFW              0\n",
              "Chemical Dosages        Chlorine         0\n",
              "                        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 202
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2020**"
      ],
      "metadata": {
        "id": "ir2auYHqMtHf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2020.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LdTGhYeGRuYQ",
        "outputId": "3e82b0c4-8be3-4335-8c3e-893645004915"
      },
      "execution_count": 203,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                       0\n",
              "pH                      Raw                0\n",
              "                        PTC                0\n",
              "                        PTC (OL)           0\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish (OL)        0\n",
              "                        Finish             0\n",
              "Chlorine                Free               0\n",
              "                        Total              0\n",
              "                        Sample             0\n",
              "                        Analyzer           0\n",
              "Colour                  Raw A              0\n",
              "                        Raw T              0\n",
              "                        SWC A              0\n",
              "                        Filter A           0\n",
              "                        Finish A           0\n",
              "                        Finish T           0\n",
              "Turbidity               Raw                0\n",
              "                        Raw (OL)           0\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "                        Finish (OL)        0\n",
              "Total Dissolved Solids  Raw                0\n",
              "                        PTC                0\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "Conductivity            Raw                0\n",
              "                        PTC                0\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "Hardness                Raw              116\n",
              "                        Finish           116\n",
              "Alkalinity              Raw                0\n",
              "                        Finish             0\n",
              "Aluminum                Finish (Free)      0\n",
              "Temperature             Raw                0\n",
              "                        Finish             0\n",
              "Cl Demand                                 99\n",
              "UVT                     Raw                0\n",
              "                        Filter             0\n",
              "UVA                     Raw                0\n",
              "                        Filter             0\n",
              "Flows within plant      Raw                0\n",
              "                        Finish             0\n",
              "                        Filter             0\n",
              "                        Backwash           0\n",
              "Flows from plant        Bishop s           0\n",
              "                        Botwood            0\n",
              "                        GFW                0\n",
              "Chemical Dosages        Chlorine          99\n",
              "                        Alum               0\n",
              "                        Limestone          0\n",
              "                        Lime              21\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 203
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2020 = data_2020.copy()"
      ],
      "metadata": {
        "id": "zE4SC_Y4mOwu"
      },
      "execution_count": 204,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_2020[('Turbidity','Finish')].loc[349] = '0.14'"
      ],
      "metadata": {
        "id": "wOB03McGmGCY"
      },
      "execution_count": 205,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2021**"
      ],
      "metadata": {
        "id": "MlD97SI6OlEh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2021.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z59rfHWWR4HA",
        "outputId": "3270b895-c647-44b2-9c4b-538d82e140b9"
      },
      "execution_count": 206,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                       0\n",
              "pH                      Raw               26\n",
              "                        PTC               26\n",
              "                        PTC (OL)          26\n",
              "                        SWC               26\n",
              "                        Filter            26\n",
              "                        Finish (OL)       26\n",
              "                        Finish            26\n",
              "Chlorine                Free              26\n",
              "                        Total             26\n",
              "                        Sample            26\n",
              "                        Analyzer          26\n",
              "Colour                  Raw A             26\n",
              "                        Raw T             26\n",
              "                        SWC A             26\n",
              "                        Filter A          85\n",
              "                        Finish A         159\n",
              "                        Finish T         174\n",
              "Turbidity               Raw               26\n",
              "                        Raw (OL)          31\n",
              "                        SWC               26\n",
              "                        Filter            26\n",
              "                        Finish            26\n",
              "                        Finish (OL)       26\n",
              "Total Dissolved Solids  Raw               26\n",
              "                        PTC               26\n",
              "                        SWC               26\n",
              "                        Filter            26\n",
              "                        Finish            26\n",
              "Conductivity            Raw               26\n",
              "                        PTC               26\n",
              "                        SWC               26\n",
              "                        Filter            26\n",
              "                        Finish            26\n",
              "Hardness                Raw              113\n",
              "                        Finish           113\n",
              "Alkalinity              Raw               26\n",
              "                        Finish            26\n",
              "Aluminum                Finish (Free)     26\n",
              "Temperature             Raw               26\n",
              "                        Finish            26\n",
              "Cl Used                                   19\n",
              "Cl Demand                                 49\n",
              "UVT                     Raw               26\n",
              "                        Filter            26\n",
              "UVA                     Raw               26\n",
              "                        Filter            26\n",
              "Flows within plant      Raw               19\n",
              "                        Finish            19\n",
              "                        Filter            19\n",
              "                        Backwash          35\n",
              "Flows from plant        Bishop s          41\n",
              "                        Botwood           40\n",
              "                        GFW               40\n",
              "Chemical Dosages        Chlorine          49\n",
              "                        Alum              29\n",
              "                        Limestone         18\n",
              "                        Lime              18\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2021 = data_2021.copy()"
      ],
      "metadata": {
        "id": "OHP0izyYM_6q"
      },
      "execution_count": 207,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_2021.replace('0', np.nan, inplace = True)"
      ],
      "metadata": {
        "id": "Fq-RPlBFDRbG"
      },
      "execution_count": 208,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_2021.tail(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "1YhKEuPzPjNk",
        "outputId": "896c0279-1f65-44c9-a8b6-c774e0900bb6"
      },
      "execution_count": 209,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date    pH                                                 \\\n",
              "                           Raw   PTC PTC (OL)   SWC Filter Finish (OL) Finish   \n",
              "345  2021-12-12 00:00:00   NaN   NaN      NaN   NaN    NaN         NaN    NaN   \n",
              "346  2021-12-13 00:00:00  6.12   5.2     5.18  5.22   5.28        7.41   7.33   \n",
              "347  2021-12-14 00:00:00  6.09  5.16     5.12   5.2   5.24         7.2   7.13   \n",
              "348  2021-12-15 00:00:00  6.03  4.95     5.04  5.08   5.12        6.79   7.16   \n",
              "349  2021-12-16 00:00:00  6.14  5.17     5.09  5.22   5.23        6.81   7.35   \n",
              "350  2021-12-17 00:00:00  5.82  5.17      5.3  5.24   5.25        6.91   7.39   \n",
              "351  2021-12-18 00:00:00  5.96  5.12     5.09  5.26    5.3        6.93   7.07   \n",
              "352  2021-12-19 00:00:00   NaN   NaN      NaN   NaN    NaN         NaN    NaN   \n",
              "353  2021-12-20 00:00:00   5.9     5     5.02  5.16   5.19         6.7   6.75   \n",
              "354  2021-12-21 00:00:00  6.36  5.14      5.2   5.2   5.26         6.8   6.88   \n",
              "355  2021-12-22 00:00:00  6.23  5.24     5.09  5.32   5.31        6.96   6.84   \n",
              "356  2021-12-23 00:00:00  6.19  5.12     5.27  5.21   5.23         6.4   7.12   \n",
              "357  2021-12-24 00:00:00   6.1  5.17     5.13  5.26    5.3        7.44   7.59   \n",
              "358  2021-12-25 00:00:00  6.07  5.11     5.04  5.33   5.38        7.79   8.01   \n",
              "359  2021-12-26 00:00:00   NaN   NaN      NaN   NaN    NaN         NaN    NaN   \n",
              "360  2021-12-27 00:00:00  6.06  5.17     4.96  5.29   5.31        7.38   7.84   \n",
              "361  2021-12-28 00:00:00  6.13  5.18     5.14  5.31   5.35        7.18   7.33   \n",
              "362  2021-12-29 00:00:00  6.09  5.17     5.15  5.24   5.29        6.95   6.77   \n",
              "363  2021-12-30 00:00:00  6.17  5.26     5.14   5.6   6.04        7.77    6.6   \n",
              "364  2021-12-31 00:00:00  6.16  5.12     5.21  5.24   5.26        7.11   7.65   \n",
              "\n",
              "    Chlorine        ... Flows within plant                 Flows from plant  \\\n",
              "        Free Total  ...             Finish Filter Backwash         Bishop s   \n",
              "345      NaN   NaN  ...              12.48  12.48      NaN            1.361   \n",
              "346     1.59  1.81  ...              11.73  13.87     2.14            1.498   \n",
              "347     1.64  1.83  ...              12.75  12.75      NaN            1.482   \n",
              "348      1.4  1.61  ...              12.33  13.35     1.02            1.496   \n",
              "349     1.43  1.64  ...               11.6  12.63     1.03            1.497   \n",
              "350     1.41  1.51  ...              12.28  13.27     0.99            1.546   \n",
              "351     1.38  1.49  ...              12.24  13.33     1.09              NaN   \n",
              "352      NaN   NaN  ...                NaN    NaN      NaN              NaN   \n",
              "353     1.28  1.43  ...                NaN    NaN      NaN              NaN   \n",
              "354     1.38  1.53  ...              12.41  13.46     1.05            1.464   \n",
              "355     1.42  1.56  ...              13.12  14.16     1.04            1.447   \n",
              "356     1.53  1.64  ...              12.29  13.33     1.04            1.406   \n",
              "357     1.47  1.61  ...              12.57   13.6     1.03            1.367   \n",
              "358     1.54   1.7  ...              12.81  13.83     1.02              NaN   \n",
              "359      NaN   NaN  ...                NaN    NaN      NaN              NaN   \n",
              "360     1.62  1.74  ...                NaN    NaN      NaN              NaN   \n",
              "361     1.67  1.83  ...              11.76  12.79     1.03            1.382   \n",
              "362     1.76  1.91  ...              12.46  13.49     1.03            1.364   \n",
              "363     1.56  1.79  ...              12.41  13.48     1.07             1.36   \n",
              "364     1.58  1.79  ...              12.08  13.15     1.07            1.341   \n",
              "\n",
              "                      Chemical Dosages                         \n",
              "    Botwood    GFW            Chlorine   Alum Limestone  Lime  \n",
              "345   1.916  8.013           2.8516875    NaN         5   9.8  \n",
              "346   1.929  8.101  3.3308815004262575  30.14         5   9.8  \n",
              "347    1.91   7.96   2.747857254901961  30.38         5   9.8  \n",
              "348    1.95   8.15  3.1511208434712086  30.22       4.8   9.8  \n",
              "349   1.952  7.773   3.279367241379311  30.26         5    10  \n",
              "350   1.947  8.062   2.853027687296417  30.51       5.3  10.2  \n",
              "351     NaN    NaN  3.1078970588235295  30.75         5  10.4  \n",
              "352     NaN    NaN                 NaN    NaN       NaN   NaN  \n",
              "353     NaN    NaN                 NaN  30.06         5  10.6  \n",
              "354   1.938  8.282   3.307505237711523  31.97       5.3  10.9  \n",
              "355    1.93  8.205  2.8229664634146343  29.57       5.5  11.1  \n",
              "356   1.966  8.676  3.1972091131000817  32.39       5.2  11.1  \n",
              "357   1.968  8.592  3.2668496420047735  30.38       5.2    12  \n",
              "358     NaN    NaN  3.1259016393442622  31.05       5.2  11.8  \n",
              "359     NaN    NaN                 NaN    NaN       NaN   NaN  \n",
              "360     NaN    NaN                 NaN  30.98       5.2  11.8  \n",
              "361   1.703  8.519   2.471906462585034  31.22       5.2  11.8  \n",
              "362   1.715  8.602  3.3197383627608343  30.57       5.2  11.8  \n",
              "363   1.719  8.915    3.22665592264303  30.86       5.2  11.8  \n",
              "364   1.737  8.311  3.3974834437086097  30.31       5.2  11.6  \n",
              "\n",
              "[20 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af55ff25-2437-40a9-830c-6267ac5c0484\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>345</th>\n",
              "      <td>2021-12-12 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>12.48</td>\n",
              "      <td>12.48</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.361</td>\n",
              "      <td>1.916</td>\n",
              "      <td>8.013</td>\n",
              "      <td>2.8516875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>346</th>\n",
              "      <td>2021-12-13 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.28</td>\n",
              "      <td>7.41</td>\n",
              "      <td>7.33</td>\n",
              "      <td>1.59</td>\n",
              "      <td>1.81</td>\n",
              "      <td>...</td>\n",
              "      <td>11.73</td>\n",
              "      <td>13.87</td>\n",
              "      <td>2.14</td>\n",
              "      <td>1.498</td>\n",
              "      <td>1.929</td>\n",
              "      <td>8.101</td>\n",
              "      <td>3.3308815004262575</td>\n",
              "      <td>30.14</td>\n",
              "      <td>5</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>2021-12-14 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.24</td>\n",
              "      <td>7.2</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.64</td>\n",
              "      <td>1.83</td>\n",
              "      <td>...</td>\n",
              "      <td>12.75</td>\n",
              "      <td>12.75</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.482</td>\n",
              "      <td>1.91</td>\n",
              "      <td>7.96</td>\n",
              "      <td>2.747857254901961</td>\n",
              "      <td>30.38</td>\n",
              "      <td>5</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>348</th>\n",
              "      <td>2021-12-15 00:00:00</td>\n",
              "      <td>6.03</td>\n",
              "      <td>4.95</td>\n",
              "      <td>5.04</td>\n",
              "      <td>5.08</td>\n",
              "      <td>5.12</td>\n",
              "      <td>6.79</td>\n",
              "      <td>7.16</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.61</td>\n",
              "      <td>...</td>\n",
              "      <td>12.33</td>\n",
              "      <td>13.35</td>\n",
              "      <td>1.02</td>\n",
              "      <td>1.496</td>\n",
              "      <td>1.95</td>\n",
              "      <td>8.15</td>\n",
              "      <td>3.1511208434712086</td>\n",
              "      <td>30.22</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>349</th>\n",
              "      <td>2021-12-16 00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.23</td>\n",
              "      <td>6.81</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.43</td>\n",
              "      <td>1.64</td>\n",
              "      <td>...</td>\n",
              "      <td>11.6</td>\n",
              "      <td>12.63</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.497</td>\n",
              "      <td>1.952</td>\n",
              "      <td>7.773</td>\n",
              "      <td>3.279367241379311</td>\n",
              "      <td>30.26</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>350</th>\n",
              "      <td>2021-12-17 00:00:00</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>6.91</td>\n",
              "      <td>7.39</td>\n",
              "      <td>1.41</td>\n",
              "      <td>1.51</td>\n",
              "      <td>...</td>\n",
              "      <td>12.28</td>\n",
              "      <td>13.27</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.546</td>\n",
              "      <td>1.947</td>\n",
              "      <td>8.062</td>\n",
              "      <td>2.853027687296417</td>\n",
              "      <td>30.51</td>\n",
              "      <td>5.3</td>\n",
              "      <td>10.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>351</th>\n",
              "      <td>2021-12-18 00:00:00</td>\n",
              "      <td>5.96</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.93</td>\n",
              "      <td>7.07</td>\n",
              "      <td>1.38</td>\n",
              "      <td>1.49</td>\n",
              "      <td>...</td>\n",
              "      <td>12.24</td>\n",
              "      <td>13.33</td>\n",
              "      <td>1.09</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.1078970588235295</td>\n",
              "      <td>30.75</td>\n",
              "      <td>5</td>\n",
              "      <td>10.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>2021-12-19 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>353</th>\n",
              "      <td>2021-12-20 00:00:00</td>\n",
              "      <td>5.9</td>\n",
              "      <td>5</td>\n",
              "      <td>5.02</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.19</td>\n",
              "      <td>6.7</td>\n",
              "      <td>6.75</td>\n",
              "      <td>1.28</td>\n",
              "      <td>1.43</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.06</td>\n",
              "      <td>5</td>\n",
              "      <td>10.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>354</th>\n",
              "      <td>2021-12-21 00:00:00</td>\n",
              "      <td>6.36</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.26</td>\n",
              "      <td>6.8</td>\n",
              "      <td>6.88</td>\n",
              "      <td>1.38</td>\n",
              "      <td>1.53</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.46</td>\n",
              "      <td>1.05</td>\n",
              "      <td>1.464</td>\n",
              "      <td>1.938</td>\n",
              "      <td>8.282</td>\n",
              "      <td>3.307505237711523</td>\n",
              "      <td>31.97</td>\n",
              "      <td>5.3</td>\n",
              "      <td>10.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>355</th>\n",
              "      <td>2021-12-22 00:00:00</td>\n",
              "      <td>6.23</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.31</td>\n",
              "      <td>6.96</td>\n",
              "      <td>6.84</td>\n",
              "      <td>1.42</td>\n",
              "      <td>1.56</td>\n",
              "      <td>...</td>\n",
              "      <td>13.12</td>\n",
              "      <td>14.16</td>\n",
              "      <td>1.04</td>\n",
              "      <td>1.447</td>\n",
              "      <td>1.93</td>\n",
              "      <td>8.205</td>\n",
              "      <td>2.8229664634146343</td>\n",
              "      <td>29.57</td>\n",
              "      <td>5.5</td>\n",
              "      <td>11.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>2021-12-23 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.23</td>\n",
              "      <td>6.4</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.53</td>\n",
              "      <td>1.64</td>\n",
              "      <td>...</td>\n",
              "      <td>12.29</td>\n",
              "      <td>13.33</td>\n",
              "      <td>1.04</td>\n",
              "      <td>1.406</td>\n",
              "      <td>1.966</td>\n",
              "      <td>8.676</td>\n",
              "      <td>3.1972091131000817</td>\n",
              "      <td>32.39</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>2021-12-24 00:00:00</td>\n",
              "      <td>6.1</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.13</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>7.44</td>\n",
              "      <td>7.59</td>\n",
              "      <td>1.47</td>\n",
              "      <td>1.61</td>\n",
              "      <td>...</td>\n",
              "      <td>12.57</td>\n",
              "      <td>13.6</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.367</td>\n",
              "      <td>1.968</td>\n",
              "      <td>8.592</td>\n",
              "      <td>3.2668496420047735</td>\n",
              "      <td>30.38</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>2021-12-25 00:00:00</td>\n",
              "      <td>6.07</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.04</td>\n",
              "      <td>5.33</td>\n",
              "      <td>5.38</td>\n",
              "      <td>7.79</td>\n",
              "      <td>8.01</td>\n",
              "      <td>1.54</td>\n",
              "      <td>1.7</td>\n",
              "      <td>...</td>\n",
              "      <td>12.81</td>\n",
              "      <td>13.83</td>\n",
              "      <td>1.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.1259016393442622</td>\n",
              "      <td>31.05</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>359</th>\n",
              "      <td>2021-12-26 00:00:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2021-12-27 00:00:00</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.17</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>7.38</td>\n",
              "      <td>7.84</td>\n",
              "      <td>1.62</td>\n",
              "      <td>1.74</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2021-12-28 00:00:00</td>\n",
              "      <td>6.13</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.35</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.33</td>\n",
              "      <td>1.67</td>\n",
              "      <td>1.83</td>\n",
              "      <td>...</td>\n",
              "      <td>11.76</td>\n",
              "      <td>12.79</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.382</td>\n",
              "      <td>1.703</td>\n",
              "      <td>8.519</td>\n",
              "      <td>2.471906462585034</td>\n",
              "      <td>31.22</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2021-12-29 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.29</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.77</td>\n",
              "      <td>1.76</td>\n",
              "      <td>1.91</td>\n",
              "      <td>...</td>\n",
              "      <td>12.46</td>\n",
              "      <td>13.49</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.364</td>\n",
              "      <td>1.715</td>\n",
              "      <td>8.602</td>\n",
              "      <td>3.3197383627608343</td>\n",
              "      <td>30.57</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2021-12-30 00:00:00</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.04</td>\n",
              "      <td>7.77</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.56</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.48</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.36</td>\n",
              "      <td>1.719</td>\n",
              "      <td>8.915</td>\n",
              "      <td>3.22665592264303</td>\n",
              "      <td>30.86</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2021-12-31 00:00:00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.26</td>\n",
              "      <td>7.11</td>\n",
              "      <td>7.65</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>12.08</td>\n",
              "      <td>13.15</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.341</td>\n",
              "      <td>1.737</td>\n",
              "      <td>8.311</td>\n",
              "      <td>3.3974834437086097</td>\n",
              "      <td>30.31</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af55ff25-2437-40a9-830c-6267ac5c0484')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-af55ff25-2437-40a9-830c-6267ac5c0484 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-af55ff25-2437-40a9-830c-6267ac5c0484');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 209
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2021[('Flows from plant','Bishop s')].loc[232] = '1.37'\n",
        "df_2021[('Flows from plant','Bishop s')].loc[234] = '1.695'\n",
        "df_2021[('Temperature','Finish')].loc[299] = '12.9'\n",
        "df_2021[('Alkalinity','Finish')].loc[36] = '5.8'\n",
        "df_2021[('Conductivity','SWC')].loc[70] = '57.8'\n",
        "df_2021[('Total Dissolved Solids','PTC')].loc[305] = '35.2'\n",
        "df_2021[('Turbidity','SWC')].loc[188] = '0.416'\n",
        "df_2021[('Turbidity','Raw')].loc[186] = '0.591'\n",
        "df_2021[('Turbidity','Raw')].loc[281] = '0.493'\n",
        "df_2021[('pH','Finish (OL)')].loc[171] = '7.21'\n",
        "df_2021[('Chlorine','Analyzer')].loc[74] = '1.69'\n",
        "df_2021[('Chlorine','Sample')].loc[18] = '2.20'\n",
        "df_2021[('UVA','Raw')].loc[70] = '0.2629'\n",
        "df_2021[('pH','PTC')].loc[154] = '4.99'\n",
        "df_2021[('Colour','Finish A')].loc[17] = '0'\n",
        "df_2021[('Colour','Finish A')].loc[244] = '0'\n",
        "df_2021[('Colour','Finish T')].loc[17] = '0'"
      ],
      "metadata": {
        "id": "HSTVV16BmfU4"
      },
      "execution_count": 210,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cols = df_2021.columns.tolist()\n",
        "for pair in cols:\n",
        "  col = pair[0]\n",
        "  subcol = pair[1]\n",
        "  try:\n",
        "    df_2021[(col, subcol)] = df_2021[(col, subcol)].fillna(df_2021[(col, subcol)].rolling(3, min_periods=1, center=True).mean())\n",
        "  except:\n",
        "    print(\"error: \"+col+\", \"+subcol)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9jUwfcQJRcbp",
        "outputId": "d43a8e6a-4f02-4911-d4d2-8cfb5f2aee3f"
      },
      "execution_count": 211,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "error: Date,  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print((df_2021[('Colour','Finish T')].loc[350]))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4WSsw6YHuk9t",
        "outputId": "02c294a6-d7eb-4ceb-fc37-da9a26ef4133"
      },
      "execution_count": 212,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nan\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2021.fillna(df_2021.mean(), inplace=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2RGcvMdsDmtq",
        "outputId": "11a25683-81f0-42f4-9414-0e350f384d4e"
      },
      "execution_count": 213,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-213-62c7871be23d>:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  df_2021.fillna(df_2021.mean(), inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2021.tail(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "mmAZDO1q70hv",
        "outputId": "9b047405-53a3-4c65-de48-328c87f7e350"
      },
      "execution_count": 214,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Date     pH                                          \\\n",
              "                            Raw   PTC PTC (OL)   SWC Filter Finish (OL)   \n",
              "345  2021-12-12 00:00:00  6.085  5.12     5.07  5.17   5.22        6.94   \n",
              "346  2021-12-13 00:00:00   6.12   5.2     5.18  5.22   5.28        7.41   \n",
              "347  2021-12-14 00:00:00   6.09  5.16     5.12   5.2   5.24         7.2   \n",
              "348  2021-12-15 00:00:00   6.03  4.95     5.04  5.08   5.12        6.79   \n",
              "349  2021-12-16 00:00:00   6.14  5.17     5.09  5.22   5.23        6.81   \n",
              "350  2021-12-17 00:00:00   5.82  5.17      5.3  5.24   5.25        6.91   \n",
              "351  2021-12-18 00:00:00   5.96  5.12     5.09  5.26    5.3        6.93   \n",
              "352  2021-12-19 00:00:00   5.93  5.06    5.055  5.21  5.245       6.815   \n",
              "353  2021-12-20 00:00:00    5.9     5     5.02  5.16   5.19         6.7   \n",
              "354  2021-12-21 00:00:00   6.36  5.14      5.2   5.2   5.26         6.8   \n",
              "355  2021-12-22 00:00:00   6.23  5.24     5.09  5.32   5.31        6.96   \n",
              "356  2021-12-23 00:00:00   6.19  5.12     5.27  5.21   5.23         6.4   \n",
              "357  2021-12-24 00:00:00    6.1  5.17     5.13  5.26    5.3        7.44   \n",
              "358  2021-12-25 00:00:00   6.07  5.11     5.04  5.33   5.38        7.79   \n",
              "359  2021-12-26 00:00:00  6.065  5.14      5.0  5.31  5.345       7.585   \n",
              "360  2021-12-27 00:00:00   6.06  5.17     4.96  5.29   5.31        7.38   \n",
              "361  2021-12-28 00:00:00   6.13  5.18     5.14  5.31   5.35        7.18   \n",
              "362  2021-12-29 00:00:00   6.09  5.17     5.15  5.24   5.29        6.95   \n",
              "363  2021-12-30 00:00:00   6.17  5.26     5.14   5.6   6.04        7.77   \n",
              "364  2021-12-31 00:00:00   6.16  5.12     5.21  5.24   5.26        7.11   \n",
              "\n",
              "           Chlorine         ... Flows within plant                  \\\n",
              "    Finish     Free  Total  ...             Finish Filter Backwash   \n",
              "345  6.955    1.515  1.735  ...              12.48  12.48    1.585   \n",
              "346   7.33     1.59   1.81  ...              11.73  13.87     2.14   \n",
              "347   7.13     1.64   1.83  ...              12.75  12.75     1.58   \n",
              "348   7.16      1.4   1.61  ...              12.33  13.35     1.02   \n",
              "349   7.35     1.43   1.64  ...               11.6  12.63     1.03   \n",
              "350   7.39     1.41   1.51  ...              12.28  13.27     0.99   \n",
              "351   7.07     1.38   1.49  ...              12.24  13.33     1.09   \n",
              "352   6.91     1.33   1.46  ...              12.24  13.33     1.09   \n",
              "353   6.75     1.28   1.43  ...              12.41  13.46     1.05   \n",
              "354   6.88     1.38   1.53  ...              12.41  13.46     1.05   \n",
              "355   6.84     1.42   1.56  ...              13.12  14.16     1.04   \n",
              "356   7.12     1.53   1.64  ...              12.29  13.33     1.04   \n",
              "357   7.59     1.47   1.61  ...              12.57   13.6     1.03   \n",
              "358   8.01     1.54    1.7  ...              12.81  13.83     1.02   \n",
              "359  7.925     1.58   1.72  ...              12.81  13.83     1.02   \n",
              "360   7.84     1.62   1.74  ...              11.76  12.79     1.03   \n",
              "361   7.33     1.67   1.83  ...              11.76  12.79     1.03   \n",
              "362   6.77     1.76   1.91  ...              12.46  13.49     1.03   \n",
              "363    6.6     1.56   1.79  ...              12.41  13.48     1.07   \n",
              "364   7.65     1.58   1.79  ...              12.08  13.15     1.07   \n",
              "\n",
              "    Flows from plant                   Chemical Dosages                    \\\n",
              "            Bishop s Botwood    GFW            Chlorine    Alum Limestone   \n",
              "345            1.361   1.916  8.013           2.8516875   30.55         5   \n",
              "346            1.498   1.929  8.101  3.3308815004262575   30.14         5   \n",
              "347            1.482    1.91   7.96   2.747857254901961   30.38         5   \n",
              "348            1.496    1.95   8.15  3.1511208434712086   30.22       4.8   \n",
              "349            1.497   1.952  7.773   3.279367241379311   30.26         5   \n",
              "350            1.546   1.947  8.062   2.853027687296417   30.51       5.3   \n",
              "351            1.546   1.947  8.062  3.1078970588235295   30.75         5   \n",
              "352              NaN     NaN    NaN            3.107897  30.405       5.0   \n",
              "353            1.464   1.938  8.282            3.307505   30.06         5   \n",
              "354            1.464   1.938  8.282   3.307505237711523   31.97       5.3   \n",
              "355            1.447    1.93  8.205  2.8229664634146343   29.57       5.5   \n",
              "356            1.406   1.966  8.676  3.1972091131000817   32.39       5.2   \n",
              "357            1.367   1.968  8.592  3.2668496420047735   30.38       5.2   \n",
              "358            1.367   1.968  8.592  3.1259016393442622   31.05       5.2   \n",
              "359              NaN     NaN    NaN            3.125902  31.015       5.2   \n",
              "360            1.382   1.703  8.519            2.471906   30.98       5.2   \n",
              "361            1.382   1.703  8.519   2.471906462585034   31.22       5.2   \n",
              "362            1.364   1.715  8.602  3.3197383627608343   30.57       5.2   \n",
              "363             1.36   1.719  8.915    3.22665592264303   30.86       5.2   \n",
              "364            1.341   1.737  8.311  3.3974834437086097   30.31       5.2   \n",
              "\n",
              "           \n",
              "     Lime  \n",
              "345   9.8  \n",
              "346   9.8  \n",
              "347   9.8  \n",
              "348   9.8  \n",
              "349    10  \n",
              "350  10.2  \n",
              "351  10.4  \n",
              "352  10.5  \n",
              "353  10.6  \n",
              "354  10.9  \n",
              "355  11.1  \n",
              "356  11.1  \n",
              "357    12  \n",
              "358  11.8  \n",
              "359  11.8  \n",
              "360  11.8  \n",
              "361  11.8  \n",
              "362  11.8  \n",
              "363  11.8  \n",
              "364  11.6  \n",
              "\n",
              "[20 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-92bf7904-c183-472d-a3e8-b2e33522625f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th colspan=\"7\" halign=\"left\">pH</th>\n",
              "      <th colspan=\"2\" halign=\"left\">Chlorine</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows within plant</th>\n",
              "      <th colspan=\"3\" halign=\"left\">Flows from plant</th>\n",
              "      <th colspan=\"4\" halign=\"left\">Chemical Dosages</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Raw</th>\n",
              "      <th>PTC</th>\n",
              "      <th>PTC (OL)</th>\n",
              "      <th>SWC</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Finish (OL)</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Total</th>\n",
              "      <th>...</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Filter</th>\n",
              "      <th>Backwash</th>\n",
              "      <th>Bishop s</th>\n",
              "      <th>Botwood</th>\n",
              "      <th>GFW</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Alum</th>\n",
              "      <th>Limestone</th>\n",
              "      <th>Lime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>345</th>\n",
              "      <td>2021-12-12 00:00:00</td>\n",
              "      <td>6.085</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.07</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.22</td>\n",
              "      <td>6.94</td>\n",
              "      <td>6.955</td>\n",
              "      <td>1.515</td>\n",
              "      <td>1.735</td>\n",
              "      <td>...</td>\n",
              "      <td>12.48</td>\n",
              "      <td>12.48</td>\n",
              "      <td>1.585</td>\n",
              "      <td>1.361</td>\n",
              "      <td>1.916</td>\n",
              "      <td>8.013</td>\n",
              "      <td>2.8516875</td>\n",
              "      <td>30.55</td>\n",
              "      <td>5</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>346</th>\n",
              "      <td>2021-12-13 00:00:00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.28</td>\n",
              "      <td>7.41</td>\n",
              "      <td>7.33</td>\n",
              "      <td>1.59</td>\n",
              "      <td>1.81</td>\n",
              "      <td>...</td>\n",
              "      <td>11.73</td>\n",
              "      <td>13.87</td>\n",
              "      <td>2.14</td>\n",
              "      <td>1.498</td>\n",
              "      <td>1.929</td>\n",
              "      <td>8.101</td>\n",
              "      <td>3.3308815004262575</td>\n",
              "      <td>30.14</td>\n",
              "      <td>5</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>2021-12-14 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.24</td>\n",
              "      <td>7.2</td>\n",
              "      <td>7.13</td>\n",
              "      <td>1.64</td>\n",
              "      <td>1.83</td>\n",
              "      <td>...</td>\n",
              "      <td>12.75</td>\n",
              "      <td>12.75</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.482</td>\n",
              "      <td>1.91</td>\n",
              "      <td>7.96</td>\n",
              "      <td>2.747857254901961</td>\n",
              "      <td>30.38</td>\n",
              "      <td>5</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>348</th>\n",
              "      <td>2021-12-15 00:00:00</td>\n",
              "      <td>6.03</td>\n",
              "      <td>4.95</td>\n",
              "      <td>5.04</td>\n",
              "      <td>5.08</td>\n",
              "      <td>5.12</td>\n",
              "      <td>6.79</td>\n",
              "      <td>7.16</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.61</td>\n",
              "      <td>...</td>\n",
              "      <td>12.33</td>\n",
              "      <td>13.35</td>\n",
              "      <td>1.02</td>\n",
              "      <td>1.496</td>\n",
              "      <td>1.95</td>\n",
              "      <td>8.15</td>\n",
              "      <td>3.1511208434712086</td>\n",
              "      <td>30.22</td>\n",
              "      <td>4.8</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>349</th>\n",
              "      <td>2021-12-16 00:00:00</td>\n",
              "      <td>6.14</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.23</td>\n",
              "      <td>6.81</td>\n",
              "      <td>7.35</td>\n",
              "      <td>1.43</td>\n",
              "      <td>1.64</td>\n",
              "      <td>...</td>\n",
              "      <td>11.6</td>\n",
              "      <td>12.63</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.497</td>\n",
              "      <td>1.952</td>\n",
              "      <td>7.773</td>\n",
              "      <td>3.279367241379311</td>\n",
              "      <td>30.26</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>350</th>\n",
              "      <td>2021-12-17 00:00:00</td>\n",
              "      <td>5.82</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.25</td>\n",
              "      <td>6.91</td>\n",
              "      <td>7.39</td>\n",
              "      <td>1.41</td>\n",
              "      <td>1.51</td>\n",
              "      <td>...</td>\n",
              "      <td>12.28</td>\n",
              "      <td>13.27</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.546</td>\n",
              "      <td>1.947</td>\n",
              "      <td>8.062</td>\n",
              "      <td>2.853027687296417</td>\n",
              "      <td>30.51</td>\n",
              "      <td>5.3</td>\n",
              "      <td>10.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>351</th>\n",
              "      <td>2021-12-18 00:00:00</td>\n",
              "      <td>5.96</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>6.93</td>\n",
              "      <td>7.07</td>\n",
              "      <td>1.38</td>\n",
              "      <td>1.49</td>\n",
              "      <td>...</td>\n",
              "      <td>12.24</td>\n",
              "      <td>13.33</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.546</td>\n",
              "      <td>1.947</td>\n",
              "      <td>8.062</td>\n",
              "      <td>3.1078970588235295</td>\n",
              "      <td>30.75</td>\n",
              "      <td>5</td>\n",
              "      <td>10.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>2021-12-19 00:00:00</td>\n",
              "      <td>5.93</td>\n",
              "      <td>5.06</td>\n",
              "      <td>5.055</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.245</td>\n",
              "      <td>6.815</td>\n",
              "      <td>6.91</td>\n",
              "      <td>1.33</td>\n",
              "      <td>1.46</td>\n",
              "      <td>...</td>\n",
              "      <td>12.24</td>\n",
              "      <td>13.33</td>\n",
              "      <td>1.09</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.107897</td>\n",
              "      <td>30.405</td>\n",
              "      <td>5.0</td>\n",
              "      <td>10.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>353</th>\n",
              "      <td>2021-12-20 00:00:00</td>\n",
              "      <td>5.9</td>\n",
              "      <td>5</td>\n",
              "      <td>5.02</td>\n",
              "      <td>5.16</td>\n",
              "      <td>5.19</td>\n",
              "      <td>6.7</td>\n",
              "      <td>6.75</td>\n",
              "      <td>1.28</td>\n",
              "      <td>1.43</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.46</td>\n",
              "      <td>1.05</td>\n",
              "      <td>1.464</td>\n",
              "      <td>1.938</td>\n",
              "      <td>8.282</td>\n",
              "      <td>3.307505</td>\n",
              "      <td>30.06</td>\n",
              "      <td>5</td>\n",
              "      <td>10.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>354</th>\n",
              "      <td>2021-12-21 00:00:00</td>\n",
              "      <td>6.36</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5.26</td>\n",
              "      <td>6.8</td>\n",
              "      <td>6.88</td>\n",
              "      <td>1.38</td>\n",
              "      <td>1.53</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.46</td>\n",
              "      <td>1.05</td>\n",
              "      <td>1.464</td>\n",
              "      <td>1.938</td>\n",
              "      <td>8.282</td>\n",
              "      <td>3.307505237711523</td>\n",
              "      <td>31.97</td>\n",
              "      <td>5.3</td>\n",
              "      <td>10.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>355</th>\n",
              "      <td>2021-12-22 00:00:00</td>\n",
              "      <td>6.23</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.09</td>\n",
              "      <td>5.32</td>\n",
              "      <td>5.31</td>\n",
              "      <td>6.96</td>\n",
              "      <td>6.84</td>\n",
              "      <td>1.42</td>\n",
              "      <td>1.56</td>\n",
              "      <td>...</td>\n",
              "      <td>13.12</td>\n",
              "      <td>14.16</td>\n",
              "      <td>1.04</td>\n",
              "      <td>1.447</td>\n",
              "      <td>1.93</td>\n",
              "      <td>8.205</td>\n",
              "      <td>2.8229664634146343</td>\n",
              "      <td>29.57</td>\n",
              "      <td>5.5</td>\n",
              "      <td>11.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>2021-12-23 00:00:00</td>\n",
              "      <td>6.19</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.23</td>\n",
              "      <td>6.4</td>\n",
              "      <td>7.12</td>\n",
              "      <td>1.53</td>\n",
              "      <td>1.64</td>\n",
              "      <td>...</td>\n",
              "      <td>12.29</td>\n",
              "      <td>13.33</td>\n",
              "      <td>1.04</td>\n",
              "      <td>1.406</td>\n",
              "      <td>1.966</td>\n",
              "      <td>8.676</td>\n",
              "      <td>3.1972091131000817</td>\n",
              "      <td>32.39</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>2021-12-24 00:00:00</td>\n",
              "      <td>6.1</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.13</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.3</td>\n",
              "      <td>7.44</td>\n",
              "      <td>7.59</td>\n",
              "      <td>1.47</td>\n",
              "      <td>1.61</td>\n",
              "      <td>...</td>\n",
              "      <td>12.57</td>\n",
              "      <td>13.6</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.367</td>\n",
              "      <td>1.968</td>\n",
              "      <td>8.592</td>\n",
              "      <td>3.2668496420047735</td>\n",
              "      <td>30.38</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>2021-12-25 00:00:00</td>\n",
              "      <td>6.07</td>\n",
              "      <td>5.11</td>\n",
              "      <td>5.04</td>\n",
              "      <td>5.33</td>\n",
              "      <td>5.38</td>\n",
              "      <td>7.79</td>\n",
              "      <td>8.01</td>\n",
              "      <td>1.54</td>\n",
              "      <td>1.7</td>\n",
              "      <td>...</td>\n",
              "      <td>12.81</td>\n",
              "      <td>13.83</td>\n",
              "      <td>1.02</td>\n",
              "      <td>1.367</td>\n",
              "      <td>1.968</td>\n",
              "      <td>8.592</td>\n",
              "      <td>3.1259016393442622</td>\n",
              "      <td>31.05</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>359</th>\n",
              "      <td>2021-12-26 00:00:00</td>\n",
              "      <td>6.065</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.345</td>\n",
              "      <td>7.585</td>\n",
              "      <td>7.925</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.72</td>\n",
              "      <td>...</td>\n",
              "      <td>12.81</td>\n",
              "      <td>13.83</td>\n",
              "      <td>1.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.125902</td>\n",
              "      <td>31.015</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>2021-12-27 00:00:00</td>\n",
              "      <td>6.06</td>\n",
              "      <td>5.17</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.31</td>\n",
              "      <td>7.38</td>\n",
              "      <td>7.84</td>\n",
              "      <td>1.62</td>\n",
              "      <td>1.74</td>\n",
              "      <td>...</td>\n",
              "      <td>11.76</td>\n",
              "      <td>12.79</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.382</td>\n",
              "      <td>1.703</td>\n",
              "      <td>8.519</td>\n",
              "      <td>2.471906</td>\n",
              "      <td>30.98</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>2021-12-28 00:00:00</td>\n",
              "      <td>6.13</td>\n",
              "      <td>5.18</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.31</td>\n",
              "      <td>5.35</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7.33</td>\n",
              "      <td>1.67</td>\n",
              "      <td>1.83</td>\n",
              "      <td>...</td>\n",
              "      <td>11.76</td>\n",
              "      <td>12.79</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.382</td>\n",
              "      <td>1.703</td>\n",
              "      <td>8.519</td>\n",
              "      <td>2.471906462585034</td>\n",
              "      <td>31.22</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2021-12-29 00:00:00</td>\n",
              "      <td>6.09</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.29</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.77</td>\n",
              "      <td>1.76</td>\n",
              "      <td>1.91</td>\n",
              "      <td>...</td>\n",
              "      <td>12.46</td>\n",
              "      <td>13.49</td>\n",
              "      <td>1.03</td>\n",
              "      <td>1.364</td>\n",
              "      <td>1.715</td>\n",
              "      <td>8.602</td>\n",
              "      <td>3.3197383627608343</td>\n",
              "      <td>30.57</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2021-12-30 00:00:00</td>\n",
              "      <td>6.17</td>\n",
              "      <td>5.26</td>\n",
              "      <td>5.14</td>\n",
              "      <td>5.6</td>\n",
              "      <td>6.04</td>\n",
              "      <td>7.77</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.56</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>12.41</td>\n",
              "      <td>13.48</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.36</td>\n",
              "      <td>1.719</td>\n",
              "      <td>8.915</td>\n",
              "      <td>3.22665592264303</td>\n",
              "      <td>30.86</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2021-12-31 00:00:00</td>\n",
              "      <td>6.16</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.21</td>\n",
              "      <td>5.24</td>\n",
              "      <td>5.26</td>\n",
              "      <td>7.11</td>\n",
              "      <td>7.65</td>\n",
              "      <td>1.58</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>12.08</td>\n",
              "      <td>13.15</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.341</td>\n",
              "      <td>1.737</td>\n",
              "      <td>8.311</td>\n",
              "      <td>3.3974834437086097</td>\n",
              "      <td>30.31</td>\n",
              "      <td>5.2</td>\n",
              "      <td>11.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92bf7904-c183-472d-a3e8-b2e33522625f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-92bf7904-c183-472d-a3e8-b2e33522625f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-92bf7904-c183-472d-a3e8-b2e33522625f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# print(type(data_2021[('pH','Raw')].loc[9]))"
      ],
      "metadata": {
        "id": "FeGKqe_zJ3TW"
      },
      "execution_count": 215,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# df_2021[('Chemical Dosages','Chlorine')].loc[df_2021[('Chemical Dosages','Chlorine')].apply(lambda x: type(x) == float)].astype(str)\n",
        "# data_2021[('Chemical Dosages','Chlorine')].loc[data_2021[('Chemical Dosages','Chlorine')].apply(lambda x: type(x) == float)]"
      ],
      "metadata": {
        "id": "Xm90iJLeG1v_"
      },
      "execution_count": 216,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# float_cells = data_2021.loc[df_2021[('Chemical Dosages','Chlorine')].apply(lambda x: type(x) == float)]\n",
        "# float_cells"
      ],
      "metadata": {
        "id": "jXV8DxqJFiu0"
      },
      "execution_count": 217,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# x = df_2021[('Chemical Dosages','Chlorine')].loc[5]+df_2021[('Chemical Dosages','Chlorine')].loc[6]"
      ],
      "metadata": {
        "id": "yddwdNwBCnQ1"
      },
      "execution_count": 218,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# mean_A = df_2021[('Chemical Dosages','Chlorine')].mean()\n",
        "# df_2021[('Chemical Dosages','Chlorine')].fillna(mean_A, inplace=True)"
      ],
      "metadata": {
        "id": "sZ8mIDXeInhO"
      },
      "execution_count": 219,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_2021.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c929e347-dad2-4847-b3f3-24f2ae620bf6",
        "id": "KR9cjwRmM_6r"
      },
      "execution_count": 220,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                       0\n",
              "pH                      Raw                0\n",
              "                        PTC                0\n",
              "                        PTC (OL)           0\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish (OL)        0\n",
              "                        Finish             0\n",
              "Chlorine                Free               0\n",
              "                        Total              0\n",
              "                        Sample             0\n",
              "                        Analyzer           0\n",
              "Colour                  Raw A              0\n",
              "                        Raw T              0\n",
              "                        SWC A              0\n",
              "                        Filter A          74\n",
              "                        Finish A         271\n",
              "                        Finish T         356\n",
              "Turbidity               Raw                0\n",
              "                        Raw (OL)           3\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "                        Finish (OL)        0\n",
              "Total Dissolved Solids  Raw                0\n",
              "                        PTC                0\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "Conductivity            Raw                0\n",
              "                        PTC                0\n",
              "                        SWC                0\n",
              "                        Filter             0\n",
              "                        Finish             0\n",
              "Hardness                Raw               65\n",
              "                        Finish            65\n",
              "Alkalinity              Raw                0\n",
              "                        Finish             0\n",
              "Aluminum                Finish (Free)      0\n",
              "Temperature             Raw                0\n",
              "                        Finish             0\n",
              "Cl Used                                    3\n",
              "Cl Demand                                  3\n",
              "UVT                     Raw                0\n",
              "                        Filter             0\n",
              "UVA                     Raw                0\n",
              "                        Filter             0\n",
              "Flows within plant      Raw                0\n",
              "                        Finish             0\n",
              "                        Filter             0\n",
              "                        Backwash           0\n",
              "Flows from plant        Bishop s           3\n",
              "                        Botwood            4\n",
              "                        GFW                4\n",
              "Chemical Dosages        Chlorine           3\n",
              "                        Alum               0\n",
              "                        Limestone          0\n",
              "                        Lime               0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 220
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2022**"
      ],
      "metadata": {
        "id": "APaMyxqiFuO5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2022.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uq7y0FzzR79U",
        "outputId": "75808080-b350-4a82-9921-98239dd88c52"
      },
      "execution_count": 221,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                      0\n",
              "pH                      Raw               0\n",
              "                        PTC               0\n",
              "                        PTC (OL)          0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish (OL)       0\n",
              "                        Finish            0\n",
              "Chlorine                Free              0\n",
              "                        Total             0\n",
              "                        Sample            0\n",
              "                        Analyzer          0\n",
              "Colour                  Raw A             0\n",
              "                        Raw T             0\n",
              "                        SWC A             0\n",
              "                        Filter A          0\n",
              "                        Finish A          0\n",
              "                        Finish T          0\n",
              "Turbidity               Raw               0\n",
              "                        Raw (OL)          0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish            0\n",
              "                        Finish (OL)       0\n",
              "Total Dissolved Solids  Raw               0\n",
              "                        PTC               0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish            0\n",
              "Conductivity            Raw               0\n",
              "                        PTC               0\n",
              "                        SWC               0\n",
              "                        Filter            0\n",
              "                        Finish            0\n",
              "Hardness                Raw              54\n",
              "                        Finish           54\n",
              "Alkalinity              Raw               0\n",
              "                        Finish            0\n",
              "Aluminum                Finish (Free)     0\n",
              "Temperature             Raw               0\n",
              "                        Finish            0\n",
              "Cl Demand                                43\n",
              "UVT                     Raw               0\n",
              "                        Filter            0\n",
              "UVA                     Raw               0\n",
              "                        Filter            0\n",
              "Flows within plant      Raw               0\n",
              "                        Finish            0\n",
              "                        Filter            0\n",
              "                        Backwash          0\n",
              "Flows from plant        Bishop s          0\n",
              "                        Botwood           0\n",
              "                        GFW               0\n",
              "Chemical Dosages        Chlorine         43\n",
              "                        Alum              0\n",
              "                        Limestone         0\n",
              "                        Lime              0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 221
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2022 = data_2022.copy()"
      ],
      "metadata": {
        "id": "ExN0KLG7m5ke"
      },
      "execution_count": 222,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2023**"
      ],
      "metadata": {
        "id": "XG7ewf0jdvzZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_2023.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Kz1DLldFSDDF",
        "outputId": "050303be-cbad-4ee9-db69-a0627a185618"
      },
      "execution_count": 223,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                                     0\n",
              "pH                      Raw              0\n",
              "                        PTC              0\n",
              "                        PTC (OL)         0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish (OL)      0\n",
              "                        Finish           0\n",
              "Chlorine                Free             0\n",
              "                        Total            0\n",
              "                        Sample           0\n",
              "                        Analyzer         0\n",
              "Colour                  Raw A            0\n",
              "                        Raw T            0\n",
              "                        SWC A            0\n",
              "                        Filter A         0\n",
              "                        Finish A         0\n",
              "                        Finish T         0\n",
              "Turbidity               Raw              0\n",
              "                        Raw (OL)         0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "                        Finish (OL)      0\n",
              "Total Dissolved Solids  Raw              0\n",
              "                        PTC              0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Conductivity            Raw              0\n",
              "                        PTC              0\n",
              "                        SWC              0\n",
              "                        Filter           0\n",
              "                        Finish           0\n",
              "Hardness                Raw              5\n",
              "                        Finish           5\n",
              "Alkalinity              Raw              0\n",
              "                        Finish           0\n",
              "Aluminum                Finish (Free)    0\n",
              "Temperature             Raw              0\n",
              "                        Finish           0\n",
              "Cl Demand                                3\n",
              "UVT                     Raw              0\n",
              "                        Filter           0\n",
              "UVA                     Raw              0\n",
              "                        Filter           0\n",
              "Flows within plant      Raw              0\n",
              "                        Finish           0\n",
              "                        Filter           0\n",
              "                        Backwash         0\n",
              "Flows from plant        Bishop s         0\n",
              "                        Botwood          0\n",
              "                        GFW              0\n",
              "Chemical Dosages        Chlorine         3\n",
              "                        Alum             0\n",
              "                        Limestone        0\n",
              "                        Lime             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 223
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_2023 = data_2023.copy()"
      ],
      "metadata": {
        "id": "G8yL5XB1m9Qx"
      },
      "execution_count": 224,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Extract New Dataframe**"
      ],
      "metadata": {
        "id": "7IjX9UtEiGeo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "new_2009 = df_2009.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "sOsltfE4iLfq"
      },
      "execution_count": 225,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2009.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zxNxOo8ZjejR",
        "outputId": "294ee132-6ebb-4098-a8f7-9929aecc14e2"
      },
      "execution_count": 226,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 226
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2009 = new_2009.astype(float)"
      ],
      "metadata": {
        "id": "dM9tgjC80p7c"
      },
      "execution_count": 227,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2010 = df_2010.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "hH-vYW86jqMA"
      },
      "execution_count": 228,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2010.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n0_a6IaHj99r",
        "outputId": "b31d21b9-c439-4ab5-9861-0106e00a94d7"
      },
      "execution_count": 229,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 229
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2010 = new_2010.astype(float)"
      ],
      "metadata": {
        "id": "8E_UYBs102xX"
      },
      "execution_count": 230,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2011 = df_2011.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "WhlIQxxJkCSn"
      },
      "execution_count": 231,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2011.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wLW-qbJ8kXxd",
        "outputId": "01187d37-7cbc-4b74-986a-777eb9c79139"
      },
      "execution_count": 232,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 232
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2011 = new_2011.astype(float)"
      ],
      "metadata": {
        "id": "bnBR23Yk071U"
      },
      "execution_count": 233,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2012 = df_2012.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "79A3DdE1kZf3"
      },
      "execution_count": 234,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2012.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HU4TJbzEki_s",
        "outputId": "e403e471-3840-481b-b333-9624b6751fbc"
      },
      "execution_count": 235,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 235
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2012 = new_2012.astype(float)"
      ],
      "metadata": {
        "id": "SOAX7xon0_3K"
      },
      "execution_count": 236,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2013 = df_2013.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "c2pWUl4Eku58"
      },
      "execution_count": 237,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2013.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "33a85448-17b3-4e85-ef3b-8fbc52f539ac",
        "id": "7scHmVU2ku59"
      },
      "execution_count": 238,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 238
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2013 = new_2013.astype(float)"
      ],
      "metadata": {
        "id": "yj6iRoyy1ERI"
      },
      "execution_count": 239,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 2014 does not have pH Finish\n",
        "new_2014 = df_2014.loc[:, [('pH', 'Raw'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "nktzGEigk4VZ"
      },
      "execution_count": 240,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2014.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "869e383b-980d-4967-9a4b-ef46ef013fab",
        "id": "jU9PuWm-k4VZ"
      },
      "execution_count": 241,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Raw       0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 241
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2014 = new_2014.astype(float)"
      ],
      "metadata": {
        "id": "k22v_CaP1Hq-"
      },
      "execution_count": 242,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2015 = df_2015.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "qSVov6uLlOpq"
      },
      "execution_count": 243,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2015.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eb9a3faf-6a10-4243-e7c8-58fdedceb17c",
        "id": "xIuBq25MlOpr"
      },
      "execution_count": 244,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 244
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2015 = new_2015.astype(float)"
      ],
      "metadata": {
        "id": "64fuUATq1K1_"
      },
      "execution_count": 245,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2019 = df_2019.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "BJOxVjzTla7k"
      },
      "execution_count": 246,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2019.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f36177b3-224e-416f-da83-5b4277c4ec0c",
        "id": "6TJwh2QOla7l"
      },
      "execution_count": 247,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 247
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2019 = new_2019.astype(float)"
      ],
      "metadata": {
        "id": "dTLE87sl2p8F"
      },
      "execution_count": 248,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2020 = df_2020.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "x_40eJwSl6d1"
      },
      "execution_count": 249,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2020.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2de044d6-d710-4803-ad14-70a2c52625c0",
        "id": "7jptePdvl6d1"
      },
      "execution_count": 250,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 250
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2020 = new_2020.astype(float)"
      ],
      "metadata": {
        "id": "gTbItfWB2uEV"
      },
      "execution_count": 251,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2021 = df_2021.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "H_rd4FmtmgWm"
      },
      "execution_count": 252,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2021.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9454fa4d-02c9-4b5b-d66a-d59b9227632b",
        "id": "D4v8LhxFmgWm"
      },
      "execution_count": 253,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 253
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2021 = new_2021.astype(float)"
      ],
      "metadata": {
        "id": "wt4waFYn4sgW"
      },
      "execution_count": 254,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2022 = df_2022.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "pmvi9JUnmr5o"
      },
      "execution_count": 255,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2022.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "43c265c8-2bab-46ba-cb92-13e8a08a9f40",
        "id": "pEJzOLfnmr5o"
      },
      "execution_count": 256,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 256
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2022 = new_2022.astype(float)"
      ],
      "metadata": {
        "id": "mjCiY1Rg4vse"
      },
      "execution_count": 257,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2023 = df_2023.loc[:, [('pH', 'Finish'),('Chlorine','Free'),('Turbidity','Finish'),('Conductivity','Finish'),('Alkalinity','Finish'),('Temperature','Finish'),('Colour','Raw T')]]"
      ],
      "metadata": {
        "id": "jRy0CvsLnEX5"
      },
      "execution_count": 258,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new_2023.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "89c35b23-9bf5-4b6c-feeb-509607db0435",
        "id": "TmLEd7n8nEX5"
      },
      "execution_count": 259,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pH            Finish    0\n",
              "Chlorine      Free      0\n",
              "Turbidity     Finish    0\n",
              "Conductivity  Finish    0\n",
              "Alkalinity    Finish    0\n",
              "Temperature   Finish    0\n",
              "Colour        Raw T     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 259
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_2023 = new_2023.astype(float)"
      ],
      "metadata": {
        "id": "GVVWL4sC4zI0"
      },
      "execution_count": 260,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Relationships**"
      ],
      "metadata": {
        "id": "DBgtYJX7QTgJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2009"
      ],
      "metadata": {
        "id": "8p60jA4V7M-5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2009[('pH', 'Finish')].corr(new_2009[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "rP5lcgdNzUfM"
      },
      "execution_count": 261,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vgwBdEjU49oq",
        "outputId": "621dd16b-df2e-449a-b0df-4ac9a36c876e"
      },
      "execution_count": 262,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.010376972906305605\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2009[('pH', 'Finish')], new_2009[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "iLmZAmbc493o",
        "outputId": "f14ec86c-a847-4c30-93b3-fe6086aa5ea2"
      },
      "execution_count": 263,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2009"
      ],
      "metadata": {
        "id": "i6YdPvmR7Xfy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2009[('Chlorine', 'Free')].corr(new_2009[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "DNzqnn1v6IMg"
      },
      "execution_count": 264,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "666ccd11-3d5a-44a3-e48c-e2bee4859d32",
        "id": "GjNH79RB6IMg"
      },
      "execution_count": 265,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.03218317925335264\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2009[('Chlorine', 'Free')], new_2009[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "fd85c17e-cb0c-45dc-e27a-f012bc351f9e",
        "id": "dDEdTqEO6IMh"
      },
      "execution_count": 266,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2009"
      ],
      "metadata": {
        "id": "aW5DJLbZ711O"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2009[('Turbidity', 'Finish')].corr(new_2009[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "TXd_rxLU6b_H"
      },
      "execution_count": 267,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "13db75ba-e360-4ad9-98f8-7791a3b7d430",
        "id": "M202uhmB6b_I"
      },
      "execution_count": 268,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.012598918111881964\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2009[('Turbidity', 'Finish')], new_2009[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "08a21b08-61cb-4fe2-e51b-ba9a951c368c",
        "id": "uAn9x_R06b_I"
      },
      "execution_count": 269,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2009"
      ],
      "metadata": {
        "id": "1I1Vt69j774E"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2009[('Conductivity', 'Finish')].corr(new_2009[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "Eorb265x66CI"
      },
      "execution_count": 270,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "61f9e415-f927-47c0-a158-141eea3b4e14",
        "id": "1mcfptxT66CI"
      },
      "execution_count": 271,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.6099556872775597\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2009[('Conductivity', 'Finish')], new_2009[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "07961d4d-c18c-4bcc-8633-ea8350427458",
        "id": "2ZQHPRSs66CJ"
      },
      "execution_count": 272,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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G75q0/xlmQZ1SEZEhCWoGV9Sj6n2Yvvll1/QqFEjbN68GbfccovXyyxduhTPPPMMioqKFN8P92Ij8s2smwZrae3BfExf84PolIvZje2dihvSEv2edyWbCXvz1sguGPpbjypXUjaQDfaGrf62/eHrJXjCdi+24uJiAEBiou90ZGlpKVJSUmC329GtWze89tpraN++vejly8vLUV7++5taSUmJOgMmClF6ZLCMTmqG7dFb0rBmX77qHbi1lt7Ohl4tGvg97/7q5KQGTWKZKD3q8PzxtwKSrxdzMk0GyW6346677kJRURG2bt0qernMzEzk5OSgU6dOKC4uxt/+9jds2bIFP/zwA6699lqv15k+fTpmzJhR4/fMIBGREv4yBq4Zh+Pny/Dm+pyAi5C1fCO3xVmx7cX+sj7QxR6DqXe0xcyvDwecAWJWhrxRM4NkmgDp8ccfx3/+8x9s3bpVNNDxprKyEm3btkVGRgZmzpzp9TLeMkhNmzZlgEREivmbdnHl7cNejmf6t8K8DTmKrmexWLxmvFwtUlj8L/YYOPYTBLxngKQWVMt5jCk8hF2ANGHCBKxevRpbtmxBWlqa7Ovfc889qF27NlasWCHp8qxBIqJg8/ywv1hWgVe+8l3T5JptWXeoQFaQ5ZoVWnswHy9+fqBG76WEupGYfXdHTTIyzACRFsImQBIEAU8++SS++OILfPfdd2jVqpXs26iqqkL79u0xZMgQvPHGG5KuwwCJiIygyi74rWlyzbZImboTy9JU2QVsP1aIzNxCAAJ6NU9CT5VbInhiBojUFjYB0hNPPIHly5dj9erVaN26tfP38fHxqFOnujnbQw89hGuuuQazZs0CALzyyivo2bMnWrZsiaKiIsydOxerVq3Cnj170K5dO0n3ywCJiIxEabaFWRoKN2Gzim3hwoUAgNtuu83t90uWLMHo0aMBACdPnkRExO/9Li9evIhx48ahoKAA9evXR/fu3fG///1PcnBERGQ0SldBcfUUkXKGziDphRkkIiIi81Hz89vQW40QERER6YEBEhEREZEHBkhEREREHhggEREREXlggERERETkgQESERERkQcGSEREREQeGCAREREReWCAREREROTB0FuN6MXRXLykpETnkRAREZFUjs9tNTYJYYDkxaVLlwAATZs21XkkREREJFdhYSHi4+MDug3uxeaF3W7H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/NoLJLVFxvDiiy8KmzdvFvLy8oT9+/cLL774omCxWIRvv/1WOHr0qPDKK68Iu3fvFvLy8oTVq1cLzZs3F2655Ra9h62Y5xTUY489JjRr1kzYuHGjsHv3bqFXr141Uudm4np8Zj9/zz33nPDdd98JeXl5wrZt24T09HQhKSlJOHfunCAI5j53vo7N7OdNEARh586dQu3atYW//vWvQk5OjvDRRx8JdevWFZYtW+a8zOzZs4WEhARh9erVwv79+4WhQ4cKaWlpwpUrV3QcuTT+ju/SpUvCpEmThMzMTCEvL09Yv3690K1bN6FVq1bC1atXdR69f1VVVUKzZs2EyZMn1/ibmV93DmLHp+ZrjwFSCBgzZoyQkpIiREVFCQ0bNhT69+8vfPvtt4IgVNe43HLLLUJiYqJgtVqFli1bCs8//7xQXFys86iV8wyQrly5IjzxxBNC/fr1hbp16wrDhw8X8vPz9RtggFyPz+zn77777hOSk5OFqKgo4ZprrhHuu+8+tzoAM587X8dm9vPm8OWXXwodOnQQrFar0KZNG+Hdd991+7vdbhemTp0qNG7cWLBarUL//v2FI0eO6DRa+Xwd3+XLl4Xbb79daNiwoRAZGSmkpKQI48aNEwoKCnQcsXT//e9/BQBez4eZX3cOYsen5mvPIgiCoCi3RURERBSiWINERERE5IEBEhEREZEHBkhEREREHhggEREREXlggERERETkgQESERERkQcGSEREREQeGCAREREReWCARERBddttt+GZZ57R/H4sFgtWrVol+fKpqamYN2+eZuPxZvTo0Rg2bJis68g5LrmPARH9jgESUZgqKCjAk08+iebNm8NqtaJp06a488473TaxNIPp06ejS5cuNX6fn5+PwYMHS76dXbt24dFHH3X+rFZwMX36dFgslhr/1q9fj7feegtLly6VdXtyj4uIlKmt9wCIKPiOHz+O3r17IyEhAXPnzkXHjh1RWVmJ//73vxg/fjx+/PFHvYcYMJvNJuvyDRs21GgkQPv27bF+/Xq33yUmJiIqKkr2bck9LiJShhkkojD0xBNPwGKxYOfOnRgxYgSuu+46tG/fHhMnTsT27dsBACdPnsTQoUNRr149xMXF4d5778XZs2edt+HI3Pz73/9Gamoq4uPjMXLkSFy6dMl5mbKyMjz00EOoV68ekpOT8fe//73GWLxlahISEtwyK6dPn0ZGRgYSExMRExOD66+/Hjt27MDSpUsxY8YM7Nu3z5mZcVzP9XZvuukmTJ482e0+fvnlF0RGRmLLli0A3KfYUlNTAQDDhw+HxWJBamoqjh8/joiICOzevdvtdubNm4eUlBTY7XbRx7t27dqw2Wxu/6KiompMsd1222146qmn8MILLyAxMRE2mw3Tp08XfbwqKiowYcIEJCcnIzo6GikpKZg1a5bb5c+fP4/hw4ejbt26aNWqFdasWSM6TiL6HQMkojBz4cIFrF27FuPHj0dMTEyNvyckJMBut2Po0KG4cOECNm/ejHXr1uHYsWO477773C6bm5uLVatW4auvvsJXX32FzZs3Y/bs2c6/P//889i8eTNWr16Nb7/9Ft999x2ysrJkjbe0tBS33norfv75Z6xZswb79u3DCy+8ALvdjvvuuw/PPfcc2rdvj/z8fOTn59cYIwCMGjUKK1euhOve3B9//DGaNGmCm2++ucbld+3aBQBYsmQJ8vPzsWvXLqSmpiI9PR1Llixxu+ySJUswevRoRESo83b64YcfIiYmBjt27MDrr7+OV155BevWrfN62bfffhtr1qzBJ598giNHjuCjjz5yBncOM2bMwL333ov9+/djyJAhGDVqFC5cuKDKWIlCGafYiMLM0aNHIQgC2rRpI3qZDRs24MCBA8jLy0PTpk0BAP/617/Qvn177Nq1CzfccAMAwG63Y+nSpYiNjQUAPPjgg9iwYQP++te/orS0FO+//z6WLVuG/v37A6j+8L/22mtljXf58uX45ZdfsGvXLiQmJgIAWrZs6fx7vXr1nBkaMffeey+eeeYZbN261RkQLV++HBkZGbBYLDUu75huS0hIcLvdRx55BI899hjeeOMNWK1WZGVl4cCBA1i9erXPYzhw4ADq1avn/Lldu3bYuXOn18t26tQJ06ZNAwC0atUK8+fPx4YNGzBgwIAalz158iRatWqFPn36wGKxICUlpcZlRo8ejYyMDADAa6+9hrfffhs7d+7EoEGDfI6ZKNwxg0QUZlyzKGIOHz6Mpk2bOoMjoPpDPSEhAYcPH3b+LjU11RkcAUBycjLOnTsHoDq7VFFRgR49ejj/npiYiNatW8sab3Z2Nrp27eoMjpRo2LAhbr/9dnz00UcAgLy8PGRmZmLUqFGybmfYsGGoVasWvvjiCwDA0qVL0bdvX6SmpuLkyZOoV6+e899rr73mvF7r1q2RnZ3t/PfZZ5+J3kenTp3cfnZ9TD2NHj0a2dnZaN26NZ566il8++23Pm8vJiYGcXFxordHRL9jgEQUZlq1agWLxaJKIXZkZKTbzxaLxWctjjcWi6VG0FZZWen8f506dZQP0MWoUaPwf//3f6isrMTy5cvRsWNHdOzYUdZtREVF4aGHHsKSJUtQUVGB5cuXY8yYMQCAJk2auAVBjz32mNv1WrZs6fznGnh6kvOYduvWDXl5eZg5cyauXLmCe++9F3/84x8V3x4R/Y4BElGYSUxMxMCBA7FgwQKUlZXV+HtRURHatm2LU6dO4dSpU87fHzp0CEVFRWjXrp2k+2nRogUiIyOxY8cO5+8uXryIn376ye1yDRs2RH5+vvPnnJwcXL582flzp06dkJ2dLVo3ExUVhaqqKr/jGTp0KK5evYq1a9di+fLlfrNHkZGRXm/3kUcewfr16/HOO+/g119/xd133w2guhDbNQgKJOMlR1xcHO677z4sXrwYH3/8MT777DPWGBGpgAESURhasGABqqqqcOONN+Kzzz5DTk4ODh8+jLfffhu9evVCeno6OnbsiFGjRiErKws7d+7EQw89hFtvvRXXX3+9pPuoV68exo4di+effx4bN27EwYMHvRYz9+vXD/Pnz8fevXuxe/duPPbYY25Zj4yMDNhsNgwbNgzbtm3DsWPH8NlnnyEzMxNA9TRfXl4esrOzcf78eZSXl3sdT0xMDIYNG4apU6fi8OHDzrocMampqdiwYQMKCgpw8eJF5+/btm2Lnj17YvLkycjIyFAtw6XEG2+8gRUrVuDHH3/ETz/9hE8//RQ2mw0JCQm6jYkoVDBAIgpDzZs3R1ZWFvr27YvnnnsOHTp0wIABA7BhwwYsXLgQFosFq1evRv369XHLLbcgPT0dzZs3x8cffyzrfubOnYubb74Zd955J9LT09GnTx90797d7TJ///vf0bRpU9x88824//77MWnSJNStW9f596ioKHz77bdo1KgRhgwZgo4dO2L27NmoVasWAGDEiBEYNGgQ+vbti4YNG2LFihWi4xk1ahT27duHm2++Gc2aNfM59r///e9Yt24dmjZtiq5du7r9bezYsaioqHBOr+klNjYWr7/+Oq6//nrccMMNOH78OL755hvVVtQRhTOLIKVik4iInGbOnIlPP/0U+/fv13soRKQRfs0gIpKotLQUBw8exPz58/Hkk0/qPRwi0hADJCIiiSZMmIDu3bvjtttu0316jYi0xSk2IiIiIg/MIBERERF5YIBERERE5IEBEhEREZEHBkhEREREHhggEREREXlggERERETkgQESERERkQcGSEREREQe/j9enAik4ohQ1AAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2010"
      ],
      "metadata": {
        "id": "OVHXJATn8kB-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2010[('pH', 'Finish')].corr(new_2010[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "l4ZCvxrr8kB-"
      },
      "execution_count": 273,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7673e70d-ce7d-49ac-a1e3-3c4ac9714731",
        "id": "mxz1W27v8kB-"
      },
      "execution_count": 274,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.06037717621270172\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2010[('pH', 'Finish')], new_2010[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "d7478d9c-4e09-4c65-8718-6bacd5431819",
        "id": "BDSOErSW8kB-"
      },
      "execution_count": 275,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2010"
      ],
      "metadata": {
        "id": "NyeKif8Q8ydI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2010[('Chlorine', 'Free')].corr(new_2010[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "jK_4RiNu8ydI"
      },
      "execution_count": 276,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "15dd816b-101f-4198-ea5d-f96afc85a588",
        "id": "iu_4Kx4r8ydI"
      },
      "execution_count": 277,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.35308340906031804\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2010[('Chlorine', 'Free')], new_2010[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "3126e5e2-6118-4695-c9fc-1b6e2c99c6a3",
        "id": "CcAEolyF8ydJ"
      },
      "execution_count": 278,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2010"
      ],
      "metadata": {
        "id": "gvi5Lomu8fmj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2010[('Turbidity', 'Finish')].corr(new_2010[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "SSd0PKaf8fmk"
      },
      "execution_count": 279,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "93a471f0-bc36-4b00-fa3e-c82893d65efe",
        "id": "CzIZJbrn8fmk"
      },
      "execution_count": 280,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.1350980734743615\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2010[('Turbidity', 'Finish')], new_2010[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "83f51ad6-1f51-4245-8149-b61d87205ca2",
        "id": "_GbHaXeJ8fmk"
      },
      "execution_count": 281,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2010"
      ],
      "metadata": {
        "id": "kLQFN3UC9LTB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2010[('Conductivity', 'Finish')].corr(new_2010[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "S6RQjTM49LTB"
      },
      "execution_count": 282,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e8996527-0b00-43e6-d280-da038bdd989e",
        "id": "OK12HHlp9LTB"
      },
      "execution_count": 283,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.004582002158488375\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2010[('Conductivity', 'Finish')], new_2010[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "070d84d8-9846-4833-9ac2-aedb7451f3c1",
        "id": "QynRQfW59LTC"
      },
      "execution_count": 284,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2011"
      ],
      "metadata": {
        "id": "QhSIX2Zn_9bt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2011[('pH', 'Finish')].corr(new_2011[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "zp7lSn1t_9bu"
      },
      "execution_count": 285,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8cc32c4d-fcc9-46da-ff47-4f07fb7d751e",
        "id": "haJXUgmQ_9bu"
      },
      "execution_count": 286,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.27407929331591285\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2011[('pH', 'Finish')], new_2011[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "2e3451e2-3d8d-452a-f5d5-ead5e13ae434",
        "id": "Njvw1Qmn_9bu"
      },
      "execution_count": 287,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2011"
      ],
      "metadata": {
        "id": "l05Jopzj_9bu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2011[('Chlorine', 'Free')].corr(new_2011[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "CkGJnYga_9bu"
      },
      "execution_count": 288,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cc9a52ec-ca30-412b-97a3-ced64c11a9f8",
        "id": "E9jmefnn_9bv"
      },
      "execution_count": 289,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.22722270888211918\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2011[('Chlorine', 'Free')], new_2011[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "1b7cbb7c-a205-43ba-e48a-bd953d30b2d5",
        "id": "EJYfKDT5_9bv"
      },
      "execution_count": 290,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2011"
      ],
      "metadata": {
        "id": "A_KOIHdr_9bv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2011[('Turbidity', 'Finish')].corr(new_2011[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "mK5LRBgO_9bv"
      },
      "execution_count": 291,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1864ce71-9080-49f8-ea0a-b4f6b3eb44bf",
        "id": "GVoiHKLZ_9bw"
      },
      "execution_count": 292,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.057453079941270704\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2011[('Turbidity', 'Finish')], new_2011[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "9220d817-7970-4b50-a056-9bf7e6a83d1d",
        "id": "VFF31L3v_9bw"
      },
      "execution_count": 293,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2011"
      ],
      "metadata": {
        "id": "V02u27pt_9bw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2011[('Conductivity', 'Finish')].corr(new_2011[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "fp1y18Y6_9bw"
      },
      "execution_count": 294,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1cb062a0-79f9-4548-c865-f4e888136d40",
        "id": "nPS5zgg9_9bx"
      },
      "execution_count": 295,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.4985021555253185\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2011[('Conductivity', 'Finish')], new_2011[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "a8e1192e-3550-4214-f8d8-819abfa2f375",
        "id": "Thrf9fhL_9bx"
      },
      "execution_count": 296,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2012"
      ],
      "metadata": {
        "id": "hP7g0mowR-3h"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2012[('pH', 'Finish')].corr(new_2012[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "xSEOlgDGR-3h"
      },
      "execution_count": 327,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7e5f6ea6-1bde-4272-bfb7-a7da80d4f2b0",
        "id": "vjWdR984R-3h"
      },
      "execution_count": 328,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.1733009711749478\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2012[('pH', 'Finish')], new_2012[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "930f10db-e6cb-4bb8-da09-1436e6e0cc4f",
        "id": "uNgi23ykR-3i"
      },
      "execution_count": 329,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2012"
      ],
      "metadata": {
        "id": "FtVFwKBHR-3i"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2012[('Chlorine', 'Free')].corr(new_2012[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "4Ls-Hp4DR-3i"
      },
      "execution_count": 330,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "33a51864-2d65-42f3-e542-e7b9b60012f5",
        "id": "j5yUV9TiR-3i"
      },
      "execution_count": 331,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.4275016062640874\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2012[('Chlorine', 'Free')], new_2012[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ccaa46a1-3004-4170-b633-8d486ca8f591",
        "id": "5S2SN58XR-3i"
      },
      "execution_count": 332,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2012"
      ],
      "metadata": {
        "id": "_ABijIanR-3i"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2012[('Turbidity', 'Finish')].corr(new_2012[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "ySy0vISOR-3j"
      },
      "execution_count": 333,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "542e3578-7954-4f76-cc4b-112e74ad1d3c",
        "id": "cRgwkNPTR-3j"
      },
      "execution_count": 334,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.5237753367912037\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2012[('Turbidity', 'Finish')], new_2012[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "13ae074c-a772-4e04-9fa0-d02d987149c1",
        "id": "wArUN7zkR-3j"
      },
      "execution_count": 335,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2012"
      ],
      "metadata": {
        "id": "0aSkM-8DR-3j"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2012[('Conductivity', 'Finish')].corr(new_2012[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "OoSA-M6BR-3j"
      },
      "execution_count": 339,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2b7e7728-74d9-4422-c548-4d039bc7ec12",
        "id": "9tQnHNFCR-3k"
      },
      "execution_count": 340,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.39385267326102463\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2012[('Conductivity', 'Finish')], new_2012[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "5fc696be-56a2-498c-d635-3211ea5d298f",
        "id": "U3m3dp0TR-3k"
      },
      "execution_count": 341,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2013"
      ],
      "metadata": {
        "id": "767u5PElTX1J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2013[('pH', 'Finish')].corr(new_2013[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "WoJDKldgTX1J"
      },
      "execution_count": 336,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d902eb79-1dea-4b04-d557-2b3f94c54a05",
        "id": "SIF09PGNTX1K"
      },
      "execution_count": 337,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.08087641756114909\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2013[('pH', 'Finish')], new_2013[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "0321f346-4389-438b-f938-932804c3a1e2",
        "id": "fMdtquo5TX1K"
      },
      "execution_count": 338,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAkAAAAGwCAYAAABB4NqyAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABrzUlEQVR4nO3deXxTVfo/8E9aukBpU8qWFpGWfV9VqKCDCLI4IOo4WnEAdZgRqYKICzODtKJW9Du4DAgjKvgbBlBHRNw6Q4FBwVZkqVIRbEtZlBal0JYWWqDJ74/OLUmam5yb3Jt7k3zerxevF03vTU7StPfJc57zHJPNZrOBiIiIKISE6T0AIiIiIn9jAEREREQhhwEQERERhRwGQERERBRyGAARERFRyGEARERERCGHARARERGFnGZ6D8CIrFYrTpw4gdjYWJhMJr2HQ0RERAJsNhvOnj2LpKQkhIW5z/EwAHLhxIkT6Nixo97DICIiIi8cP34cV1xxhdtjGAC5EBsbC6DhBYyLi9N5NERERCSiqqoKHTt2bLyOu6NrAJSVlYUNGzbg4MGDaN68Oa699losXrwYPXr0aDymtrYWjz76KNavX4+6ujqMHTsWr732Gtq3by97vzabDQsXLsTKlStRUVGB4cOHY/ny5ejWrZvQuKRpr7i4OAZAREREAUakfEXXIujt27dj1qxZyMvLw+bNm3Hx4kXcdNNNqKmpaTzmkUcewUcffYT33nsP27dvx4kTJ3Dbbbe5vd8XXngBr776KlasWIGvvvoKMTExGDt2LGpra7V+SkRERBQATEbaDPWXX35Bu3btsH37dlx//fWorKxE27ZtsXbtWvzmN78BABw8eBC9evVCbm4uhg0b1uQ+bDYbkpKS8Oijj2LevHkAgMrKSrRv3x6rV6/GXXfd5XEcVVVVMJvNqKysZAaIiIgoQCi5fhtqGXxlZSUAICEhAQCwZ88eXLx4EaNHj248pmfPnrjyyiuRm5vr8j5KSkpQVlbmcI7ZbMbQoUNlz6mrq0NVVZXDPyIiIgpehgmArFYr5syZg+HDh6Nv374AgLKyMkRGRiI+Pt7h2Pbt26OsrMzl/Ui3O9cIuTsnKysLZrO58R9XgBEREQU3wwRAs2bNQkFBAdavX+/3x54/fz4qKysb/x0/ftzvYyAiIiL/MUQAlJ6ejo8//hjbtm1zWLdvsVhw4cIFVFRUOBx/8uRJWCwWl/cl3X7y5Enhc6KiohpXfHHlFxERUfDTNQCy2WxIT0/HBx98gK1btyIlJcXh+0OGDEFERAS2bNnSeNuhQ4dw7NgxpKamurzPlJQUWCwWh3Oqqqrw1VdfyZ5DREREoUXXAGjWrFlYs2YN1q5di9jYWJSVlaGsrAznz58H0FC8fP/992Pu3LnYtm0b9uzZg3vvvRepqakOK8B69uyJDz74AEDD2v85c+bgmWeewaZNm7B//35MnToVSUlJmDx5sh5Pk4iIiAxG10aIy5cvBwCMHDnS4fZVq1Zh+vTpAICXXnoJYWFhuP322x0aIdo7dOhQ4woyAHj88cdRU1ODP/zhD6ioqMCIESOQnZ2N6OhoTZ8PERERBQZD9QEyCvYBIiI91Ftt2FVyGj+frUW72Ghck5KA8DDxDZn1Pp9Ib0qu39wLjIjIALILSpH50QGUVl7uWJ9ojsbCib0xrm+i4c8nCjTMALnADBCRuphZcC+7oBQz1+yF8x9j6RVafs9gt0GIkvNd/Sw2Hyjz6fHJd/wdUQczQERkGMwsuFdvtSHzowNNgg8AsKEhCMn86ADG9La4vCAqOX/zgbImPwtLXDRqL9V7/fjkO/6O6MMQfYCIKDhJmQn7P+wAUFZZi5lr9iK7oFSnkRnHrpLTTV4fezYApZW12FVy2qfzl24tcv2zqKpFxbmLXj8++Ya/I/phAEREmvCUmQAaMgv11tCehf/5rHzwInKc6Pmrdpa4/FmIEn0cEsffEX0xACIiTfia2QgV7WLF2nPIHSd6fsV5+SyPL49P3uPviL4YABGRJnzNbISKa1ISkGiOhlx1jQkN9SDXpCR4fX588wivx+fp8cl7/B3RFwMgItKEr5mNUBEeZsLCib0BoEkQI329cGJv2QJkkfPvHZ7s1dhEHp+8x98RfTEAIiIh9VYbcovL8WH+T8gtLvdYl+BrZiOUjOubiOX3DIbF7Hihs5ijmyxhd/Uz8HR++qhuHn8WrVpEwBIX5fbxSV38HdEX+wC5wD5ARI68XaYrrXAB4FDoyf4yrrnrBSPyM/B0vqefxZjeFvai8TP+jqhLyfWbAZALDICILlOjSV8g9ThRqyGdmo3tfP0Z2N9PIP0sQgV/LuphAOQjBkBEDeqtNoxYvFV2pYoJDdMkO54Y5fbiHihdbtW6EKl5QVPrZ2B/f4Hwswg1/Lmog52giUgVSpbppnZpLXtceJjJ7ff14HzBOVNzAbPWNs2ySA3plGRZXGVrpPtZdvcgtIqJEr7Qif4M8orLERZm8ni/RvxZeCPYAoZg+bkEEgZARCQrWJfpusrQhJng83YQIo3t0tftg339uKfMkOhrO2vtXodeP8E8hcIpI1IDV4ERkaxgXKYrt/WAu0Vtog3pPGVrXD2Opy0PvG106Ol+la7q05s03kUffYcHuHUEqYAZICKSJS3TLausdZnVkOpPAmWZrrsMjQhP2RhvMmGeMkyefgbe3G+gZVBcjdcZN24lpZgBIiJZvjbpMxqRDI07nrIx3mbC3GWY3P0MvLlfT5tvvpJTaKiskNx4XeHWEeoLtEyhEswAEZFbUpM950/gFgNnDOR4W6skmunyNlvjaXxyPwOl9ytSo/RSzg+Nt+mdFbpwyYo/fVCg+LUMtJo0owq0TKFSDICIyKNxfRODokmeNxkaJZkuKVszc81emOC6qNrb8Uk/g6VbixyCFBFtYqKQW1yOnUW/KAqgSitr8cCavbh/eDJG97b49WeeXVCKP32wH6drlG/iqldNWjCtTPO0mjEYGjSyD5AL7ANEFJyknjruMjRhJihapeWK3CozudkDJf2U3PUEcnW/5hYRiG4WjrIq37Minl4LtQIAuYuvJ0p7IqkpmLIlavee8if2ASIicsFdhkb6M740TVmfHldcZcykPkOQeVyRDJOSGibp+VWcuwhAeRbFFblP//VWG5ZuLcKqnSU+L8X3tlBd7nX0R1Ym2LIlavX/MjoGQEQUUvxV0+Sqsd3yMN8eV0ltS/u4KNResv4vAFKH/UqrUT3bY8/RM9h8oAzv7v4R1XWXmhzvKQBwFZx4W6ju6nX0R1bGU12V/co0AAExRRas/b+cMQAiopCjV02Tr48rWtuy4OZe6JkYhylvfOXLcF2SPv0Py8rxWJ/jzVL8CX0tisZz3/BkjHFRn+SvrIxotmTp1kKs//p4QEyRBWP/L1cYABFRSNJr6wFfHle0L9P04Sn4+NsTPo3TE9HiZFfTJZ9+ewIPrt3X5Niyylq8ufOI0P22jonEs7f2lc0siWZlPAWfnqbQRLMgL+UUNrnNXTCmZ0F1sPX/ksMAiIgoQIjUMEk1MEb7dC4FCp9+W4r0dU2DH0B81VyrFs2QO/9GRDZz3cpOrRoWkSk0X15nuWBM74JqJe+zQMZGiESkqWBupKYHqYbJYna88FrM0Q6ZBOlTvFEuUW1aRuHlzT/gwbV73W47ImL6tSmywQ+gTg2Lp4aR0pYbvr7Ozs0bRR9Xa6Lvs0DGDBARaUbvT7JG5+00h0gtka89iQB4fZ6zVi0i8OA/96DyfNNCaW8kt4lx+31fa1iUTqG5y5aIvn4/n61VdepODcHS/0sOM0BEpAmjfJI1quyCUoxYvBVpK/Mwe30+0lbmYcTirS5fF1dZNKmW6JaBHZDapbXLi5Lcp3gRj4zu3uS81jGRiu8HAM6cu6ha8AN4DnA8ZWVMaAjE5WpYlEyhAe6zJY+M7u52rJJ2sdGKH9cfRN5ngYoZICJSndE+yRqNkhVKvmbR7D/F5xwow4Z9P+GMm6XxUoFr+qiuSB/V1eHT/5BOrfCrF7cJb/XRqkUEbLamO9V7S7T41tcaFm+m0OSyJQCw/utjQgXFooXrgb783CiYASIi1Rnxk6xRiOzHlfnRAdRbbapl0aRP8Qsm9sHuv4zBI6O7uTzOOThw/vQf2SxMaGPW+OYReGR0NyxNG6xa8AM0vD6ixbe+1LAomUKzz87tKjmNa1ISHLIlSjYUDpXl50bBDBARqS5UGql5QzQ4zCsu1ySLFh5mwuzR3dHDEutVU0a5RpIJMRG4dWAHhz3DPsz/SXhcIuJbRDQ2FBThbQ2L6DLwMzV1TbaMcJWdE22+GSrLz42CARARqY6fZOWJBn25h09puh2BLwWuoueq/fOtOHdR8fP1pu+SyBTapAGJmLV2n3CjRV8L14Np+blRcAqMiFTnaxFqMBMPCsQucr5k0XwpcBU595qUBFjiPD9fE4B7r+0k9Lj+yhq6m0JbdvdgbPqmVGga054vhevBtPzcKJgBIiLVGfmTrJ4ddgHxaY7ULq2xdFuRx/szchYtPMyEjEm98cCavW6PW3Z3wwa0q7486vE+/fl85bI2Wm8WGuzLz42CARARacJfm44qYYS+RKLB4bDOrXWpB5ECxLLK8zhdcwEJLaPQLjYKsAGnaupkL8ZygeW4volYcc9gPLlhf5ONWeNbROD52/phXN9E1Ftthqx/cTWFJpqFKqvyPTtH2jHZbDa2ZXVSVVUFs9mMyspKxMXF6T0cooCmd8ZFIrf0XBqJv6cXRIIxacyA60BJ7TG7GpMrrsbpqSgaAPIOlyO3uByADamd22CY0zSQv5+vt3KLy5G2Ms/jcQkxEXju1n6GGHOoUHL91jUA+vzzz/Hiiy9iz549KC0txQcffIDJkydfHpzJ9R/JF154AY899pjL72VkZCAzM9Phth49euDgwYPC42IARBRc6q22Jqt17EnZhR1PjBIOzpQEdnLHityHv7JWcgGiK/YBCQCP5yXERGLywCSXu7a7GofeWTpPpPeTSD8kE4wTuIUCJddvXafAampqMGDAANx333247bbbmny/tNSxx8Vnn32G+++/H7fffrvb++3Tpw9ycnIav27WjDN9RKFM7ZoNJRdpT8d6ejx/1IO4603kirQMP2PTdwBMHs87XXMBb+08grd2HvEYzARC/YvSbUZCuemnkekaGYwfPx7jx4+X/b7F4tjv4cMPP8QNN9yAzp07u73fZs2aNTnXnbq6OtTV1TV+XVVVJXwuERmfmn2JlHZxFj3WHa3rQTwFiK7YAJRV1Xk8zlmpwHMPhPoXqcbtTx8U4HTNBdnjfC2IJu0EzDL4kydP4pNPPsH999/v8djCwkIkJSWhc+fOmDJlCo4dO+b2+KysLJjN5sZ/HTt2VGvYRGQAavUlUtLFWcmxetOjIaVRnrsvxvVNxIKbewkdG4pNP40uYAKgt99+G7GxsS6nyuwNHToUq1evRnZ2NpYvX46SkhJcd911OHv2rOw58+fPR2VlZeO/48ePqz18ItKRWn2JlEylBdJ2IP5eSm+k5+4ri7m50HFGblcQqgKmOOatt97ClClTEB3t/k1kP6XWv39/DB06FJ06dcK7774rmz2KiopCVFSUquMlIuNQqy+RFlt8GCEzIAWISqbBTADax0UBMOFkldjmqM6M8Nx9xe0rAldAZIC++OILHDp0CL///e8VnxsfH4/u3bujqMhzQzEiCl5qdNhVMpUWSNuB2G/YqUTGpD7ImKT8PIkRnruvlGx2SsYSEBmgN998E0OGDMGAAQMUn1tdXY3i4mL87ne/02BkRBRIfF1hpPTTfiBlBsb1TcRrdw9C+rp98FSaY4mLQsakPo1Bo6uGl+4Y7bn7yohNP8kzXQOg6upqh8xMSUkJ8vPzkZCQgCuvvBJAw4qs9957D3/9619d3seNN96IW2+9Fenp6QCAefPmYeLEiejUqRNOnDiBhQsXIjw8HGlpado/ISIyPF9WGCmdStNyOxAtGkxO6J+EpTDhwbXyW1c8Mro70kd1dXgs+8By84EybMw/IbsyKlizIoGwfJ8c6RoA7d69GzfccEPj13PnzgUATJs2DatXrwYArF+/HjabTTaAKS4uxqlTpxq//vHHH5GWloby8nK0bdsWI0aMQF5eHtq2bavdEyGikKHk075WmQEtmwVO6J+IFWFNx+x8/64CsNQurZHapTX+fHNv7Co5jZwDZfgg/yecrrm8BUYwZ0UCYfk+XcatMFxgJ2gi8kSNTtDe8NeWHu7GrCQAM8pWKBQaAmYrDKNiAERERqTFlh5KGW1PNSJ7Sq7fAbEKjIiIlPUh0kIgNXck8oQBEBFRgNCiD5ESegdgRGpiAEREFCD07i2kdwBGpKaA6ANERBQq3BUN6911WO8AjEhNDICIiAzC0+oqtbb08JbeARiRmjgFRkRkANLqKucam7LKWsxcsxfZBaUA1NnSw1tKtn2ot9qQW1yOD/N/Qm5xOQujyXC4DN4FLoMnIn/yZnm7nv11PGWqtGzUSOQO+wD5iAEQEflTbnE50lbmeTxu3Yxhhuk0LBeAsU8Q6UnJ9Zs1QEREOgvE1VWutn3w1CfIhIY+QWN6W9gNmnTHGiAiIp35c3WVlrU57BNEgYQZICIinflrdZXWtTmBmMmi0MUMEBGRzpSsrvKW6CozX6iZyeIqMtIaM0BERAYgLW93ztBYVMjQ+Ks2R61MFleRkT8wACIiMohxfRMxprcFeYfLkVtcDsCG1M5tMMzHlV9KanN8WWWmRqNGuVVkUqaKq8hILQyAiMhQ9OxvoxZfnsPmA2UO2Y+l24p9zn5sPlAmdJwatTm+ZLKMsoosGN6D5BkDICIyjGCY+vDlOWiR/ai32vDu7h+FjlVrDy8pk6U0iPBXpsqdYHgPkhgWQRORIfijSFdrvjwHT9kPoCH7obQYeOnWQlTXXfJ4XEJMhKp7eEl9gm4Z2AGpXVoLZVD0XkUWDO9BEscAiIh0p9XF3598fQ5a9NCpt9qwaucRoWNvHdhB92kePXeb9/TzswF48v392Fl0ytDvQxLHAIiIdBcMDfR8fQ5aZD92lZxGxfmLQseO7m0Rvl+tSKvI5MIwExqmo7TYbd7Tzw8AKs5fxJQ3vsKIxVuZDQoCDICISHd6T32owdfnoEX2Q3RM8S3Unf7ylj/6IclR8t7ilFhwYABERLrTe+pDjYZ7vj4HLbIfomO699oU3ae/JNIqMovZcewWc7SmS+CVvLcap8Q27MfOQk6JBSquAiMi3flrKwhnaq748fU5qNFDR+mYACAmMhzpo7oK36c/eLuKzBcir5WzinMXMeXNr7hKLEAxA0REutNj6kPtFT9qPAe1sx/SmNxd0Gsu1Av3CZL4Y5sKb1aR+fp4cj8/TzglFphMNpuNuTsnVVVVMJvNqKysRFxcnN7DIQoZ/urBUm+1YcTirbJFr1K2ZscToxRfeNV4Dmo24qu32jDkmc2oOOe6GFrpcw32Pjmunp8IX94zpB4l128GQC4wACLSjz+68OYWlyNtZZ7H49bNGOZVwz0jdRJW87nKNWqUnlmwbFNRb7Uhr7gcs9buFV5FJ/H2PUPqUHL9Zg0QERmKNPWhJa1XnfnjOYhS67kaZZsKfwgPM2F4tzZ4/vZ+mLlmLwAI1wUZeaUiOWINEBGFHD1XnSmhRq2NWs81GHo1KSVXk+WO3u8ZEscMEBGFHL1WnSmhVq2NWs9Vi6yZL1OF/ppmlFak5R0ux6x/yk+JGeE9Q8owACKigOTLBVCLJedqUnNTVLWeq9pZM183jfVnIXZ4mAnDu8pPiRnhPUPKsQjaBRZBExlXvdWGpVsLsWrnEYdP495cAI24okmrFWq+PldpXJ4ySSLjkgvwJI+M7o70UV1d3o/ehdhGfM/QZVwF5iMGQETGlF1Qiic37He5pNvbC6CRVmwB2q5Q8/W5SsEH4DoDIvLaewrwJJa4KGRM6uNwf1q2L1DCaO8ZuoyrwIgo6HjKGni7EslIK7YA72ttRC7Kvj5XqSjYOQNiUZABEdl0FADKquqaTPcpKcTW8mdqtPcMeYcBEBEZnrsl2Pb8dQHUkje1Nv6clvF1mwqly8TtA9pg2DSXjIMBEBEZnmjWQBIIF0C5jI3SVVtqFkwrGad9gCkt1xcJiJRuOmof0AZK+wIKDLr2Afr8888xceJEJCUlwWQyYePGjQ7fnz59Okwmk8O/cePGebzfZcuWITk5GdHR0Rg6dCh27dql0TMgIn9QGtAY/QKYXVCKEYu3Im1lHmavz0fayjyMWLy1cS+pu66+Ujb4AS6vNvLUnBBoyKB4u1eXp3GKHmPP0673rkg/f0/nmtCQ+eJSdBKhawBUU1ODAQMGYNmyZbLHjBs3DqWlpY3/1q1b5/Y+33nnHcydOxcLFy7E3r17MWDAAIwdOxY///yz2sMnIj9REtCIXABFGgz60oTQ3bnuNmF9YM1eDHlmM17K+cHl/Tpviqplc0KRzWK92VDWftNRUdLPX49Ncyl46ToFNn78eIwfP97tMVFRUbBYLML3uWTJEsyYMQP33nsvAGDFihX45JNP8NZbb+HJJ5/0abxEpA9P00L2PF0ARepltOpRM6a3xWPGRm7T0kdGd0P6qG4Oz02rmhiRbS8yNn0HwOTV1hhSMXXGpgMoq5Ifm6vmgmoUYhMBAVAD9N///hft2rVDq1atMGrUKDzzzDNo3dp1ceOFCxewZ88ezJ8/v/G2sLAwjB49Grm5ubKPUVdXh7q6usavq6qq1HsCROQzd838JPEtIvD8bf3cXgBF6mUAeF1TI3f/pf879/bBHRTvMg40BALrvz6O9FHdHG73tibG04oxkcxSWVWd7PelY9wVpEvF1Eu3FuKlnMIm33eX0fG1EJsIMHgANG7cONx2221ISUlBcXEx/vSnP2H8+PHIzc1FeHh4k+NPnTqF+vp6tG/f3uH29u3b4+DBg7KPk5WVhczMTNXHT0TqkfvkH98iAvdemyLbOE8iupmnzWYTymoAcLgAD+nUyu1KNRuAf+39Sei5ujrXVTDhzTYXItktNYvI3d1XeJgJs0d3Rw9LrOKMDpeik68MHQDdddddjf/v168f+vfvjy5duuC///0vbrzxRtUeZ/78+Zg7d27j11VVVejYsaNq909E6vDlk79ovYw70jFLtxZh/dfHHI5PiInE6ZoLok/FK87BhJQZe+B/zQntucqgiK4YU7OIXOS+mNEhPRg6AHLWuXNntGnTBkVFRS4DoDZt2iA8PBwnT550uP3kyZNu64iioqIQFRWl+niJSH3efvJXM6vhqkhZ6+AHkA8m4ltENKkdMjtNCYpmwMb0tghlltrHRQEw4WSVOhvKMqND/qbrKjClfvzxR5SXlyMx0XVKNDIyEkOGDMGWLVsab7NardiyZQtSU1P9NUwi+h9fVlKpzehL492RW94tZXRcFU5XOt2mZMWYp9VWNgAT+iUi7ZorZY8BuCKLjE3XDFB1dTWKiooavy4pKUF+fj4SEhKQkJCAzMxM3H777bBYLCguLsbjjz+Orl27YuzYsY3n3Hjjjbj11luRnp4OAJg7dy6mTZuGq666Ctdccw1efvll1NTUNK4KIyL/MNqmkaL1MjabDSer6jyuNlNbqxYROHPuovCO7SLdsX3poixXc2UyATYb8NbOIwAask+A4+o1rsiiQKBrALR7927ccMMNjV9LdTjTpk3D8uXL8e233+Ltt99GRUUFkpKScNNNN2HRokUO01XFxcU4depU49d33nknfvnlFzz11FMoKyvDwIEDkZ2d3aQwmoi0o3V3Ym+4W0lmH2QAaNzw018W3NwL04enYPOBMuFiYKX7YnmzYsy+NifnQBne3HkEzkm8ynMXYUPDMv3kNjGs36GAwd3gXeBu8KGDuzqr78IlK4Zl5eB0jet+Nv7asVuOSGbq029PIH3dviYXe7W5ei3k3pPOt5dVnscj737j8TFeuWsgbhnYoXEndU8ZMFc/F6Pswk7kCXeDJxJgtCmaYJBdUIo/fVAgG/wA+m9YKrLiqFVMlFfBjwkNU0JnZJoZOrOh6dSWq2JgV+/VhJhIocdw7qLsKQPmKoAxyi7sRGoKqCJoIrV408Kf3JNeU9HVUGpvWKqk4FoKMm4Z2AGpXVo3ueh7MzbpHrJu64cV9wxGolmdomu59+oZD6+zq8Jpqa7H4jQ25y02nHEXdgpGzABRyFGyHJjpfDEiBbnO1FyVpXY2z5uxOdfqjOltQV5xOWat3YuK8/LTge7eayKbncrdL6BeF2Xuwk7BiAEQhRym89Xn6TW1p7Q/jCdaFFyL9sH5628H4lR1ncsgIjzMhLAwk2zwA3h+r4m+rgkxEQ7Tjmp3Ufam4zSR0TEAopDDdL76lL5WavWH0SqbJ1IvkzGpD4Z3beP2fnx9r4mev+DXfWCJi9asmN+X+iEio2INEIUcpvPVJ/paJcRE+LQE3rnOJ+9wuXA2Tylv62Xs+fpeEz3fEhfttqZJDWq8HkRGwgwQhRym89Xn6TUFgNYxkcidfyMim3n3uctVnU988wihc73N5rmqlxnSqRX2HD2DD/N/8pht8fW9ZrT3KvfsomDCDBCFHE9t/gGm85Vy95pKpqYme/2ayq2EcldfY8+XbJ79irHK8xfwqxe3IW1lHmavz0fayjyMWLxVdtWgr+81kS0pxvdtCEj8tc2IpxV0RIGCjRBdYCPE0MA+QOpz9Zra8+b19dSEzx01G/TJFVtL9+puGsjX95qr88NMcOhVxPcukbLrNwMgFxgAhQ52glZfvdWGpVsL8VJOYZPviQQLznKLy5G2Mk/xOLx5LDlqdEL29b0mnS9tSeFqDIA6z5coULETNJEgpcuBScz6r4+7vN2blVmi9TvxzSMcpsTU3JBTjdYJvr7XwsNMuCYlAXPfzZcdA3tYEYljAEREqlK7z5Jo/c6yuwcj7H+7nqudzTNK6wT2sCJSDwMgIlKV2sGC6EqoYRoW5BqldYJRAjGiYMBVYESkKrWDBSOs2pOCMHec993SwpFTNULHsYcVkWcMgIhIVVKwIBeOuNqk0xO9m/CFh5kwaYD7x5g0IFHTICy7oNRlYbk9b15bolDl1RSY1WpFUVERfv75Z1itVofvXX/99aoMjIgCk1bbJujZhK/easOmb1z3+pFs+qYUj4/rpcl4pC0/RLCHFZEYxQFQXl4e7r77bhw9ehTOK+hNJhPq6+tVGxwRBSYpY+Pcu8bXlVl6rdoT2ZRUy+Jj0U1R54zuziXwRIIUB0APPPAArrrqKnzyySdITEyEycRPGkTUVDBtm6B38bHo/Sa3aaHJ4xMFI8UBUGFhIf71r3+ha9euWoyHiIJIsPRZ0nsVmN6PTxSMFBdBDx06FEVFRVqMhYjIkLQo7A6kxycKRkIZoG+//bbx/w899BAeffRRlJWVoV+/foiIcNyNuX///uqOkIhIZ1oVdgfK4xMFI6G9wMLCwmAymZoUPTfeyf++FyxF0NwLjIhc0XsDXb0fn8joVN8M9ejRo8IP3qlTJ+FjjYoBEBHJ0XsDXb0fn8jIVN8MNRiCGiIiNehd2K334xMFC8VF0G+//TY++eSTxq8ff/xxxMfH49prr1WUKSIiCiX1Vhtyi8vxYf5PyC0uR73VdfJd9Dh/jMUoAm28FBiEpsDs9ejRA8uXL8eoUaOQm5uLG2+8ES+//DI+/vhjNGvWDBs2bNBqrH7DKTAiUpNo7Y6SGh9vp8KyC0qRsek7lFXVNd5miYtCxqQ+hqwjEnlNOC1IEtVrgOy1aNECBw8exJVXXoknnngCpaWl+H//7//hu+++w8iRI/HLL7/4NHgjYABERGrJLijFzDV7m+xkL12epb3MRI+T7tObYujsglI8sGav7PdX+GFfNU/sg5kjp2pc7n9m/5oAYGE4NVJy/VY8BdayZUuUl5cDAP7zn/9gzJgxAIDo6GicP3/ei+ESEQUnaQ8vV58ypdsyPzqAC5esQsfVW22NgZLz1hhllbWYuWYvsgtc71lWb7XhyQ373Y73yQ37VZ1eUjp1lV1QihGLtyJtZR5mr8+X3fxVupcnN+z36rUgArzoBD1mzBj8/ve/x6BBg/DDDz9gwoQJAIDvvvsOycnJao+PiChgedrDy4aGPcT+kXtE6Li8w+VuAyUTGgKlMb0tTaaA8orLUXHuotvxVpy7iLzicgzv1sbtcSKUZqnkMmBybP8br9z33L0WRIAXGaBly5YhNTUVv/zyC95//320bt2wGmHPnj1IS0tTfYBERIFKdA+vo6fPCR2XW1wuFCit3lnSJNuSe/iU0GP886sjQse5ozRL5S5T5i3ptdhVclrFe6VgojgDFB8fj6VLlza5PTMzU5UBEREFC9G9uToliG5iKhYiLPrke7yxo8Qp2yKWBdleeAr1VpvXWRNP036uMjOiu917Q6sNainwCWWAvv32W1it1sb/u/tHREQNRPfw+l1qstBxqZ3Fp6acsy2ivYNq6up9ypqITvvZP4aWQQo3iCU5QhmggQMHoqysDO3atcPAgQObbIsRbFthEBGpQXQPr8hmYULHDevSGonmaJRV1nrMBTlnW4Z1bo0WkeE4d8Hz32hfAhLRc+2PUxqkSK9RfIsIVJ676PK1MAGwcINYckMoA1RSUoK2bds2/v/w4cMoKSlp/Cd9ffjwYU0HS0SkFa2a7Y3rm4jl9wyGxex4kbeYox2WtoscJwVUgNiEln22JTzMhD9e30VozL5kTUTPtT/OU6bMmcUcjRX3DMbzt/UD0PS14AaxJEJxH6BQwD5ARKHFH5uMijbrEznO1XjdeeWugbhlYAfUW20Y8sxm2dVTUtZkxxOjfKoBGrF4q2yWSu4xpMJpwHUGbM7o7khu06LJa8INYsmepo0QAaCwsBDbtm3Dzz//3FgbJHnqqaeU3p3hMAAiCh1KGhBqSWk343qrDat3lmDRJ997vO91M4Y11gDJNUNU8/l6CmbkHsPbYIadoEmiaQC0cuVKzJw5E23atIHFYoHJdPlNZjKZsHevfJdRZ59//jlefPFF7NmzB6Wlpfjggw8wefJkAMDFixfxl7/8BZ9++ikOHz4Ms9mM0aNH4/nnn0dSUpLsfWZkZDRZkdajRw8cPHhQeFwMgIhCg5StkMukqJEREeHLhd/bbIvWWRMGM6QH1XeDt/fMM8/g2WefxRNPPOH1ACU1NTUYMGAA7rvvPtx2220O3zt37hz27t2LBQsWYMCAAThz5gxmz56NSZMmYffu3W7vt0+fPsjJyWn8ulkzxU+TiEKAkhVLWu3ALpeBklZxyWVLpEBhQl8L3tx5pMn33dXBjOubiDG9LZoGGt4+Bne7J39RHBmcOXMGd9xxhyoPPn78eIwfP97l98xmMzZv3uxw29KlS3HNNdfg2LFjuPLKK2Xvt1mzZrBYLKqMkYgCm7uMgjcrltQemzednV1lV8JMgH3dtsVDtsUfgQaDGTIyxQHQHXfcgf/85z944IEHtBiPW5WVlTCZTIiPj3d7XGFhIZKSkhAdHY3U1FRkZWW5DZjq6upQV3d5Z+Sqqiq1hkxEOvI0DePNiiU1eZOBkssYScUM9w1PxpjeFk4dEXmgOADq2rUrFixYgLy8PPTr1w8REREO33/44YdVG5y92tpaPPHEE0hLS3M7rzd06FCsXr0aPXr0QGlpKTIzM3HdddehoKAAsbGxLs/JyspiJ2uDY10AKSUytTSqZ/smmRNnYSZgSKdWmoxRaQZKJGP0WUEZ/nyz/5d/83eUAo3iAOj1119Hy5YtsX37dmzfvt3heyaTSZMA6OLFi/jtb38Lm82G5cuXuz3Wfkqtf//+GDp0KDp16oR3330X999/v8tz5s+fj7lz5zZ+XVVVhY4dO6ozePIZl7mSUqJTS7FREW6DH6AhONpz9IwmUzlKM1BGqFlyhb+jFIgUB0AlJSVajEOWFPwcPXoUW7duVbwqKz4+Ht27d0dRUZHsMVFRUYiKivJ1qKQBbwtEKbSJBgqiG4QqrQESzYZIDQA9reKSuhnrXbPkipLfUWaJyEgMvTxKCn6kvkPSzvNKVFdXo7i4GL/73e80GCFpydsCUSLxAEDsfaOkBkhJNkR0qwzp/a13zZIzJb+jmw+UMUtEhiIUAM2dOxeLFi1CTEyMw1SRK0uWLBF+8OrqaofMTElJCfLz85GQkIDExET85je/wd69e/Hxxx+jvr4eZWVlAICEhARERkYCAG688UbceuutSE9PBwDMmzcPEydORKdOnXDixAksXLgQ4eHhSEtLEx4XGYNR0/1kfKIBQGqX1nh/74/CGRhPvMlYSltgOAcHrlZxKc0YifI2MyP6O7p0ayFezil0+7povSyfyJlQALRv3z5cvHix8f9y7Jsiiti9ezduuOGGxq+l4GratGnIyMjApk2bADRsxmpv27ZtGDlyJACguLgYp05dTmP/+OOPSEtLQ3l5Odq2bYsRI0YgLy+vcS8zChxGTPdTYBANFIZ1bq0oA+OOLxlL0Z45SjNGInyp3xH93Vu184jb1+XJDfuRsekAyqqYHSL/Ee4EffjwYaSkpCgOcgIRO0EbQ25xOdJW5nk8zr7NP5FEyXYMahTx+vP9KjfeBTf3QquYKOEsyqffnsCDa5t+qBXdFkP0OXvD31uRUHDQpBN0t27dUFpainbt2gEA7rzzTrz66qto3769b6MlkqFVup9Cg5KpJTU6I/szY+lqvGdqLmDRJ+JB3KffliJ9neuMvmiN3ZBOrTy2ETCZLvcoUoJ1fqQ14QDIOVH06aefIisrS/UBEUm0SPdTaFES2PjatVi07ujU2Tp8mP+Tz3Uu9uPNLijFrLXitUfZBaV4cK37fRtFauz2HD3jsY2AN8GPkjEQecvQq8CIlHyKJ3LFX9sxeMpYAg1NFe13b1ejzkVp7ZF0vCh3GSvRbFZ88whUnr8o+7r4MgYibwkHQCaTqUn9TyjUA5H+/LFxI5Gv3GUsJc7ZEjX6WSldLenpeGfuMluiWa97hyfj5ZxC2dfFk5+r1MmaEdlTNAU2ffr0xoaBtbW1eOCBBxATE+Nw3IYNG9QdIRG4qSIFBrmMpVydjBp1Lkprj3IOlAnfd6KHGjvROr30Ud3QwxLbNJMbF4XaS1ZUnLvodhzPfqpu1owIUBAATZs2zeHre+65R/XBEBEFOiljmXe4HLnF5fjxzDlszD8he7yvdS5KmiNmF5TizZ1HhO/bU42dkjo9uUzuC9nf4++fi+8wwC7wpBbhAGjVqlVajoOIKGi46nrsibd1LqK1R+Vna/HsZweF7jPMBCxNGyQUYCip03PO5NZbbdj0TanQmCRcHUZq8akIet26dZg0aVKTaTAiolAl1w3aE2+3r7DPwsix2oD09fnC97k0bTAm9BfPrnhbp6e0HknC1WGkhjBfTv7jH/+IkydPqjUWIqKA5m5FlhwTPNfaeDKubyKW3T0YaiRD7huerCj4kUjZnVsGdkBql9ZCmRlfV3dxdRj5wqcASLCJNBFRSFCa0VCzn1WrmEiPPXlEjOlt8f1OBPm6aau/Nn2l4ORTAERERJcpzUhYzNGqFfP6mg1RIxOllFS/pDT002OsFHx8qgH67LPP0KFDB7XGQkQU0EQzEuk3dMXwrm1U7WmjJBtilM7qIr2TnLELPKnFqwzQpUuXkJOTg++++w4XLlwAAJw4cQLV1dWqDo6IKJB4ymhImYtHxnQXrpNR+7Ffu3swLGbHYEnNTJRS0ioy5zHJ0XOsFFyEd4OXHD16FOPGjcOxY8dQV1eHH374AZ07d8bs2bNRV1eHFStWaDVWv+Fu8ETkLSW70Ov12PVWm+E6q9uPqU1MFGACTlXXoU3LKMAGnKqpM8xYybiUXL8VB0CTJ09GbGws3nzzTbRu3RrffPMNOnfujP/+97+YMWMGCgsLfRq8ETAAIiJfZBeUNumL468Oxno+NpHelFy/FdcAffHFF/jyyy8RGRnpcHtycjJ++uknpXdHRBR09Ny/jnvnEYlRHABZrVbU19c3uf3HH39EbGysKoMiIgp0eu5fx73ziDxTXAR900034eWXX2782mQyobq6GgsXLsSECRPUHBsRERGRJhTXAB0/fhzjxo2DzWZDYWEhrrrqKhQWFqJNmzb4/PPP0a5dO63G6jesASIiUocRC64peGlaBA00LIN/55138M0336C6uhqDBw/GlClT0Lx5c68HbSQMgIiIfOeqIDshJhK3DEzCFfHNkRATCYu5uUNQ5E3AxCCLJJoFQBcvXkTPnj3x8ccfo1evXj4P1KgYABER+UbJprDSKjUAilewcdUb2dM0A9ShQwfk5OQwACIiIpfqrTaMWLzVq53enbnrnyQXZMmdw0xR8NN0GfysWbOwePFivPHGG2jWzKedNIiIKAgp3RTWHRsaAprMjw5gTG+Lw1RZ5kcHXGaYXJ3DTBE5UxzBfP3119iyZQv+85//oF+/foiJiXH4/oYNG1QbHBEFNn7i9j8jvOa+bszqzAagtLIWu0pONy7v9xRk2Z9Tef6Cy0xRWWUtZq7Zy601QpTiACg+Ph633367FmMhoiDCT9z+Z5TXXMnGrErYB1aiQVZZVS1eyD4onCmi0KE4AFq1apUW4yCiICJXm2H0T9xGyJ54y0ivubQxa1llrVARtCj7wEo0yDpdXSecKWLzyNDCIh4iUpXS2gyjMEr2xBtGe83Dw0xYOLE3Zq7ZCxPgcxBkQsMu8NekJDTe5inIks5JiIl08d2m1J62I+NTHAClpKTAZJL/BTp8+LBPAyKiwCZam5FXXI6wMJMhsi1Gyp54Q0k9jHOWQ6us17i+iVh+z+AmQaVS0kgWTuztMC53QZb9OebmYgGQVtN2ZFyKA6A5c+Y4fH3x4kXs27cP2dnZeOyxx9QaFxEFKNFP0rPW7kXF+YuNX+uVbblwyYo/fbDfMNkTb4i+5s7HaZ31st+YdcX2Imz/4ZTHc+KbRzi8LyxuxiMXZNmfU2+1CWWK7LNLFBoUB0CzZ892efuyZcuwe/dunwdERIFN9JO0/UUO0Cfbkl1Qij99UIDTNRdlj/FXjYgvmRjR19z+OH9lvew3ZhUJgJbdPVhRZtA+yHJ1jmimyKjBLWlHtRqg8ePHY/78+SySJgpx3hbA+jvboqRTMaBtjYivmRjRehgpy6FHzdCQTq0QZgKsbl7wMBNwdUoCIpsp26fbPshyRSRTRKFH8W7wcv71r38hIYEpRKJQJ33iBi5/whZln23RkrsAQI5WNSJSIOZcJyNlYrILSj3eh7vX3FWWQ0nNkFr2HD3jNvgBGoKjPUfPqPaY9sb1TcSOJ0Zh3YxheOWugVg3Yxh2PDGKwU8IU5wBGjRokEMRtM1mQ1lZGX755Re89tprqg6OiAKT3Cdu5/oOOVqvyFHSqVjLGhE1MzFKshze1gz5Qo/HdOYpU0ShRXEAdMsttzgEQGFhYWjbti1GjhyJnj17qjo4IgpcrmozrDYbprzxlcdztV6Ro/Qiq1WNiC+rt1zxVA8j8aZmyFd6PCaRO4oDoIyMDA2GQUTByPkTt1FW5IheZBNiIvDcrf00mybRIisikuU4U1Pnth5Hi5+D0jolIq0prgEKDw/Hzz//3OT28vJyhIeHqzIoIgpOSmtVtCJdjN09SuuYSOTNH61pjYgeWZHsglLMWrvPYz2O2j8Ho/zsiSSKAyCbzfVvTV1dHSIjxRpOST7//HNMnDgRSUlJMJlM2LhxY5PHeuqpp5CYmIjmzZtj9OjRKCws9Hi/y5YtQ3JyMqKjozF06FDs2rVL0biISDtSrYrF7HhRt5ij/bYE3tPF2ATg2Vv7NlmNVG+1Ibe4HB/m/4Tc4nLUe4oiPPAUiJnQsBpMrayISPF3mKlhKboWPwcj/Oz1pvZ7iLwnPAX26quvAgBMJhPeeOMNtGzZsvF79fX1+PzzzxXXANXU1GDAgAG47777cNtttzX5/gsvvIBXX30Vb7/9NlJSUrBgwQKMHTsWBw4cQHS0609E77zzDubOnYsVK1Zg6NChePnllzF27FgcOnQI7dq1UzQ+ItKGaK2K1mNQsjRai6aB/u5RI1L8bbUBrQS3j/CGEX72egnk7VaCkckml9JxkpKSAgA4evQorrjiCofprsjISCQnJ+Ppp5/G0KFDvRuIyYQPPvgAkydPBtCQ/UlKSsKjjz6KefPmAQAqKyvRvn17rF69GnfddZfL+xk6dCiuvvpqLF26FABgtVrRsWNHPPTQQ3jyySddnlNXV4e6urrGr6uqqtCxY0dUVlYiLi7Oq+dDRIFBpAGhXM8g6Shfsxf+ujB+mP8TZq/P93jcK3cNxC0DO6j2uJJA3mzWV1q/h6hBVVUVzGaz0PVbOANUUlICALjhhhuwYcMGtGrVyrdRCjxeWVkZRo8e3Xib2WzG0KFDkZub6zIAunDhAvbs2YP58+c33hYWFobRo0cjNzdX9rGysrKQmZmp7hMgooDgqWjYH00D/ZUV0XMlVihnP4y2WS01UFwDtG3bNs2DHwAoKysDALRv397h9vbt2zd+z9mpU6dQX1+v6BwAmD9/PiorKxv/HT9+3MfRE5G/aF1ToXXTQGn8H397AgDw6/5JSO3SWpMLob9rjiRqNHsMZHo0niTPvNoK48cff8SmTZtw7NgxXLhwweF7S5YsUWVg/hQVFYWoqCi9h0FECvkjq6BlAz9/Z0X02BeL2Q9jNIGkphQHQFu2bMGkSZPQuXNnHDx4EH379sWRI0dgs9kwePBg1QZmsVgAACdPnkRi4uU/BCdPnsTAgQNdntOmTRuEh4fj5MmTDrefPHmy8f6IKDj4azNPraaN/DV+Z6I7qKs1Had2s0dXjF5bxCaQxqQ4AJo/fz7mzZuHzMxMxMbG4v3330e7du0wZcoUjBs3TrWBpaSkwGKxYMuWLY0BT1VVFb766ivMnDnT5TmRkZEYMmQItmzZ0lhMbbVasWXLFqSnp6s2NiLSlz+zClo08NM7K+Ku5kjtrJTW2Y9AqC0S2SC4VYsINoH0M8U1QN9//z2mTp0KAGjWrBnOnz+Pli1b4umnn8bixYsV3Vd1dTXy8/ORn58PoKHwOT8/H8eOHYPJZMKcOXPwzDPPYNOmTdi/fz+mTp2KpKSkxuAGAG688cbGFV8AMHfuXKxcuRJvv/02vv/+e8ycORM1NTW49957lT5VIjIoNWsqPNUQadHAzwg1IVLx9y0DOzTWHMnV6pRW1uKBNXux6KPvFNdZaZn9CJTaIuk95O5VO3PuIjYfkK9VJfUpzgDFxMQ01v0kJiaiuLgYffr0AdBQhKzE7t27ccMNNzR+PXfuXADAtGnTsHr1ajz++OOoqanBH/7wB1RUVGDEiBHIzs526AFUXFzs8Lh33nknfvnlFzz11FMoKyvDwIEDkZ2d3aQwmogCl1pZBdHsgdKeQf4av5pEmiS+ufMI3tx5RFGGZUinVkiIicDpGteb4Hq7BYbeWTSlxvS2IL5FBCrOyb8ORhpvKFAcAA0bNgw7duxAr169MGHCBDz66KPYv38/NmzYgGHDhim6r5EjR8p2lgYaegM9/fTTePrpp2WPOXLkSJPb0tPTOeVFFMTUyCoorcFRc6m6EWtCRJokSkTrlKQA013wA7jOoHmq6/FHbZGadpWclg1+AOONNxQoDoCWLFmC6upqAEBmZiaqq6vxzjvvoFu3bgG5AoyIAo+vdTneZg9ENhr1x/i1oCTbJJJhkQsw7fnSddvXLJq/C6eNmPULdYoCoPr6evz444/o378/gIbpsBUrVmgyMCIiOb4u59Y7e6DHcnRPlGab3L1GItNprWMisf2xG5rstyaamfMli6ZH4bQRs36hTlERdHh4OG666SacOXNGq/EQEQnxZWNNI3waN9rGoJ6aJMpx9RqJTKeV11zAnqOO15J6qw1Pbtgvm5kDGrJO9Vab100d9Sqc1qsJJclTPAXWt29fHD58uHFvMCIivXhbl2OUT+NG2hjUXVbKnSOnaprc5m2AuXRroaI6GaVZND0Lp42Y9Qt1ipfBP/PMM5g3bx4+/vhjlJaWoqqqyuEfEZE/uVrO7YmRPo17M36tyGWl3Hkpp7BJ1sSbALPeasOqnUeEzpMCJ6VZNL3bDxgt6xfqFGeAJkyYAACYNGkSTKbLv6g2mw0mkwn19fXqjY6ISAP8NC7PPiu1+UAZ3vIQlLjKmnhT5L2r5DQqzstnf+zZB05KsmhGmfo0StYv1CkOgLZt26bFOIiI/Ert3j7BRMpKpXZpDXPzSLyU84Pssa6Kob0JMEWDjngXHZNFV+cZZepTrdWE5BvFAdCvfvUrLcZBROR3/DTuWXKbFkLHOQcwSgPMNi3FNqSenprs9c/HiO0HSD9e7Qb/xRdf4O9//zsOHz6M9957Dx06dMA//vEPpKSkYMSIEWqPkYhIM/w07p4vWRMlAaa1Xqzs+upk74MTTn2SPcVF0O+//z7Gjh2L5s2bY+/evairqwMAVFZW4rnnnlN9gEREpB9fC8ZFiryzC0rx0Pp9QuM5VVMnOHLXWIhMEsUZoGeeeQYrVqzA1KlTsX79+sbbhw8fjmeeeUbVwRERkb60zpqIdIy2p0Z9Dqc+CfAiADp06BCuv/76JrebzWZUVFSoMSYiIjIQrQrGRTpGS9Suz+HUJykOgCwWC4qKipCcnOxw+44dO9C5c2e1xkVERAaiRdZEyQasAOtzSF2KA6AZM2Zg9uzZeOutt2AymXDixAnk5uZi3rx5WLBggRZjJCIiA1A7ayK89L15BJ6/vR/rc0hVigOgJ598ElarFTfeeCPOnTuH66+/HlFRUZg3bx4eeughLcZIRERBSLSeZ9mUwRjetY3Go6FQY7LZbKK1Zw4uXLiAoqIiVFdXo3fv3mjZsqXaY9NNVVUVzGYzKisrERcXp/dwiIiCUr3VhhGLt3rsy7PjiVGc+iIhSq7fipfBSyIjIxEbG4vExMSgCn6IiMg/pBVmAJoss2dfHtKa4gDo0qVLWLBgAcxmM5KTk5GcnAyz2Yy//OUvuHhRbB8XIiI91FttyC0ux4f5PyG3uBz1Vq8S4H7hr7Hq/Zoo7cuj93gpeCiuAXrooYewYcMGvPDCC0hNTQUA5ObmIiMjA+Xl5Vi+fLnqgyQi8lV2QWmTZdyJBt33y19jNcprIrrCzCjjpeCguAbIbDZj/fr1GD9+vMPtn376KdLS0lBZWanqAPXAGiCi4CLXbE+6vBqpA7C/xhpIrwmg/njrrTY2QgxCSq7fijNAUVFRTXoAAUBKSgoiIyOV3h0RkabcNduzoeECmvnRAYzpbdH9AuivsQbSawKoP15mkgjwogYoPT0dixYtatwDDADq6urw7LPPIj09XdXBERH5ylOzPRuA0spa7Co57b9ByfDXWAPpNQHEx7t6Z4lDbZCreiEpk+R8f2WVtZi5Zi+yC0o1fjZkFIozQPv27cOWLVtwxRVXYMCAAQCAb775BhcuXMCNN96I2267rfHYDRs2qDdSIiIviDbbEz1OS/4aayC9JoD4OBZ98n3j/+NbRAAAKs5dXpxjiYtC7SVrwGS+SFuKA6D4+HjcfvvtDrd17NhRtQEREalJtNmeGpts+spfYw2U10Sq0yk8eVbxufaBj6Ssyv1O8vaZL+4TFvwUB0CrVq3SYhxERJq4JiUBieZoj8321Npk0xf+GmsgvCau6nT8xSiZL9KW140QiYgCQSA12/PXWI3+msjV6fjLqbN17DMUAhQvgy8vL8dTTz2Fbdu24eeff4bVanX4/unTxiia8wWXwRMFn0Ba+RNqfYDsSdtj6BX8hJkA+5hH79eDlFFy/VYcAE2YMAFFRUW4//770b59e5hMjp8Qpk2bpnzEBsMAiCg4BVLvF3+N1WivSW5xOdJW5un2+M6kV2LZ3YPRKibSMK8TuaZpABQbG4sdO3Y0rgALRgyAiIj08WH+T5i9Pl+z+zcBMLeIQHSzcJRVXc4yOWd+nDEzFBg0bYTYs2dPnD9/3uvBERERydFy5ZmUr3n+tn4OW2+cOlvnsITeFefgSOobZLSO2SROcRH0a6+9hj//+c/Yvn07ysvLUVVV5fCPiIjIW9IKNXeTS84zT/EtIhr7/khaubjNfoPV8DATUru0xi0DO6BNbJTicUrxUOZHB1goHaC86gNUVVWFUaNGOdxus9lgMplQX1+v2uCIiCi0SCvUZq7ZCxPgsExfinuWpg1Cq5goh3ocAE1qmVzd5qpux9usE/sGBTbFAdCUKVMQERGBtWvXuiyCJiIiYzJawbOccX0TsfyewcjY9J1D88L2cVHImNRHdsrJVRAiEph46ovkCfsGBSbFAVBBQQH27duHHj16aDEeIiLSgBGXvHsm16VIXe6yTiL07phN3lFcA3TVVVfh+PHjWoyFiIg0EGgbgErjtV+lBQAnq7Qbr5R1spgdgxl3CTITGoJII3QRJ+UUZ4AeeughzJ49G4899hj69euHiAjHIrP+/furNjgASE5OxtGjR5vc/uCDD2LZsmVNbl+9ejXuvfdeh9uioqJQW8sUJRGFnnqrDZkfHQiYDUC1Hq+7acBxfRMdVoe1i43GmZo6zFq7r/HxJUbomE2+URwA3XnnnQCA++67r/E2k8mkWRH0119/7XCfBQUFGDNmDO644w7Zc+Li4nDo0CGH8RERhaJdJafddlU2WiGvluMVmQaUVofZWx5manKexfDTh+SJ4gCopKREi3HIatu2rcPXzz//PLp06YJf/epXsueYTCZYLBath0ZEZHiiBbpGKeTVarzStJpzZkmkn4+rzJBRC8hJnOIAqFOnTlqMQ8iFCxewZs0azJ07121Wp7q6Gp06dYLVasXgwYPx3HPPoU+fPrLH19XVoa7u8koD9jMiomAhWqCrVSGv0pVnaozX+TGHdGrl87Saq8wQBTbFARAA/OMf/8CKFStQUlKC3NxcdOrUCS+//DJSUlJwyy23qD3GRhs3bkRFRQWmT58ue0yPHj3w1ltvoX///qisrMT//d//4dprr8V3332HK664wuU5WVlZyMzM1GjURET68bTE24SG6RwtCnm9WXnm63hdPWZCTARO11yUHafRpgHJPxSvAlu+fDnmzp2LCRMmoKKiorE+Jz4+Hi+//LLa43Pw5ptvYvz48UhKSpI9JjU1FVOnTsXAgQPxq1/9Chs2bEDbtm3x97//Xfac+fPno7KysvEfV7kRUbCQlngD8ovK1SzkrbfakFtcjkUffYcHvFh55st45Va7uQt+7BllGpD8Q3EA9Le//Q0rV67En//8Z4SHhzfeftVVV2H//v2qDs7e0aNHkZOTg9///veKzouIiMCgQYNQVFQke0xUVBTi4uIc/hERBQu5Jd72W0OoIbugFCMWb0Xayjy8ufOIy2NEtpDwZrzuVo+JYj+f0OJVEfSgQYOa3B4VFYWamhpVBuXKqlWr0K5dO9x8882Kzquvr8f+/fsxYcIEjUZGRGR8WhfyyhUZuyIy5aR0vJ5Wj7mj5TQgGZfiACglJQX5+flNiqGzs7PRq1cv1QZmz2q1YtWqVZg2bRqaNXMc8tSpU9GhQwdkZWUBAJ5++mkMGzYMXbt2RUVFBV588UUcPXpUceaIiCjYaFXI6232xdOUk5Lxbj5QpvDRG7CfT+gSDoCefvppzJs3D3PnzsWsWbNQW1sLm82GXbt2Yd26dcjKysIbb7yhySBzcnJw7Ngxh95DkmPHjiEs7PJM3pkzZzBjxgyUlZWhVatWGDJkCL788kv07t1bk7EREYU6b7Mvak05ZReU4i2ZKTdP4ltEIOu2fuznE4JMNptNKGgPDw9HaWkp2rVrh3/+85/IyMhAcXExACApKQmZmZm4//77NR2sv1RVVcFsNqOyspL1QEREHnyY/xNmr88XPl6actrxxCifsy71VhtGLN7q9fQXAKxQsQ6K9KXk+i2cAbKPk6ZMmYIpU6bg3LlzqK6uRrt27bwfLRERBTQlmRy1p5x8qf2RxmOkrUDIfxStAnNuPtiiRQsGP0REIU7q3SMSPqi98szXpev2BdkUWhQVQXfv3t3jvlqnT/NNREQUSqTePTPX7IUJTTcNtQG4b3gyxvS2qL6FhFp1ROwBFHoUBUCZmZkwm81ajYWIiAKU1LvH35uGStknX6bBAPYACkXCRdBhYWEoKysLiSkvFkETEXlH6d5fasguKMUDa/Z6da6aBdmkP02KoD1NfREREemxaei4vol4ZHQ3vJRTqOg89gAKbcJF0IKJIiIiIr9LH9UNljj301jOMY7aBdkUWIQzQFarVctxEBEReS08zISMSQ2F2EDTQmwAWJo2GK1iIv06PUfGpXgrDCIiIiPSqxCbAhMDICIiChpab/pKwYMBEBERBRU9CrEp8CjqBE1EREQUDJgBIiIyID366RCFEgZAREQGk11Q2qSQN5GFvESq4hQYEZGBZBeUYuaavU22diirrMXMNXuRXVCq08iIggsDICIig6i32pD50QG4ajsr3Zb50QHUW9mYlshXDICIiAxiV8lpt5t62gCUVtZiV8lp/w2KKEgxACIiMoifz4rtaC56HBHJYxE0EZFBtIt1v5eV0uNCDVfOkRIMgIiIDOKalAQkmqNRVlnrsg7IhIZtHa5JSfD30AyPK+dIKU6BERFpoN5qQ25xOT7M/wm5xeVChcvhYSYsnNgbwOUNPCXS1wsn9mZWwwlXzpE3mAEiIlKZL9kIbuipjOjKuTG9LQwcyQEDICIiFUnZCOcLspSNWH7PYKEgiBt6ivG0cg64vHKO+4ORPQZAREQq8ZSNMEE8G8ENPcWIrojbfKCMryc5YA0QEZFKQr2Pjzd1T74SXRH3Yf4JNpAkB8wAERGpJBT6+MgtNff3KixpHGWV5xEb3Qxnay+5Pb685oJfp8G4JN/4GAAREakkkPv4iFyw5YKcSQMS8frnJT7VPSnhahwicvw0DcYl+YHBZLPZmBN0UlVVBbPZjMrKSsTFxek9HCIKEPVWG0Ys3uqxj8+OJ0YJZwP8kUkQuWDLFXd74s1z9jRWb8YBAAkxEfj6z2M0zcTIjU96RLWDQXKk5PrNGiAiIpWo3ccnu6AUIxZvRdrKPMxen4+0lXkYsXirqn1tRHrouCvu9kTNuidfxgEAp2sualp/xc1sAwsDICIiHzgX/o7pbcHyewbDYnac5rKYoxV9+lfS3M/b4mPRC3Zecbni6SZnUt2TL4XSIkveRcehhVAvgg80rAEiIvKSu6mjHU+M8nrqqt5qQ8am74SW028+UOZ1vYnoBTv38CmhcbvTLjba59oYNYIXLeuvQqEIPpgwA0RE5AVPGRqp78wtAzsgtUtrRXUnS7cWoayqTvb7UmCydGuRT1tAiF+Iva+ZMaEhyDlTU+fzdhW+BC/SOLTcRy2Qi+BDEQMgIiKFtKz1yC4oxUs5Pwgdu2pn05VXSsYgeiFO7dIaieZoj2GQXN3Tgpt7Y9En3/v8ekmbxXo7Dq33UfM0Pn8EYSSOARARkUJa1Xo0TH0dED6+4vxFn8YgesEe1rm12+JuE4A/Xp8iW/fUKiZSldfLU5G5p3FovfqKm9kGFtYAEREppFWtx9KthSirEjsnvnmE2wBIZAzSBXvmmr0wAQ4ZGucLtsgmrY+P6+Wy7unD/J+EnpPI6+XLOPyBm9kGDgZAREQKaVHr0TD1VSh8/L3Dk4WO9zQGJRdsT5u0yu1fpvbr5e04/GVc30SM6tke/8g9gqOnz6FTQgv8LjUZkc046WIkhg6AMjIykJmZ6XBbjx49cPDgQdlz3nvvPSxYsABHjhxBt27dsHjxYkyYMEHroRJRCJGmjjw1PBSt9ZBqikQ9Mrob0kd1w/qvj6syBiW7z3sTXKj9enk7Dn9xtdrtjR0lzAAZjOHD0T59+qC0tLTx344dO2SP/fLLL5GWlob7778f+/btw+TJkzF58mQUFBT4ccREFOzUrvVQ0t8m0RyN9FHdVB+DFFB4s2pN5L5DpTZGSf8m0pfhA6BmzZrBYrE0/mvTpo3ssa+88grGjRuHxx57DL169cKiRYswePBgLF261I8jJqJQIE0dqVFwq6RWyD5QUHMMWguksXqLnaADi6GnwACgsLAQSUlJiI6ORmpqKrKysnDllVe6PDY3Nxdz5851uG3s2LHYuHGj28eoq6tDXd3lnhtVVVU+j5uIgp+SqSN3RGtfHhndvUmgoNYY/CGQxuoNJasDjTp9F0oMHQANHToUq1evRo8ePVBaWorMzExcd911KCgoQGxsbJPjy8rK0L59e4fb2rdvj7KyMrePk5WV1aTWiIhIhBq1KJ5qZADAEheF9FFdNRuDvwTSWJViJ+jAYugpsPHjx+OOO+5A//79MXbsWHz66aeoqKjAu+++q+rjzJ8/H5WVlY3/jh8/rur9E1Hg8GWvKm+J9LfJmNQnaDIlwYqdoAOLoTNAzuLj49G9e3cUFRW5/L7FYsHJkycdbjt58iQsFovb+42KikJUVJRq4ySiwOTrXlW+YP+YwKfFajfSjqEzQM6qq6tRXFyMxETXfwhSU1OxZcsWh9s2b96M1NRUfwyPiAKYEVbvjOubiB1PjMK6GcPwyl0DsW7GMOx4YhSDnwARSqvdgoGhA6B58+Zh+/btOHLkCL788kvceuutCA8PR1paGgBg6tSpmD9/fuPxs2fPRnZ2Nv7617/i4MGDyMjIwO7du5Genq7XUyCiAGCk1TtaLkcn7YXCardgYegpsB9//BFpaWkoLy9H27ZtMWLECOTl5aFt27YAgGPHjiEs7HIMd+2112Lt2rX4y1/+gj/96U/o1q0bNm7ciL59++r1FIgoAHD1Dqkp2Fe7BQuTzWZjQwInVVVVMJvNqKysRFxcnN7DISKNfZj/E2avz/d43Ct3DcQtAzs0ub3eauPFjsgAlFy/DZ0BIiLyB19W7+hZOE1E3jN0DRARkT9Iq3fkcjYmNAQ1zqt3jFA47S09lvsHK76WgYkZICIKedLqnZlr9sIEOBRDy63e8VQ4bUJD4fSY3hbDTYcxa6UevpaBixkgIiIoX72jpHDa39xlJDxlrT799oRfshnBkDUJ5AwgMQNERNRIyeodo2574C4jMaa3xeNy//R1+2Afi2iRzQiGrEkgZwCpAQOgEMPVKkTuie5VpeW2B97+nkoZCeeLspSRmDO6u9usFQA4J2Kkc9XoYVNvtWHp1kK8lFPY5HullbV4YM1eXJPcCvEtInF1cgKmXZuMyGZhqv7dUuu+2Doh8DEACiHB8KmLyCiUbnsgeuF19Xsa3zwC9w5PRvqobrIX63qrDRmbvnOb3Xn9i2JlT9Lu3IxN3zXJZog8J+mYzQfKsDH/BE7XXHD7eLuOnAEA/OfASTz76ffo2CoaFecv4WztpcZjEmIiMTQlAV3axiC1cxsME2wYqebfQKNmAEkc+wC5EIx9gOQ+GUp/MtihlEg56fcKcF04Lf1eiV545X5PJfEtIvD8bf1c/q6+klOIl3J+8PEZuffI6O6YPbobALFgwtUxWnD3ukjU/huYW1yOtJV5Ho9bN2MYM0B+pOT6zQDIhWALgOqtNoxYvFX2j5D0SXXHE6M4HUYO7D/ht2kZBdiAUzV1aBMTBZiAU9V1hphKVXtqV8n9eQoEPv32BB5cu6/Jec4X3nqrDcOf34Kyqjq3YzOh6cU6u6AUD/wvENPainsGA4DHYELuGC09MrobktvENPmZ+fo30NX7AQBGLN7qMQOo9t9VljG4x0aI5IBz1eQNJZ/e9ZxKVXtqV+n9uSuc/vTbUqSvaxr8AE0LZZduLfIY/Ejn2RfXSsW4/pKx6TsAJrdTbU++vx8mE/wa/ABwqC2y/5n58jfQ3ftBaesEJVwFOpsPlLGMQUXMALkQbBkgX9v8BxJ+OlKHp6kYZ2pPpSqpl1E6reHuvtWcJlGSlXlkdDeXhcHuSFMrolMxoUb6mc0Z3R3lNXX4f7lHPZ7j/DfQ0/th2d2DUfjzWby1swSV5y/XKFniovDUr3ujVUyUV3+LXNaBtYhAxbmLss+TZQwNmAEiB1quVjESFnmrw93yXjlqLvsV/Tl6swzZlyXi9vcHwG2ApjQrs2rnEeFjJTuLfsE1KQn4z4EyxeeGAunnqKQuyv5voKf3FwCkr9vbZNUcANResuJPGwscAhbRv0VyQZer4EcaC5fce4cBUAhQulolEHla/stPR03JZUI8TRfIUWMqVe7nWOri5yg6rZGxqQAmkwnn6i7h/b0/eb1EXLq/v20pxDu7j8sGUbtKTmNH4S+KXsOK864vbu4s3VaMNV8dk70wkjIJMREoq6pFbnE5rklJEPo9kOvd6OpnIr3Plt09SDYz5M2HD4BlDN5iABQCvGnzH0jYkEw5d5mQuktWn+7b22W/nv74O9e+iD7OP/KOuf2+9B5Z9WWJ0P29vKXpVFXZ/3rYyE1TaEXNxzIBaB8XBcCEsir519YEwNwiApXnLvq9xkdLp2su4pF38gE0/C5M6GtR9f5FGk16++FDwiX3ynArjBChtM1/IDHylgRG5Kl9/5FTNT7dv7dTqSJ//O1/jmpO2drgWzAhXc8CORtjA5AxqQ8yJvWW3RRWOq7if8FPsH6cKKusxZteTEuKcM4aSQ0gX8n5AWWV532670AoYzDSFijMAIUQJW3+AwkbkokTyZat23UMlrhonKxyPWUqx9epVNE//tJx16QkwBIXJbRySlR88whUng+uzIazVi0iUHfJinMX6h1uj28RAaDh78SyuwfL1rcAl7NA0c3C3WaLApX0tMNMgM3mn9VsL+UUIiEm0qtzA6WMwWh1mswAhRipzf8tAzsgVbB7qtGFSpG3GvKKyz1my8qq6pB2zZUAxD/hi0ylyn3yk27f/sMvQo8ldRIODzM1jlMt9w5PVvX+jOaR0d3x7OS+OO8U/ABA5bmLjRt4toqJlA1+gMtZoMW39sPkAUnaDVhnVhv8muny1CXblUApYzDixrHMAFHAC4UibzVkF5Tiyff3Cx2b3KYFlt8zWLgPkMXDpzi5T36TBiRi0zeliuoeElpG2Y0zRvg8d6T3SPqobuhhicWT7+/3qjDZyEwA1n99DDabzWO93OPjegrd5/S3vw7qbBkA3Dc8GZ8VlDm8R8NM8gXQWpHqN53rzDz97hmBUes0GQBRwAv2Im81KO3r0y42GqldWjtMmXrbCfrTb0vx4Nqm/XBKK2vx98/FCo/tWeIuZ/LUyOo5v0fG9U1EbHQEprzxlc/3bSRSLZzIMTsKxbJxwR78AMCY3hb8+ebeDqUDZ2rqMGvtPk2ff0JMBE7XNA10ArGMwajNeBkAUVCQirydswyB8OlIa0qW1jpny0R3Rpfz6bcnZDsheyPRKZPnKfsnwvk9Um+14avD5SqMVj0tIsNw7oJvq/OU2LD3J789llHZ/y64+j1YHmaSzZC2ahHRpLBeadZowa/7wBIX7TLQCbSl7kat02QAREEjWIu8faV0aa1a2bLsglKXe2B5Qy6TJ2X/lO6DNbG/BaN7W1x2gn5yw37DrebyZ/ADqJfZkaY5vcn06Ukkc2z/96asqhanq+uQEBMJi7l5Y5DumDW6gFlrxbOwlrjogAt05Bi1TpMBEAUVXzMWwUj0U1V88wg8f7v7HbVFqb0/lVqZvDATMOO6FMyf0LvJ95ROEwYaKaNhs9lwsqpO8+eZfkNXPDKmO8LDTBhwRXyT/jfecJ7iFuFNvY6rrKCrD1bS3xv770tcZ40GI2PTd25XLgZjzaJR6zQZABEFOdFPVcumDMbwrm1UeUxfG7pJ0m/oiuFd28hm8jwFWiYAsdHNMGlgElJax+B3qcmIbNZ08au3HXgDzcKJvWG12lTLzLkzvGubxp/ZhP5JWAqTy1owJRJiIlGucKWU1QYsuLkX2sRG4cipc1i365jD0v1EczQW3NxLtjuzp6XbSpZ2S1mjpVuLXG7REaw1i0at02QARBTkRD99DeusXubM17l8aUxSBkGOSHFlVe0l3NwvyW1mUK2AzajiW0Tg+dv6AQAWffK9po8l92l+Qv9ErAgTX1kIAObmzfDalCGNxfZllefxyLvfKB5Tm9ioxk1O00d1FZ4m97TFzh+uT8Hrn5co2oInPMyE2aO7oYelZUjVLBqxTpMBEFGQ0+PTly9z+UrGpFZx5eYg31B0WdpgnK27qPkUn6efnXOd3pFT5/Dy/zIhrsa1+Pb+DlnJ3GLvitPt34+i0+Qim6Gu/KJp8CN939PS7lCsWTTac2YAROSG3Nx/oPH3py+R1VlhJuD+ESn4+NtSr8ekRnFldkEp3tJo2wOJc+ApdV12t0rIeRm0t49rMUfj6pQE/OrFbZpP8Yn87JwDEFeZELkpJKWr/nypLfFlM1RAbGl3KNYsGuk5MwAikmG0tu2+8uenL3dZJ8nStEGY0D8JT47v5fWYfC2uVLtYW87f7hqE1rGONSaA4yqhIZ1aYc/RM41fl1XVNm7O6Q37bMyeo2c0meIzoaEu5y8392pc/aT0/aTkfSnyvrIfG+B9dlOtJdncgse4GACRz4IlS2LP09x/oG4g689PX3JZJ+cg0pcx+Tq9p6T2JyYyHBHNwhyyNtIyb1d1IJI/Xp+CXw90vV2E8/O2/9rb6R6JfTbmw3xt+vrYAJTXXIDF3Nyn95WS94Dc+8o5g+ZrdlOtJdncgse4GACRT4ItSwIYt217IPJH1smX6T3RT+fj+1qw9O7BAODyuQy6slWTx28dE4lFt/TFhP7e/R5I2S2lmZv4FhFYljYYw+z2+vPmIpwQE4H+Hcz47w+nPB7r7yyHq/eVcwbN1/eZ6DSu3GapwbicPdgwAPKjYMuUBGuWxKht2wOVr1knkd8bd4GW8/n2F8pTZ8V2kp+amuy2C6/SQE/kOYWHmbDg5l7CS9als5+/rR+Gd3NsZyA6Vfh/vxmAUzWXtzfZVXJaKADSI8vh6n2l5u+jSHZxxnUNq8CMtLSbxDEA8pNgy5QEc5bEqG3bQ5GS3xtXF0RX5ztPlbhrlKfkU7xooKfkObWKiXI+XZa7jJfoVKG3gVOwZjlEsouusn/BvJw9mDAA8oNgzJQEc5bEqG3bQ42vvzdy5zsHO+6CH6Dpp3j77I2STWG9eU6iQfaDI7sgtXNrfFVyGvt/qkR88wi0aRnlUJjszVShp6JjG4C7ru7ockzBkvH2lN0z2tJuEscASGPBmikJ5ixJqH/qNQJff2/U6OzsKjBwlb2x5y6r681zEg2y3/7yCF77b7HHMXlzsZYLnCQv5RRi/dfHHZ53sGW8PWX3jLS0m8Q17QlPqlKSKQkkwZwlkT71ApezABLO7fuHr783vnR2vm94MtbNGIYdT4xqEvzMXLPX7f1KmZzsglLFY3L1nK5JSYAlzvM0WM2FetnvlVbW4gG7MUkX61sGdkCqXaG0O+P6JmLHE6PwyOjuLr9v/7zlXid3rw2RHhgAaSxYMyVSlkTuT6cJDZ/4AjVLIn3qtZgdAziLOTogpywDja+/N778Pm3Y+xOstst5mnqrDV/88Asefe8bjxkl6fuZHx1AvdXxPnYW/SL0+PZj33ygDLWX1NkJ/skN+x3G5I31Xx9zebv9887Y9J3b7snOrw2RXjgFprFgzZQYdXM7NXFuXz++/t748vtUcf4iprzxFRLN0fh1/0Ss23Uc1XWXhM93rn/zNG3mTBq72rvTV5y7iKVbizB7dDevzhfNYLkTyLWBFHwMnQHKysrC1VdfjdjYWLRr1w6TJ0/GoUOH3J6zevVqmEwmh3/R0foFF8GcKQmFLIk30wXkO19/bzydL6K0shYrvyhRFPzY+/lsrdC0mcT+OWm1O/2qL0u8zr6omaUOtIw3BSdDB0Dbt2/HrFmzkJeXh82bN+PixYu46aabUFNT4/a8uLg4lJaWNv47evSon0bcVLDXk0i1AetmDMMrdw10WTtBpJSvvzfuzveXNjFRioMY6TlptTt9xbmLXtcbqpmlDrSMNwUnQ0+BZWdnO3y9evVqtGvXDnv27MH1118ve57JZILFYhF+nLq6OtTVXW6IVlVVpXywbvh7I0p/4woI0oKvvzeeVi9pRVolCJPnKSF7f7g+pfE5aZkh8fa+RVdH2mw2nKyq4wpKMjxDB0DOKisrAQAJCe5/eaqrq9GpUydYrVYMHjwYzz33HPr06SN7fFZWFjIzM1UdqzPWkxAp5+vvjavzT1XX4aF1Yt2VlbLPTp2qFusyLZ236ZtSPD6uF8LDTJpmSLy9b9G6PwBBXRtIwcNks9kCohzfarVi0qRJqKiowI4dO2SPy83NRWFhIfr374/Kykr83//9Hz7//HN89913uOKKK1ye4yoD1LFjR1RWViIuLk7150JE+lJamCzKvtdNbnE50lbmKTp/3YxhSO3SGvVWG0Ys3up2HyqlpOzLjidG+RSAiPT4CbY+QBQ4qqqqYDabha7fARMAzZw5E5999hl27NghG8i4cvHiRfTq1QtpaWlYtGiR0DlKXkAiCkz1Vhvyissxa+1eVJy/6PkEF1q1iMCrdw3C6XMXmmSnvAliXrlrIG4Z2AHA5VVggOvNNpWQwh21FieIdHkOlk7QFFiUXL8NXQQtSU9Px8cff4xt27YpCn4AICIiAoMGDUJRUZFGoyOiQBQeZsLwbm3w/O39vC6UzrqtH67r3tblKkH7QmxR9tNTcqssE83RmHFdMhJiImTvxznOUHtlpsjqSK6gJKMzdAbIZrPhoYcewgcffID//ve/6NZNef+K+vp69OnTBxMmTMCSJUuEzmEGiCi0ZBeUImPTAZRViU2JtYgMx5LfDhAKKETu2930lFwmxd2eZPY73jP7QqEkaKbAHnzwQaxduxYffvghevTo0Xi72WxG8+bNAQBTp05Fhw4dkJWVBQB4+umnMWzYMHTt2hUVFRV48cUXsXHjRuzZswe9e4t9GmMARBR66q02LN1aiJdyCmWPiW4Whj/+qgsevrGbooDC3X2rPT1FFMqUXL8NvQps+fLlAICRI0c63L5q1SpMnz4dAHDs2DGEhV2eyTtz5gxmzJiBsrIytGrVCkOGDMGXX34pHPwQUWgKDzNh9uju6GGJbVLAG988AvcOT0b6KGWBj8h9B0s7DKJAY+gMkF6YASIKbVoW8LI4mEg7QZMBIiLSg5bNPdk4lMgYAmIVGBEREZGaGAARERFRyGEARERERCGHARARERGFHAZAREREFHIYABEREVHIYQBEREREIYd9gIiIDIJNEon8hwEQEZEBZBeUNtkmI5HbZBBphlNgREQ6yy4oxcw1ex2CHwAoq6zFzDV7kV1QqtPIiIIXAyAiIh3VW23I/OgAXG3KKN2W+dEB1Fu5bSORmhgAERHpaFfJ6SaZH3s2AKWVtdhVctp/gyIKAQyAiIh09PNZ+eDHm+OISAwDICIiHbWLjVb1OCISwwCIiEhH16QkINEcDbnF7iY0rAa7JiXBn8MiCnoMgIiIdBQeZsLCib0BoEkQJH29cGJv9gMiUhkDICIinY3rm4jl9wyGxew4zWUxR2P5PYPZB4hIA2yESERkAOP6JmJMbws7QRP5CQMgIiKDCA8zIbVLa72HQRQSOAVGREREIYcBEBEREYUcBkBEREQUchgAERERUchhAEREREQhhwEQERERhRwGQERERBRyGAARERFRyGEARERERCGHnaBdsNlsAICqqiqdR0JERESipOu2dB13hwGQC2fPngUAdOzYUeeREBERkVJnz56F2Wx2e4zJJhImhRir1YoTJ04gNjYWJhM3IhRVVVWFjh074vjx44iLi9N7OCGHr7/++DPQF19/fRnh9bfZbDh79iySkpIQFua+yocZIBfCwsJwxRVX6D2MgBUXF8c/Pjri668//gz0xddfX3q//p4yPxIWQRMREVHIYQBEREREIYcBEKkmKioKCxcuRFRUlN5DCUl8/fXHn4G++PrrK9BefxZBExERUchhBoiIiIhCDgMgIiIiCjkMgIiIiCjkMAAiIiKikMMAiHyWkZEBk8nk8K9nz556Dyuk/PTTT7jnnnvQunVrNG/eHP369cPu3bv1HlZISE5ObvL+N5lMmDVrlt5DCwn19fVYsGABUlJS0Lx5c3Tp0gWLFi0S2guK1HH27FnMmTMHnTp1QvPmzXHttdfi66+/1ntYHrETNKmiT58+yMnJafy6WTO+tfzlzJkzGD58OG644QZ89tlnaNu2LQoLC9GqVSu9hxYSvv76a9TX1zd+XVBQgDFjxuCOO+7QcVShY/HixVi+fDnefvtt9OnTB7t378a9994Ls9mMhx9+WO/hhYTf//73KCgowD/+8Q8kJSVhzZo1GD16NA4cOIAOHTroPTxZXAZPPsvIyMDGjRuRn5+v91BC0pNPPomdO3fiiy++0HsoBGDOnDn4+OOPUVhYyL0E/eDXv/412rdvjzfffLPxtttvvx3NmzfHmjVrdBxZaDh//jxiY2Px4Ycf4uabb268fciQIRg/fjyeeeYZHUfnHqfASBWFhYVISkpC586dMWXKFBw7dkzvIYWMTZs24aqrrsIdd9yBdu3aYdCgQVi5cqXewwpJFy5cwJo1a3Dfffcx+PGTa6+9Flu2bMEPP/wAAPjmm2+wY8cOjB8/XueRhYZLly6hvr4e0dHRDrc3b94cO3bs0GlUYhgAkc+GDh2K1atXIzs7G8uXL0dJSQmuu+46nD17Vu+hhYTDhw9j+fLl6NatG/79739j5syZePjhh/H222/rPbSQs3HjRlRUVGD69Ol6DyVkPPnkk7jrrrvQs2dPREREYNCgQZgzZw6mTJmi99BCQmxsLFJTU7Fo0SKcOHEC9fX1WLNmDXJzc1FaWqr38NziFBiprqKiAp06dcKSJUtw//336z2coBcZGYmrrroKX375ZeNtDz/8ML7++mvk5ubqOLLQM3bsWERGRuKjjz7SeyghY/369Xjsscfw4osvok+fPsjPz8ecOXOwZMkSTJs2Te/hhYTi4mLcd999+PzzzxEeHo7Bgweje/fu2LNnD77//nu9hyeLlaqkuvj4eHTv3h1FRUV6DyUkJCYmonfv3g639erVC++//75OIwpNR48eRU5ODjZs2KD3UELKY4891pgFAoB+/frh6NGjyMrKYgDkJ126dMH27dtRU1ODqqoqJCYm4s4770Tnzp31HppbnAIj1VVXV6O4uBiJiYl6DyUkDB8+HIcOHXK47YcffkCnTp10GlFoWrVqFdq1a+dQCEraO3fuHMLCHC9l4eHhsFqtOo0odMXExCAxMRFnzpzBv//9b9xyyy16D8ktZoDIZ/PmzcPEiRPRqVMnnDhxAgsXLkR4eDjS0tL0HlpIeOSRR3Dttdfiueeew29/+1vs2rULr7/+Ol5//XW9hxYyrFYrVq1ahWnTprEFhJ9NnDgRzz77LK688kr06dMH+/btw5IlS3DffffpPbSQ8e9//xs2mw09evRAUVERHnvsMfTs2RP33nuv3kNzz0bkozvvvNOWmJhoi4yMtHXo0MF255132oqKivQeVkj56KOPbH379rVFRUXZevbsaXv99df1HlJI+fe//20DYDt06JDeQwk5VVVVttmzZ9uuvPJKW3R0tK1z5862P//5z7a6ujq9hxYy3nnnHVvnzp1tkZGRNovFYps1a5atoqJC72F5xCJoIiIiCjmsASIiIqKQwwCIiIiIQg4DICIiIgo5DICIiIgo5DAAIiIiopDDAIiIiIhCDgMgIiIiCjkMgIiIiCjkMAAiopAzffp0TJ48WdE5JpMJGzduVP1YItIHAyAiMqyRI0dizpw5TW5fvXo14uPj3Z6bkZEBk8nU5F9OTg5eeeUVrF69WtFYSktLMX78eEXnEJFxcdc+Igpaffr0QU5OjsNtCQkJiIyMVHxfFotFrWERkQEwA0REuhk5ciTS09ORnp4Os9mMNm3aYMGCBVBri8JmzZrBYrE4/IuMjGwyBTZy5Eg8/PDDePzxx5GQkACLxYKMjAyH+7Kf1rpw4QLS09ORmJiI6OhodOrUCVlZWQ7Hnzp1CrfeeitatGiBbt26YdOmTao8JyJSBwMgItLV22+/jWbNmmHXrl145ZVXsGTJErzxxhu6jCMmJgZfffUVXnjhBTz99NPYvHmzy2NfffVVbNq0Ce+++y4OHTqEf/7zn0hOTnY4JjMzE7/97W/x7bffYsKECZgyZQpOnz7th2dCRCI4BUZEuurYsSNeeuklmEwm9OjRA/v378dLL72EGTNmAABee+21JgHRpUuXEB0d7fG+9+/fj5YtWzZ+3bt3b+zatcvlsf3798fChQsBAN26dcPSpUuxZcsWjBkzpsmxx44dQ7du3TBixAiYTCZ06tSpyTHTp09HWloaAOC5557Dq6++il27dmHcuHEex01E2mMGiIh0NWzYMJhMpsavU1NTUVhYiPr6egDAlClTkJ+f7/Dv6aefbjz+2LFjaNmyZeO/5557rvF7PXr0cDjv/ffflx1H//79Hb5OTEzEzz//7PLY6dOnIz8/Hz169MDDDz+M//znP27vLyYmBnFxcbL3R0T+xwwQERma2WxG165dHW5r165d4/+TkpKQn5/f+HVCQkLj/yMjI5ucKyciIsLha5PJBKvV6vLYwYMHo6SkBJ999hlycnLw29/+FqNHj8a//vUvr+6PiPyPARAR6eqrr75y+DovLw/dunVDeHi40PnNmjUTDnLUFBcXhzvvvBN33nknfvOb32DcuHE4ffq0QwBGRMbFAIiIdHXs2DHMnTsXf/zjH7F371787W9/w1//+le9h+XWkiVLkJiYiEGDBiEsLAzvvfceLBaLx95ERGQcDICISFdTp07F+fPncc011yA8PByzZ8/GH/7wB72H5VZsbCxeeOEFFBYWIjw8HFdffTU+/fRThIWxrJIoUJhsajXcICJSaOTIkRg4cCBefvllvYdCRCGGH1eIiIgo5DAAIiIiopDDKTAiIiIKOcwAERERUchhAEREREQhhwEQERERhRwGQERERBRyGAARERFRyGEARERERCGHARARERGFHAZAREREFHL+P7jTE8WU3H5QAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2013"
      ],
      "metadata": {
        "id": "Gno0T-t6TX1K"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2013[('Chlorine', 'Free')].corr(new_2013[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "8Hk7EP0aTX1K"
      },
      "execution_count": 342,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "16571532-255f-419b-d12e-4390d8ad0004",
        "id": "4pR-WYZFTX1K"
      },
      "execution_count": 343,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.2514400990855371\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2013[('Chlorine', 'Free')], new_2013[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "03b3eb50-69f2-48f4-a0ce-f288e4f09350",
        "id": "7liJxUTtTX1L"
      },
      "execution_count": 344,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2013"
      ],
      "metadata": {
        "id": "4inSwTd6TX1L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2013[('Turbidity', 'Finish')].corr(new_2013[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "6VmeYNKHTX1L"
      },
      "execution_count": 345,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a6deec07-0f36-458a-9503-a185465a62f6",
        "id": "P_Ws_y22TX1L"
      },
      "execution_count": 346,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.45611124205992937\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2013[('Turbidity', 'Finish')], new_2013[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "b68482e3-4ebd-4d6c-fd2d-6e4888effeeb",
        "id": "udwd5GvlTX1L"
      },
      "execution_count": 347,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2013"
      ],
      "metadata": {
        "id": "j_9ooAheTX1L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2013[('Conductivity', 'Finish')].corr(new_2013[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "EHCruhinTX1L"
      },
      "execution_count": 351,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2f23fe18-0a21-4c4a-96ee-809894950ac9",
        "id": "2SAlGYXcTX1L"
      },
      "execution_count": 352,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.6275597158185146\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2013[('Conductivity', 'Finish')], new_2013[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "01d93070-5649-402b-a003-e72c560e1d85",
        "id": "NbIKHSwyTX1M"
      },
      "execution_count": 353,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2014"
      ],
      "metadata": {
        "id": "Oqr2OSPrVJn-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2014[('pH', 'Raw')].corr(new_2014[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "l58L8orbVJn_"
      },
      "execution_count": 348,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b3f22fa7-26a5-45c6-f3a4-cb87382044d0",
        "id": "ZzGS8y5CVJn_"
      },
      "execution_count": 349,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.522385179360851\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2014[('pH', 'Raw')], new_2014[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "0498090e-a0a1-4380-c516-ebbcafe8f722",
        "id": "VKyFdWnBVJn_"
      },
      "execution_count": 350,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2014"
      ],
      "metadata": {
        "id": "aWyTdG4NVJoA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2014[('Chlorine', 'Free')].corr(new_2014[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "t2jY5QHvVJoA"
      },
      "execution_count": 354,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e41c52b7-8e40-49c7-8ae9-c911f5ba243b",
        "id": "Ydt10ZNHVJoA"
      },
      "execution_count": 355,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.26916499663806337\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2014[('Chlorine', 'Free')], new_2014[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "0c4ac916-ae71-4096-e70a-81c2c8a7265d",
        "id": "8FWTydggVJoA"
      },
      "execution_count": 356,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2014"
      ],
      "metadata": {
        "id": "D2R3nBNIVJoA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2014[('Turbidity', 'Finish')].corr(new_2014[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "So4-OxpzVJoB"
      },
      "execution_count": 357,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "463e9530-0743-459c-b3ae-3e3248e1c5c0",
        "id": "dynDiuuzVJoB"
      },
      "execution_count": 358,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.38507542033033215\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2014[('Turbidity', 'Finish')], new_2014[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "eaf04da7-ad87-4fae-ca1d-438c2178f637",
        "id": "XE3ZHrGgVJoB"
      },
      "execution_count": 359,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2014"
      ],
      "metadata": {
        "id": "cs4yN02iVJoB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2014[('Conductivity', 'Finish')].corr(new_2014[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "iirz5hd2VJoB"
      },
      "execution_count": 360,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1f3cab77-8428-4c54-ac47-8e28c59d7b86",
        "id": "-ZgYCh-fVJoB"
      },
      "execution_count": 361,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.4521873376884409\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2014[('Conductivity', 'Finish')], new_2014[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "outputId": "7cd67108-faa3-46b4-a5ae-184e08d52566",
        "id": "qkDfpqicVJoC"
      },
      "execution_count": 362,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2015"
      ],
      "metadata": {
        "id": "LoxhU_oQWi_W"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2015[('pH', 'Finish')].corr(new_2015[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "7W5-k43cWi_W"
      },
      "execution_count": 363,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d557dfc1-1fc3-4054-d631-39d0fd17f070",
        "id": "Og3A9QkrWi_W"
      },
      "execution_count": 364,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.37043660789468447\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2015[('pH', 'Finish')], new_2015[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "6fd18385-48f0-43f4-a845-270f9a6e5965",
        "id": "ogUEt_5nWi_X"
      },
      "execution_count": 365,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2015"
      ],
      "metadata": {
        "id": "wqUBG4SFWi_X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2015[('Chlorine', 'Free')].corr(new_2015[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "sMRZcXsaWi_X"
      },
      "execution_count": 366,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "515acfee-93a8-496f-f280-8aa1fe82bffc",
        "id": "gKAEz7EyWi_Y"
      },
      "execution_count": 367,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.11331815362192689\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2015[('Chlorine', 'Free')], new_2015[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ee0e83ee-dc43-4ed3-813f-07ebd28c691c",
        "id": "h-5I5en9Wi_Y"
      },
      "execution_count": 368,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2015"
      ],
      "metadata": {
        "id": "eYk6yJDfWi_Y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2015[('Turbidity', 'Finish')].corr(new_2015[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "sDnpC_-eWi_Y"
      },
      "execution_count": 369,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "784a1dfe-87fd-48ab-99cc-ac8e1a34eb1a",
        "id": "W6bAH77YWi_Y"
      },
      "execution_count": 370,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.35496501614569265\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2015[('Turbidity', 'Finish')], new_2015[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "f32742f4-acd0-4230-8b13-d2232f8b708f",
        "id": "PqZ-DnwgWi_Z"
      },
      "execution_count": 371,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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uEPFxcVeo0iPPfZYnSdiX3DBBZo3b16D/yzi4uK8/nl06tSpVp01U18rV67UVVddpTZt2mjw4MHavHmz5z7njhjt2rVLV111leLi4hQfH68LL7xQn376qddnv//+++rfv7/atWuncePGeYVMAMYQZgAYtnbtWu3bt09r1qzRO++843n+N7/5jQYPHqydO3fqoYce0uzZs7VmzZo671FaWqr/+I//UHp6urZv36758+dr7ty59X7myJEjtWjRIsXHx8vhcMjhcGju3LmaPn26Pv/8c23bts1z7c6dO7V7927dcccdpv3OjzzyiObOnavc3Fz17dtXkydP1pkzZ+q8dsqUKerSpYu2bdum7du366GHHlJUVJTn9dOnT+u3v/2tXn31VW3cuFEHDx5s8HcH0DCmmQAY1rZtW7388su1ppdGjRqlhx56SJLUt29fffLJJ3ruuec0ZsyYWvdYsWKFXC6X/vSnPyk2NlYDBgzQN998o5kzZ9b5mdHR0V4jSTXatWunsWPHatmyZbroooskScuWLdMVV1yhnj17Nvh7PPjgg3r00Uc9j5966indc889dV47d+5cTZw4UZKUnZ2tAQMGaP/+/erXr1+taw8ePKgHHnjA81qfPn28Xq+qqtLSpUvVq1cvSdKsWbP02GOPNVgrgPoxMgPAsIEDB9bZJzNixIhajz///PM67/H5559r0KBBio2Nrff9vpoxY4Zee+01lZeXq7KyUitWrND06dMlVQeUdu3aeX4OHjzoed8DDzyg3Nxcz89Pf/rTej9j0KBBnj+npKRIko4ePVrntXPmzNHPfvYzXXPNNXr66aeVn5/v9XqbNm08QabmfvXdC0DjCDMAPCIiIuR2u72eq6qqqnVd27ZtW6okn0yaNEkxMTFatWqVVq9eraqqKv3oRz+SJN11111egSU1NdXzvsTERPXu3dvz09BKqbOniWw2myTJ5XLVee38+fP12WefaeLEiVq3bp3S09O1atWqOu9Vc79z/7kD8B3TTAA8OnXqpMLCQrndbs8Xds2eL77YsmVLrcf9+/ev89r+/fvr1VdfVXl5uWd05tz3nys6OlpOp7PW861atdK0adO0bNkyRUdH67bbbvOsLkpISFBCQoLPv4NZ+vbtq759++q+++7T5MmTtWzZMt14440tXgcQDhiZAeBx5ZVX6rvvvtPChQuVn5+vxYsX67333vP5/Z988okWLlyoL774QosXL9bf/vY3zZ49u85rf/KTn8hms2nGjBnau3ev3n33Xf32t79t8P49evRQaWmp1q5dq2PHjun06dOe1372s59p3bp1ysnJ8UwxBcL333+vWbNm6aOPPtKBAwf0ySefaNu2bfWGOgDNR5gB4NG/f3+98MILWrx4sQYPHqytW7caWmVz//3369NPP9WQIUP0xBNP6Nlnn9XYsWPrvLZdu3ZavXq19uzZoyFDhuiRRx7RM8880+D9R44cqbvuuku33nqrOnXqpIULF3pe69Onj0aOHKl+/frp4osv9rlms0VGRur48eP66U9/qr59++rHP/6xxo8fr+zs7IDVBIQ6m5uJWgAhwO12q0+fPvrlL3+pOXPmBLocAC2InhkAlvfdd9/p9ddfV2Fhoal7ywCwBsIMAMtLSkpSYmKiXnzxRXXo0CHQ5QBoYYQZAJbHbDkQ3mgABgAAlkaYAQAAlkaYAQAAlkaYAQAAlkaYAQAAlkaYAQAAlkaYAQAAlkaYAQAAlvb/ASFyPy/JIGFWAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2015"
      ],
      "metadata": {
        "id": "IrXqFIqlWi_Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2015[('Conductivity', 'Finish')].corr(new_2015[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "hUpxoPOFWi_Z"
      },
      "execution_count": 372,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d5ad6ee2-9db4-41b6-dfb8-b94d5020b922",
        "id": "0YLN6HHdWi_Z"
      },
      "execution_count": 373,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.530921998059893\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2015[('Conductivity', 'Finish')], new_2015[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "e2313d03-c672-450c-fa5b-59c5f25db60b",
        "id": "BOjyb4YZWi_Z"
      },
      "execution_count": 374,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2019"
      ],
      "metadata": {
        "id": "d_3eMp8eaope"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2019[('pH', 'Finish')].corr(new_2019[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "GX9g9j1jaopf"
      },
      "execution_count": 375,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "53e5acaf-e1e0-4151-97a7-816dbffa408f",
        "id": "pDbi2TXnaopf"
      },
      "execution_count": 376,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.549018153350226\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2019[('pH', 'Finish')], new_2019[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "6c2e35c1-a910-41da-9cc9-de3894900ce5",
        "id": "2uJf1_P6aopf"
      },
      "execution_count": 377,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2019"
      ],
      "metadata": {
        "id": "SKXc-kUtaopg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2019[('Chlorine', 'Free')].corr(new_2019[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "E23xDWLBaopg"
      },
      "execution_count": 378,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fb6b874a-fab2-4a99-a2ea-e6b6497e93d8",
        "id": "bLH41XmGaopg"
      },
      "execution_count": 379,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.4994907407603146\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2019[('Chlorine', 'Free')], new_2019[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "7e714990-824f-4b23-e21a-3a5078bc9b69",
        "id": "qfLJzXeyaopg"
      },
      "execution_count": 380,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2019"
      ],
      "metadata": {
        "id": "DE02GV7iaopg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2019[('Turbidity', 'Finish')].corr(new_2019[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "zZUhZSgaaoph"
      },
      "execution_count": 381,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6ea84dbe-190a-4195-ac9a-07b7cc568b6f",
        "id": "o8qfwf-Haoph"
      },
      "execution_count": 382,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.17881468502262993\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2019[('Turbidity', 'Finish')], new_2019[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "dd1a1474-7dc3-4a1d-bb8e-0303d38fe75d",
        "id": "sYdhfIP8aoph"
      },
      "execution_count": 383,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2019"
      ],
      "metadata": {
        "id": "q0ZIKQ5Zaoph"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2019[('Conductivity', 'Finish')].corr(new_2019[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "LEY5CKuQaopi"
      },
      "execution_count": 384,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "00bc740b-4408-40aa-85bf-4263d5e7b3ee",
        "id": "seWmuZYuaopi"
      },
      "execution_count": 385,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.6951087527718203\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2019[('Conductivity', 'Finish')], new_2019[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "64d24532-ab3e-4c27-c588-d248e52c870f",
        "id": "fxf2LSOhaopi"
      },
      "execution_count": 386,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2020"
      ],
      "metadata": {
        "id": "OEwdBxGIc4df"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2020[('pH', 'Finish')].corr(new_2020[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "NS3BdVqLc4df"
      },
      "execution_count": 387,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ac4fecb8-4524-41ab-ff90-4838d720ab46",
        "id": "-cH7e-0nc4dg"
      },
      "execution_count": 388,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.6275184140857457\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2020[('pH', 'Finish')], new_2020[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "3312dae8-30da-47d4-c233-21efc90750f8",
        "id": "8YTK01Src4dg"
      },
      "execution_count": 389,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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wYMH1a1bN919992aO3eu5QECAOAkgdNJLWtiIiUxkjRrQgGFvjEwnch07dq1qS4mLy9PGzdubPrazp07rYsMAACHiXQ6KaBlruL1ZHD0Og6mt5ZGjBihVatW6dRTT9X48eN100036eOPP9aSJUs0YsSIRMQIAIAjRDudJDWuzNx14anqmZmu3MzG7SRWYmJnOpF56KGHtG/fPklScXGx9u3bpxdffFEDBgwwdWIJAID2xuipo56Z6bp48LEJjqZjMJXINDQ06IsvvtCgQYMkNW4zWdnNFwAAJzN66ojTSdYxVSOTkpKi73//+9q9e3ei4gEAwLGG5+coz5OhcBtFLjXOVuJ0knVMF/sWFhZq06ZNiYgFAABHS3G7NGtCgSS1SmY4nZQYphOZe++9VzfffLNee+01VVVVqa6uLugDAICOrKgwT/OnDJXXE7x9xOmkxHD5I7XWDcHtPpr7uFxHM0q/3y+Xy6WGhgbrorNAXV2dPB6PamtrlZWVlexwAAAdRPPOvpxOMs/o8zupQyMBAGivUtwuBkC2AdOJzHe/+91ExAEAAGCa6RoZSXr33Xc1ZcoUnX322fryyy8lSX/5y1+0atUqS4MDAACIxHQi89JLL+n8889X586dVVpaqvr6xometbW1uv/++y0PEAAAIJyYTi0tWLBACxcuVGpqatPro0aNUmlpqaXBAQAARGI6kfnss8907rnntnrd4/Foz549VsQEAABgiOlExuv1asOGDa1eX7Vqlfr3729JUAAAAEaYTmSuvfZazZgxQ++//75cLpe++uorPffcc7r55ps1derURMQIAAAQkunj17fffrt8Pp/OO+88HThwQOeee67S09N188036/rrr09EjAAAOBaN8RLLdGffgMOHD2vDhg3at2+fCgoK1K1bN6tjswSdfQEAybKsvErFSytUVXuo6bU8T4ZmTShoGlVAohNawjr7BqSlpSkzM1OZmZm2TWIAAEiWZeVVmrqoVC1XC6prD2nqolLNnzJUkqImOojMdI3MN998o7vuuksej0f9+vVTv3795PF4dOedd+rIkSOJiBEAAEdp8PlVvLSiVRIjqem1O5Z8rOsWlQYlMdLRRGdZeVXC42wPTK/IXH/99VqyZIkefPBBjRw5UpJUUlKi2bNnq6amRvPnz7c8SAAAnGRN5a5WCUpzfkm7D4T+j3+/JJca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OHGiJGngwIHasmWL5syZQyJjADUyJqWlpemMM87QihUrml7z+XxasWKFRo4cmcTIOja/36/p06fr5Zdf1sqVK5Wfn5/skDq88847Tx9//LHKysqaPoYNG6bJkyerrKyMJCZJRo0a1ao1weeff66+ffsmKSIcOHBAbnfw4zglJUU+ny9JETkLKzIxmDlzpq644goNGzZMw4cP1yOPPKL9+/frqquuSnZoHda0adO0ePFivfLKK8rMzFR1dbUkyePxqHPnzkmOrmPKzMxsVaPUtWtX9ejRg9qlJPr1r3+ts88+W/fff79+/OMfa82aNfrjH/+oP/7xj8kOrcOaMGGC7rvvPh1//PE67bTTtG7dOj300EO6+uqrkx2aM/gRk8cff9x//PHH+9PS0vzDhw/3r169OtkhdWiSQn48/fTTyQ4NzXz3u9/1z5gxI9lhdHhLly71FxYW+tPT0/2nnHKK/49//GOyQ+rQ6urq/DNmzPAff/zx/oyMDH///v39v/3tb/319fXJDs0R6CMDAAAcixoZAADgWCQyAADAsUhkAACAY5HIAAAAxyKRAQAAjkUiAwAAHItEBgAAOBaJDAAAcCwSGQCOdeWVV+qSSy4x9T0ul0t///vfLb8WQHKQyABIuNGjR+vGG29s9fozzzyj7OzsiN87e/ZsuVyuVh/Lly/Xo48+qmeeecZULFVVVbrgggtMfQ8A+2JoJADbO+2007R8+fKg13JycpSWlmb6Xl6v16qwANgAKzIA4jZ69GhNnz5d06dPl8fjUc+ePXXXXXfJqlFunTp1ktfrDfpIS0trtbU0evRo3XDDDbr11luVk5Mjr9er2bNnB92r+XbR4cOHNX36dOXl5SkjI0N9+/bVnDlzgq7fuXOnLr30UnXp0kUDBgzQq6++asl7AmANEhkAlnj22WfVqVMnrVmzRo8++qgeeughPfXUU0mJo2vXrnr//ff14IMP6u6779abb74Z8trHHntMr776qv7617/qs88+03PPPad+/foFXVNcXKwf//jH+uijjzR+/HhNnjxZu3btaoN3AsAItpYAWKJPnz56+OGH5XK5dPLJJ+vjjz/Www8/rGuvvVaS9OSTT7ZKbL755htlZGREvffHH3+sbt26NX1eUFCgNWvWhLx20KBBmjVrliRpwIABmjdvnlasWKFx48a1unbr1q0aMGCAzjnnHLlcLvXt27fVNVdeeaUmTZokSbr//vv12GOPac2aNSoqKooaN4DEY0UGgCVGjBghl8vV9PnIkSO1fv16NTQ0SJImT56ssrKyoI+777676fqtW7eqW7duTR/3339/09dOPvnkoO976aWXwsYxaNCgoM/z8vK0Y8eOkNdeeeWVKisr08knn6wbbrhB//znPyPer2vXrsrKygp7PwBtjxUZAG3C4/HoxBNPDHotNze36X/37t1bZWVlTZ/n5OQ0/e+0tLRW3xtOampq0Ocul0s+ny/ktUOHDlVlZaXeeOMNLV++XD/+8Y81duxY/e1vf4vpfgDaHokMAEu8//77QZ+vXr1aAwYMUEpKiqHv79Spk+FkxUpZWVn6yU9+op/85Cf64Q9/qKKiIu3atSsokQJgXyQyACyxdetWzZw5U//1X/+l0tJSPf744/rDH/6Q7LAieuihh5SXl6chQ4bI7Xbrf/7nf+T1eqP2tgFgHyQyACzx85//XAcPHtTw4cOVkpKiGTNm6Je//GWyw4ooMzNTDz74oNavX6+UlBSdeeaZ+sc//iG3m/JBwClcfqsaPQDosEaPHq3BgwfrkUceSXYoADoY/rMDAAA4FokMAABwLLaWAACAY7EiAwAAHItEBgAAOBaJDAAAcCwSGQAA4FgkMgAAwLFIZAAAgGORyAAAAMcikQEAAI71/wCtkJYUr4R0iwAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2020"
      ],
      "metadata": {
        "id": "KydXyMtWc4dg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2020[('Chlorine', 'Free')].corr(new_2020[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "Qbv62Labc4dg"
      },
      "execution_count": 390,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "65f6aaa1-f225-48cb-a64e-3e0d8928ebba",
        "id": "Jxtow0KUc4dh"
      },
      "execution_count": 391,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.622276012098035\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2020[('Chlorine', 'Free')], new_2020[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "7ed38a60-2abf-4dd9-f5de-48b38bbff3c5",
        "id": "QUuwPSZIc4dh"
      },
      "execution_count": 392,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2020"
      ],
      "metadata": {
        "id": "yA07OOQYc4dh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2020[('Turbidity', 'Finish')].corr(new_2020[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "KKxceArBc4dh"
      },
      "execution_count": 393,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a4f1e592-32ab-4d10-e17e-2c6db6c05b7b",
        "id": "2vqa0ETxc4di"
      },
      "execution_count": 394,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.10460898597985656\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2020[('Turbidity', 'Finish')], new_2020[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "e2ac0808-8bdd-4f21-a514-2a1826f29499",
        "id": "BewdZS9Nc4di"
      },
      "execution_count": 395,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2020"
      ],
      "metadata": {
        "id": "17A4hWLAc4di"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2020[('Conductivity', 'Finish')].corr(new_2020[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "voNYAB5Yc4di"
      },
      "execution_count": 396,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f70e9001-e248-4881-b26c-fba15f9a8457",
        "id": "k_zAcE73c4di"
      },
      "execution_count": 397,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.742235157021131\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2020[('Conductivity', 'Finish')], new_2020[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "a0a0231c-b527-4a4b-ad82-accbf2efe859",
        "id": "VWU95soFc4di"
      },
      "execution_count": 398,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2021"
      ],
      "metadata": {
        "id": "TtgbuJhseBfM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2021[('pH', 'Finish')].corr(new_2021[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "t0jxRZpOeBfN"
      },
      "execution_count": 399,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b9376eb8-6fa8-468c-a61d-ad4c9feb0564",
        "id": "R47is13FeBfN"
      },
      "execution_count": 400,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.05357664866392921\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2021[('pH', 'Finish')], new_2021[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "1c5a452f-a1b1-4cd6-ad84-5b5c06275798",
        "id": "i3Acq1hqeBfN"
      },
      "execution_count": 401,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2021"
      ],
      "metadata": {
        "id": "hHYtqrrqeBfN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2021[('Chlorine', 'Free')].corr(new_2021[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "XZzsF12VeBfN"
      },
      "execution_count": 402,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "260499ac-04bd-4287-d5f6-375c2e4bb6f5",
        "id": "LqUXURKXeBfO"
      },
      "execution_count": 403,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.37451527721927286\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2021[('Chlorine', 'Free')], new_2021[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "168bc1d7-5225-4776-a2a5-6967aab51d60",
        "id": "ZpTy5qBSeBfO"
      },
      "execution_count": 404,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2021"
      ],
      "metadata": {
        "id": "biP9mXqWeBfO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2021[('Turbidity', 'Finish')].corr(new_2021[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "iNROq15EeBfO"
      },
      "execution_count": 405,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4f28dcf0-ea25-4779-9f6c-6b2d6bac869b",
        "id": "YCxwcfLceBfO"
      },
      "execution_count": 406,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.48112568577047526\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2021[('Turbidity', 'Finish')], new_2021[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c6a63a89-f147-47ce-fbc3-1dfaa9e2d480",
        "id": "r8YB_OEDeBfO"
      },
      "execution_count": 407,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2021"
      ],
      "metadata": {
        "id": "k63IgheWeBfP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2021[('Conductivity', 'Finish')].corr(new_2021[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "3g-jg5oeeBfP"
      },
      "execution_count": 408,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "082953af-4d9b-4648-9fe5-d9c23da2f260",
        "id": "Z6bBYETUeBfP"
      },
      "execution_count": 409,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.4889824260307171\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2021[('Conductivity', 'Finish')], new_2021[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "73e6a88c-4ae7-4426-eaeb-d5be60b8536f",
        "id": "5Nt9B2cSeBfP"
      },
      "execution_count": 410,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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798fL7zwAgCgb9++2LVrF+bNm4e7775b59YZ19///ndcd911aNeund5NMZwPPvgA7733HhYtWoTu3bujqKgIEydORLt27XhOefDuu+/i3nvvxfnnn4/o6Gj069cP+fn52LZtm95NI1KFPT0GkZaWhosuugj79++H1WpFQ0MDKisrnbY5fvw4rFarPg3UUWZmJnJycpxu69atm304UD4mrpn8Zj1eAHDo0CGsXr0a999/v/02nle/efzxx+29PT179sSdd96JRx55BDNmzADAc8pV586dsW7dOtTU1ODIkSPYsmULGhsb0alTJx4rD0SOidVqxYkTJ5zuP3fuHCoqKkx73JRo+d3FoMcgampqUFxcjMzMTFxyySWIiYnBmjVr7Pf/9NNPOHz4MHJzc3VspT4GDx6Mn376yem2vXv3omPHjgCA7OxsWK1Wp+NVXV2NzZs3m/J4AcCCBQvQpk0bjBw50n4bz6vfnDlzBlFRzl9/0dHRsNlsAHhOKUlKSkJmZiZOnTqFL7/8EqNGjeKx8kDkmOTm5qKystKpt2zt2rWw2WwYOHBgyNtsZJp+d6nNvCZtPProo9J//vMfqaSkRNq4caOUl5cntW7dWjpx4oQkSZI0duxYqUOHDtLatWulb7/9VsrNzZVyc3N1brU+tmzZIrVo0UJ6/vnnpX379knvvfeelJiYKC1cuNC+zYsvviilpaVJy5Ytk7777jtp1KhRUnZ2tnT27FkdW66PpqYmqUOHDtLkyZPd7uN51ezuu++Wzj//fGnFihVSSUmJtHTpUql169bSE088Yd+G59RvVq5cKX3xxRfSgQMHpK+++krq3bu3NHDgQKmhoUGSJHMeq9OnT0s7duyQduzYIQGQXn31VWnHjh3SoUOHJEkSOybDhw+X+vbtK23evFnasGGD1KVLFyk/P1+vlxQ0vo5VeXm5tGPHDumzzz6TAEhLliyRduzYIZWWltr3odV3F4Mendx2221SZmamFBsbK51//vnSbbfdJu3fv99+/9mzZ6U//vGPUnp6upSYmCjddNNNTieA2Xz66adSjx49pLi4OKlr167SW2+95XS/zWaTpkyZIrVt21aKi4uTrr76aumnn37SqbX6+vLLLyUAHl8/z6tm1dXV0oQJE6QOHTpI8fHxUqdOnaQ///nPUn19vX0bnlO/ef/996VOnTpJsbGxktVqlcaNGydVVlba7zfjsfr6668lAG7/7r77bkmSxI5JeXm5lJ+fL7Vs2VJKSUmR7rnnHun06dM6vJrg8nWsFixY4PH+Z555xr4Prb67LJLkUIKUiIiIKEIxp4eIiIhMgUEPERERmQKDHiIiIjIFBj1ERERkCgx6iIiIyBQY9BAREZEpMOghIiIiU2DQQ0RERKbAoIeI/HbllVdi4sSJQX8ei8WCTz75RHj7rKwszJo1K2jt8WTMmDG48cYbVT1GzetSewyIyB2DHqIIUFZWhocffhidOnVCXFwc2rdvj+uvv95pgb5wMHXqVPTp08ft9tLSUlx33XXC+9m6dSsefPBB+99aBQxTp06FxWJx+7d69Wq8/vrreOedd1TtT+3rIqLAtNC7AUQUmIMHD2Lw4MFIS0vDyy+/jJ49e6KxsRFffvklxo0bhx9//FHvJgbMarWq2v68884LUkuA7t27Y/Xq1U63ZWRkIDY2VvW+1L4uIgoMe3qIwtwf//hHWCwWbNmyBbfccgsuuugidO/eHZMmTcKmTZsAAIcPH8aoUaPQsmVLpKSk4A9/+AOOHz9u34fcw/Luu+8iKysLqampGD16NE6fPm3fpra2FnfddRdatmyJzMxMvPLKK25t8dSjkpaW5tQD8vPPPyM/Px8ZGRlISkpC//79sXnzZrzzzjuYNm0adu7cae9BkR/nuN/LLrsMkydPdnqOX375BTExMVi/fj0A5+GtrKwsAMBNN90Ei8WCrKwsHDx4EFFRUfj222+d9jNr1ix07NgRNptN8Xi3aNECVqvV6V9sbKzb8NaVV16JP/3pT3jiiSeQkZEBq9WKqVOnKh6vhoYGjB8/HpmZmYiPj0fHjh0xY8YMp+1PnjyJm266CYmJiejSpQuWL1+u2E4icseghyiMVVRUYOXKlRg3bhySkpLc7k9LS4PNZsOoUaNQUVGBdevWYdWqVThw4ABuu+02p22Li4vxySefYMWKFVixYgXWrVuHF1980X7/448/jnXr1mHZsmX46quv8J///Afbt29X1d6amhr87ne/w9GjR7F8+XLs3LkTTzzxBGw2G2677TY8+uij6N69O0pLS1FaWurWRgAoKCjAkiVL4LhW8vvvv4927drh8ssvd9t+69atAIAFCxagtLQUW7duRVZWFvLy8rBgwQKnbRcsWIAxY8YgKkqbr8Z//vOfSEpKwubNm/HSSy/h2WefxapVqzxu+8Ybb2D58uX44IMP8NNPP+G9996zB2yyadOm4Q9/+AO+++47jBgxAgUFBaioqNCkrURmwOEtojC2f/9+SJKErl27Km6zZs0afP/99ygpKUH79u0BAP/617/QvXt3bN26FZdeeikAwGaz4Z133kFycjIA4M4778SaNWvw/PPPo6amBn//+9+xcOFCXH311QCaL+gXXHCBqvYuWrQIv/zyC7Zu3YqMjAwAwIUXXmi/v2XLlvaeFCV/+MMfMHHiRGzYsMEe5CxatAj5+fmwWCxu28tDXWlpaU77vf/++zF27Fi8+uqriIuLw/bt2/H9999j2bJlXl/D999/j5YtW9r/zsnJwZYtWzxu26tXLzzzzDMAgC5dumD27NlYs2YNhg0b5rbt4cOH0aVLFwwZMgQWiwUdO3Z022bMmDHIz88HALzwwgt44403sGXLFgwfPtxrm4moGXt6iMKYY2+Hkj179qB9+/b2gAdovlCnpaVhz5499tuysrLsAQ8AZGZm4sSJEwCae4EaGhowcOBA+/0ZGRm4+OKLVbW3qKgIffv2tQc8/jjvvPNwzTXX4L333gMAlJSUoLCwEAUFBar2c+ONNyI6Ohoff/wxAOCdd97BVVddhaysLBw+fBgtW7a0/3vhhRfsj7v44otRVFRk//fRRx8pPkevXr2c/nY8pq7GjBmDoqIiXHzxxfjTn/6Er776yuv+kpKSkJKSorg/InLHoIcojHXp0gUWi0WTZOWYmBinvy0Wi9fcFk8sFotbINbY2Gj/f0JCgv8NdFBQUIB///vfaGxsxKJFi9CzZ0/07NlT1T5iY2Nx1113YcGCBWhoaMCiRYtw7733AgDatWvnFNiMHTvW6XEXXnih/Z9jMOlKzTHt168fSkpKMH36dJw9exZ/+MMf8Pvf/97v/RGROwY9RGEsIyMD1157LebMmYPa2lq3+ysrK9GtWzccOXIER44csd++e/duVFZWIicnR+h5OnfujJiYGGzevNl+26lTp7B3716n7c477zyUlpba/963bx/OnDlj/7tXr14oKipSzEOJjY1FU1OTz/aMGjUKdXV1WLlyJRYtWuSzlycmJsbjfu+//36sXr0ab775Js6dO4ebb74ZQHOysmNgE0jPlBopKSm47bbbMH/+fLz//vv46KOPmLNDpCEGPURhbs6cOWhqasKAAQPw0UcfYd++fdizZw/eeOMN5ObmIi8vDz179kRBQQG2b9+OLVu24K677sLvfvc79O/fX+g5WrZsifvuuw+PP/441q5di127dnlM+B06dChmz56NHTt24Ntvv8XYsWOdeify8/NhtVpx4403YuPGjThw4AA++ugjFBYWAmgeYispKUFRURFOnjyJ+vp6j+1JSkrCjTfeiClTpmDPnj32PBclWVlZWLNmDcrKynDq1Cn77d26dcOgQYMwefJk5Ofna9YT5Y9XX30Vixcvxo8//oi9e/fiww8/hNVqRVpamm5tIoo0DHqIwlynTp2wfft2XHXVVXj00UfRo0cPDBs2DGvWrMHcuXNhsViwbNkypKen44orrkBeXh46deqE999/X9XzvPzyy7j88stx/fXXIy8vD0OGDMEll1zitM0rr7yC9u3b4/LLL8ftt9+Oxx57DImJifb7Y2Nj8dVXX6FNmzYYMWIEevbsiRdffBHR0dEAgFtuuQXDhw/HVVddhfPOOw+LFy9WbE9BQQF27tyJyy+/HB06dPDa9ldeeQWrVq1C+/bt0bdvX6f77rvvPjQ0NNiHtvSSnJyMl156Cf3798ell16KgwcP4vPPP9dsJhkRARZJJBOSiChCTZ8+HR9++CG+++47vZtCREHGnxBEZEo1NTXYtWsXZs+ejYcffljv5hBRCDDoISJTGj9+PC655BJceeWVug9tEVFocHiLiIiITIE9PURERGQKDHqIiIjIFBj0EBERkSkw6CEiIiJTYNBDREREpsCgh4iIiEyBQQ8RERGZAoMeIiIiMoX/D5uWddn+pjBcAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2022"
      ],
      "metadata": {
        "id": "eoS9cX8Be_IH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2022[('pH', 'Finish')].corr(new_2022[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "9lcXdnRme_IH"
      },
      "execution_count": 411,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3db42820-90b8-4b70-8f04-140b5dcaee00",
        "id": "Adgp-iOhe_IH"
      },
      "execution_count": 412,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.6272001657123398\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2022[('pH', 'Finish')], new_2022[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "21a40475-c9ba-421e-b509-9ae24174e4f1",
        "id": "afoDiUBke_IJ"
      },
      "execution_count": 413,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2022"
      ],
      "metadata": {
        "id": "DdQhknABe_IK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2022[('Chlorine', 'Free')].corr(new_2022[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "xPAzMDFje_IK"
      },
      "execution_count": 414,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "282cf739-a865-4585-9310-a8aeffccd96f",
        "id": "urMyPVS0e_IK"
      },
      "execution_count": 415,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.6070081918826089\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2022[('Chlorine', 'Free')], new_2022[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c4e491d6-5568-449d-8a3a-d83887c5cb59",
        "id": "2VE-bJfxe_IK"
      },
      "execution_count": 416,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2022"
      ],
      "metadata": {
        "id": "u_U1pyfEe_IL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2022[('Turbidity', 'Finish')].corr(new_2022[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "UJ65RPzfe_IL"
      },
      "execution_count": 417,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3d1c4296-4ec0-49de-fd39-bec4e8d70bd4",
        "id": "05szmeqRe_IL"
      },
      "execution_count": 418,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.012282729079382089\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2022[('Turbidity', 'Finish')], new_2022[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "f311a3c0-2d67-43ed-dcb0-8666e9756c1e",
        "id": "ZX2_pNiTe_IL"
      },
      "execution_count": 419,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2022"
      ],
      "metadata": {
        "id": "PaU6hTPWe_IL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2022[('Conductivity', 'Finish')].corr(new_2022[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "VchrP8Afe_IL"
      },
      "execution_count": 420,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "101dc8eb-81e5-4506-d62f-33be3346929e",
        "id": "-KiIEjyxe_IL"
      },
      "execution_count": 421,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.18990458012162023\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2022[('Conductivity', 'Finish')], new_2022[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "6411f141-500b-487a-a1ae-053e1a13d221",
        "id": "PSIMGHGAe_IL"
      },
      "execution_count": 422,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Temperature(Finish) 2023"
      ],
      "metadata": {
        "id": "-HTRb_0ufhcC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2023[('pH', 'Finish')].corr(new_2023[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "qpiNjT-tfhcC"
      },
      "execution_count": 423,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3a07a80b-7fb8-4d90-e218-1505999006f5",
        "id": "Y32iNHkNfhcC"
      },
      "execution_count": 424,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9725261954688912\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2023[('pH', 'Finish')], new_2023[('Temperature','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "28f062ae-2c7a-4a7c-f816-a188dc182157",
        "id": "jxVFJ-UlfhcD"
      },
      "execution_count": 425,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "-LdznrEHl9Wu"
      },
      "execution_count": 425,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Chlorine(Free) & Temperature(Finish) 2023"
      ],
      "metadata": {
        "id": "D9dA6YhXfhcD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2023[('Chlorine', 'Free')].corr(new_2023[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "VywVUofPfhcD"
      },
      "execution_count": 426,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "36fbbed7-ed4a-44a9-9dff-c5d1ef58f81d",
        "id": "Zka8NVIafhcD"
      },
      "execution_count": 427,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9192264543741261\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2023[('Chlorine', 'Free')], new_2023[('Temperature','Finish')])\n",
        "plt.xlabel('Chlorine-Free')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "a9f82c21-c4f9-499a-d98b-943e297263b3",
        "id": "KWyLX0DKfhcD"
      },
      "execution_count": 428,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Turbidity(Finish) & Temperature(Finish) 2022"
      ],
      "metadata": {
        "id": "K7V21GuufhcD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2023[('Turbidity', 'Finish')].corr(new_2023[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "9k09ugP2fhcD"
      },
      "execution_count": 429,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fcdfdb1d-c630-4739-af4b-db3b43ecca60",
        "id": "uLS-Syx5fhcD"
      },
      "execution_count": 430,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.5299527342800116\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2023[('Turbidity', 'Finish')], new_2023[('Temperature','Finish')])\n",
        "plt.xlabel('Turbidity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "8c91f0cc-7a0d-40ee-cf3a-927231e68f57",
        "id": "N9ZeKn63fhcE"
      },
      "execution_count": 431,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conductivity(Finish) & Temperature(Finish) 2023"
      ],
      "metadata": {
        "id": "StXOlheyfhcE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2023[('Conductivity', 'Finish')].corr(new_2023[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "M0HoJv8TfhcE"
      },
      "execution_count": 432,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cbcc8a5b-6c8c-4c50-ffac-147793b3cf3a",
        "id": "R1BPch-5fhcF"
      },
      "execution_count": 433,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.8510412680418994\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2023[('Conductivity', 'Finish')], new_2023[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ccc14409-909f-4023-809b-9853837b1fae",
        "id": "Pxu46ZGUfhcF"
      },
      "execution_count": 434,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2009"
      ],
      "metadata": {
        "id": "njXcruD0mSZM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2009[('Conductivity', 'Finish')].corr(new_2009[('pH','Finish')])"
      ],
      "metadata": {
        "id": "tgaBhqSrmSZN"
      },
      "execution_count": 435,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "34813336-848e-462d-a302-0b48b83ab258",
        "id": "GMSns1ukmSZN"
      },
      "execution_count": 436,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.1467398490931442\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2009[('Conductivity', 'Finish')], new_2009[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "f8b4eaee-3bfd-4523-d993-5c18fce09177",
        "id": "0Ko1_vuWmSZN"
      },
      "execution_count": 437,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2010"
      ],
      "metadata": {
        "id": "0OLFOsWAp-ZR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2010[('Conductivity', 'Finish')].corr(new_2010[('pH','Finish')])"
      ],
      "metadata": {
        "id": "GyEHIHznps1H"
      },
      "execution_count": 438,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "147f429c-8c5a-40d7-c136-5aeb70c4bb7f",
        "id": "3x8-GX7kps1H"
      },
      "execution_count": 439,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.0878184497605234\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2010[('Conductivity', 'Finish')], new_2010[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "510d0c4d-34df-4d93-fd22-abe35eb4d641",
        "id": "IT1uRG0_ps1I"
      },
      "execution_count": 440,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2011"
      ],
      "metadata": {
        "id": "iNfsn1t3mSZO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2011[('Conductivity', 'Finish')].corr(new_2011[('pH','Finish')])"
      ],
      "metadata": {
        "id": "gTyt_9IHmSZO"
      },
      "execution_count": 441,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "925a2938-5f2c-4e98-a852-9b7b25b04df0",
        "id": "_tk6V79RmSZO"
      },
      "execution_count": 442,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.3792187584892554\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2011[('Conductivity', 'Finish')], new_2011[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "75a2bbb6-b6dd-4242-c17c-d3676b32aba0",
        "id": "u782LLUemSZP"
      },
      "execution_count": 443,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2012"
      ],
      "metadata": {
        "id": "JVgCrPDhmSZP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2012[('Conductivity', 'Finish')].corr(new_2012[('pH','Finish')])"
      ],
      "metadata": {
        "id": "2l1bPjfdmSZP"
      },
      "execution_count": 444,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ced15648-82ce-4a93-dcde-1200c2a9f530",
        "id": "IH872yDlmSZP"
      },
      "execution_count": 445,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.19326907715455946\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2012[('Conductivity', 'Finish')], new_2012[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "be447a5f-a4e0-44f9-8889-5d43209db5b4",
        "id": "dGNEXDAkmSZQ"
      },
      "execution_count": 446,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2013"
      ],
      "metadata": {
        "id": "FAGMy4QSmSZQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2013[('Conductivity', 'Finish')].corr(new_2013[('pH','Finish')])"
      ],
      "metadata": {
        "id": "MXciwTZmmSZQ"
      },
      "execution_count": 447,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6fdff9ac-c07c-40a8-e78d-600a2cd06641",
        "id": "5lakFspEmSZR"
      },
      "execution_count": 448,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.12736704163970727\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2013[('Conductivity', 'Finish')], new_2013[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "677d6d09-182d-42df-dc86-c796fbd03d54",
        "id": "9gDaG9l8mSZR"
      },
      "execution_count": 449,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2014\n"
      ],
      "metadata": {
        "id": "yAXa2SKZr9fy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2014[('Conductivity', 'Finish')].corr(new_2014[('pH','Raw')])"
      ],
      "metadata": {
        "id": "cRgI3p7pr9fz"
      },
      "execution_count": 450,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7824099a-2b82-43c8-8d7d-0f719aa06642",
        "id": "2-r7iiglr9fz"
      },
      "execution_count": 451,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.3828963203477624\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2014[('Conductivity', 'Finish')], new_2014[('pH','Raw')])\n",
        "plt.xlabel('pH-Raw')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "979c5c07-7667-421a-aa62-adfe25569590",
        "id": "Vd0fadEKr9fz"
      },
      "execution_count": 452,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2015"
      ],
      "metadata": {
        "id": "_4a2-vx0s422"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2015[('Conductivity', 'Finish')].corr(new_2015[('pH','Finish')])"
      ],
      "metadata": {
        "id": "egp63fbysx6u"
      },
      "execution_count": 453,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a20ff9c0-d26a-4cd7-ce71-bd5c34505d01",
        "id": "cm2131gesx6u"
      },
      "execution_count": 454,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.041644772525191304\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2015[('Conductivity', 'Finish')], new_2015[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "4c59b844-e2be-49b8-de17-2d675501974a",
        "id": "U5AmJpbOsx6u"
      },
      "execution_count": 455,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2019"
      ],
      "metadata": {
        "id": "e_u9PQ_6tPnM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2019[('Conductivity', 'Finish')].corr(new_2019[('pH','Finish')])"
      ],
      "metadata": {
        "id": "aXrBxYSutPnM"
      },
      "execution_count": 456,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7a992596-8c8f-4868-a242-5d8e37d28b09",
        "id": "8ykrq88QtPnM"
      },
      "execution_count": 457,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9502047577778996\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2019[('Conductivity', 'Finish')], new_2019[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "2e790657-290d-4f0e-8f8e-ae14c96c3958",
        "id": "QlGUkL2ztPnM"
      },
      "execution_count": 458,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2020"
      ],
      "metadata": {
        "id": "RBEoi65RtfMK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2020[('Conductivity', 'Finish')].corr(new_2020[('pH','Finish')])"
      ],
      "metadata": {
        "id": "5Bm5PAtmtfMK"
      },
      "execution_count": 459,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "39284637-fded-4054-ba9f-7b3c5ad94685",
        "id": "_-zygf6_tfML"
      },
      "execution_count": 460,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9736423583499383\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2020[('Conductivity', 'Finish')], new_2020[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "cfcceaed-4fab-4445-c9e2-b3c4fbfe55f9",
        "id": "3YAepvc2tfML"
      },
      "execution_count": 461,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2021"
      ],
      "metadata": {
        "id": "spYuMpk3tqc4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2021[('Conductivity', 'Finish')].corr(new_2021[('pH','Finish')])"
      ],
      "metadata": {
        "id": "lNVhkVoUtqc5"
      },
      "execution_count": 462,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "35c35298-b495-4a16-fe9c-905eaa0d772f",
        "id": "G4O754oStqc6"
      },
      "execution_count": 463,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.33388841051019935\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2021[('Conductivity', 'Finish')], new_2021[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "8214d198-b380-4fa5-d53f-f4cdbfa7f64c",
        "id": "-BmdruwBtqc7"
      },
      "execution_count": 464,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2022"
      ],
      "metadata": {
        "id": "OMmoS-XluKc8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2022[('Conductivity', 'Finish')].corr(new_2022[('pH','Finish')])"
      ],
      "metadata": {
        "id": "FniMAT3ZuKc8"
      },
      "execution_count": 465,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "22c5c9bf-0eca-4a28-99c4-918e2e503c59",
        "id": "SYmMgwJKuKc8"
      },
      "execution_count": 466,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.7172079414826947\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2022[('Conductivity', 'Finish')], new_2022[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "cec66989-ee25-4da0-d3cb-47a370347e00",
        "id": "BBSQsDfvuKc9"
      },
      "execution_count": 467,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Conductivity(Finish) 2023"
      ],
      "metadata": {
        "id": "E_1ZTSEEuVel"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2023[('Conductivity', 'Finish')].corr(new_2023[('pH','Finish')])"
      ],
      "metadata": {
        "id": "D0JdgMLCuVem"
      },
      "execution_count": 468,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "19e8ce0e-3b52-4481-8cb2-47ae03ba9819",
        "id": "oICLk8YUuVem"
      },
      "execution_count": 469,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.8964859526366177\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2023[('Conductivity', 'Finish')], new_2023[('pH','Finish')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Conductivity-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "20e0a672-32e2-4114-a000-f37b1b4d6c08",
        "id": "Gf1OFmaXuVem"
      },
      "execution_count": 470,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Colour(Raw T) 2009"
      ],
      "metadata": {
        "id": "ilwkJc4RzPa-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2009[('pH', 'Finish')].corr(new_2009[('Colour','Raw T')])"
      ],
      "metadata": {
        "id": "kUaM5AjgzPa-"
      },
      "execution_count": 486,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "54aa0e79-8cbe-4a57-ea66-a66df9b4f0b9",
        "id": "ympCdCNkzPa-"
      },
      "execution_count": 487,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.06955541507514577\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2009[('pH', 'Finish')], new_2009[('Colour','Raw T')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Colour-Raw T')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "9ec06c3b-7719-4117-9e65-a0b37d4714ed",
        "id": "5C0DC4_dzPa_"
      },
      "execution_count": 488,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Colour(Raw T) 2010"
      ],
      "metadata": {
        "id": "JT8t892-zPa_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2010[('pH', 'Finish')].corr(new_2010[('Colour','Raw T')])"
      ],
      "metadata": {
        "id": "ZKqhq9N9zPa_"
      },
      "execution_count": 483,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "af5946d3-1d75-475d-ae2a-ec92c859b93c",
        "id": "EHVzB3TCzPa_"
      },
      "execution_count": 484,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.02447931005813295\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2010[('pH', 'Finish')], new_2010[('Colour','Raw T')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Colour-Raw T')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "77b2ae2d-f2e4-4e32-e2e7-8329688afe7d",
        "id": "GlC1aQdEzPa_"
      },
      "execution_count": 485,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Colour(Raw T) 2011"
      ],
      "metadata": {
        "id": "qifwCsUhzPa_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2011[('pH', 'Finish')].corr(new_2011[('Colour','Raw T')])"
      ],
      "metadata": {
        "id": "WzcLtCnizPa_"
      },
      "execution_count": 480,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8b158c24-dde9-44ac-ac54-0beab9be2177",
        "id": "_1VXPV9HzPbA"
      },
      "execution_count": 481,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.030505916466334167\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2011[('pH', 'Finish')], new_2011[('Colour','Raw T')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Colour-Raw T')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "e25baaaa-da7d-4054-df58-42e398cd637f",
        "id": "dlPNJ3TMzPbA"
      },
      "execution_count": 482,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Colour(Raw T) 2012"
      ],
      "metadata": {
        "id": "2pBGgCnJzPbA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2012[('pH', 'Finish')].corr(new_2012[('Colour','Raw T')])"
      ],
      "metadata": {
        "id": "tNmq55xQzPbA"
      },
      "execution_count": 477,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a0a520b5-35b2-4d92-df60-792666a53385",
        "id": "AXkJW73jzPbA"
      },
      "execution_count": 478,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.11667736805351975\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2012[('pH', 'Finish')], new_2012[('Colour','Raw T')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Colour-Raw T')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "7bb20531-7537-4eff-a7f3-4447ba4ab02c",
        "id": "CrVp-kbzzPbA"
      },
      "execution_count": 479,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Colour(Raw T) 2013"
      ],
      "metadata": {
        "id": "EhQlWAlZ0uLi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2013[('pH', 'Finish')].corr(new_2013[('Colour','Raw T')])"
      ],
      "metadata": {
        "id": "ItATIbu40uLi"
      },
      "execution_count": 474,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f3d4d1c6-71c1-43c8-ee48-98760e15dc86",
        "id": "AdA3LuM90uLj"
      },
      "execution_count": 475,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.2261758088763854\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2013[('pH', 'Finish')], new_2013[('Colour','Raw T')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Colour-Raw T')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "f2c30c5b-cd78-45e7-8a4d-e9c226dba9a7",
        "id": "EJeQSwsn0uLj"
      },
      "execution_count": 476,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pH(Finish) & Colour(Raw T) 2014"
      ],
      "metadata": {
        "id": "GKJ3RHdr1CJg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = new_2014[('pH', 'Raw')].corr(new_2014[('Colour','Raw T')])"
      ],
      "metadata": {
        "id": "P4l_OhkJ08oe"
      },
      "execution_count": 471,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bebb8367-7454-440d-f530-69bc4aed10e5",
        "id": "IxTL9m0r08oe"
      },
      "execution_count": 472,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-0.42042522045028474\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(new_2014[('pH', 'Raw')], new_2014[('Colour','Raw T')])\n",
        "plt.xlabel('pH-Finish')\n",
        "plt.ylabel('Colour-Raw T')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "489a9cf6-90a6-4912-f175-17f101df5e49",
        "id": "J5utsspX08oe"
      },
      "execution_count": 473,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Concat all dataframs**"
      ],
      "metadata": {
        "id": "8IqR41btwfWV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "concatenated_df = pd.concat([new_2009, new_2010, new_2011, new_2012, new_2013, new_2014, new_2015, new_2019, new_2020, new_2021, new_2023])"
      ],
      "metadata": {
        "id": "ut1_2EEdwlGT"
      },
      "execution_count": 502,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "concatenated_df = concatenated_df.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "KpJY1htu70fj"
      },
      "execution_count": 515,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "concatenated_df.iloc[1980:2000]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 708
        },
        "id": "j6FHHvxDw_qp",
        "outputId": "2724eee5-c2a7-4e63-dfa5-67964d997bdb"
      },
      "execution_count": 520,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         pH  Chlorine Turbidity Conductivity Alkalinity Temperature Colour  \\\n",
              "     Finish      Free    Finish       Finish     Finish      Finish  Raw T   \n",
              "1980    NaN  1.867271    0.1100       56.800       5.60       9.000   24.0   \n",
              "1981    NaN  1.780000    0.1820       55.400       5.90      11.500   20.0   \n",
              "1982    NaN  2.000000    0.1540       33.600       6.00      11.800   31.0   \n",
              "1983    NaN  2.000000    0.1540       38.750       3.85      12.500   31.0   \n",
              "1984    NaN  1.850000    0.0440       43.900       1.70      13.200   30.0   \n",
              "1985    NaN  1.590000    0.5000       50.000       5.70      13.300   34.0   \n",
              "1986    NaN  1.645000    0.2845       46.950       3.70      13.250   35.0   \n",
              "1987    NaN  1.700000    0.0690       48.475       4.70      13.275   36.0   \n",
              "1988    NaN  1.840000    0.0910       51.800       6.00      11.400   33.0   \n",
              "1989    NaN  1.790000    0.1310       50.200       6.70      11.600   32.0   \n",
              "1990    NaN  1.620000    0.1190       51.000       6.10      11.000   32.0   \n",
              "1991    NaN  1.810000    0.0990       50.600       5.60      11.400   38.0   \n",
              "1992    NaN  1.800000    0.1120       52.800       5.70      11.500   37.0   \n",
              "1993    NaN  1.070500    0.0965       51.450       5.95      12.700   35.5   \n",
              "1994    NaN  0.341000    0.0810       50.100       6.20      13.900   34.0   \n",
              "1995    NaN  1.920000    0.0630       51.600       6.60      13.700   32.0   \n",
              "1996    NaN  1.840000    0.0760       54.400       6.20      13.500   31.0   \n",
              "1997    NaN  1.890000    0.0770       54.400       6.40      14.500   28.0   \n",
              "1998    NaN  2.410000    0.0610       51.600       6.70      13.300   30.0   \n",
              "1999    NaN  2.550000    0.0720       53.600       6.10      13.500   36.0   \n",
              "\n",
              "         pH  \n",
              "        Raw  \n",
              "1980  6.040  \n",
              "1981  5.970  \n",
              "1982  6.040  \n",
              "1983  6.040  \n",
              "1984  6.280  \n",
              "1985  6.610  \n",
              "1986  6.430  \n",
              "1987  6.250  \n",
              "1988  6.350  \n",
              "1989  7.090  \n",
              "1990  6.030  \n",
              "1991  6.390  \n",
              "1992  6.170  \n",
              "1993  6.095  \n",
              "1994  6.020  \n",
              "1995  6.300  \n",
              "1996  6.310  \n",
              "1997  6.240  \n",
              "1998  5.870  \n",
              "1999  6.240  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b89f11e1-df71-46cc-873b-1ac8bfcc0279\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Turbidity</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Colour</th>\n",
              "      <th>pH</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Raw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1980</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.867271</td>\n",
              "      <td>0.1100</td>\n",
              "      <td>56.800</td>\n",
              "      <td>5.60</td>\n",
              "      <td>9.000</td>\n",
              "      <td>24.0</td>\n",
              "      <td>6.040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1981</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.780000</td>\n",
              "      <td>0.1820</td>\n",
              "      <td>55.400</td>\n",
              "      <td>5.90</td>\n",
              "      <td>11.500</td>\n",
              "      <td>20.0</td>\n",
              "      <td>5.970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1982</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.1540</td>\n",
              "      <td>33.600</td>\n",
              "      <td>6.00</td>\n",
              "      <td>11.800</td>\n",
              "      <td>31.0</td>\n",
              "      <td>6.040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1983</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.1540</td>\n",
              "      <td>38.750</td>\n",
              "      <td>3.85</td>\n",
              "      <td>12.500</td>\n",
              "      <td>31.0</td>\n",
              "      <td>6.040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1984</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.850000</td>\n",
              "      <td>0.0440</td>\n",
              "      <td>43.900</td>\n",
              "      <td>1.70</td>\n",
              "      <td>13.200</td>\n",
              "      <td>30.0</td>\n",
              "      <td>6.280</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1985</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.590000</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>50.000</td>\n",
              "      <td>5.70</td>\n",
              "      <td>13.300</td>\n",
              "      <td>34.0</td>\n",
              "      <td>6.610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1986</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.645000</td>\n",
              "      <td>0.2845</td>\n",
              "      <td>46.950</td>\n",
              "      <td>3.70</td>\n",
              "      <td>13.250</td>\n",
              "      <td>35.0</td>\n",
              "      <td>6.430</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1987</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.700000</td>\n",
              "      <td>0.0690</td>\n",
              "      <td>48.475</td>\n",
              "      <td>4.70</td>\n",
              "      <td>13.275</td>\n",
              "      <td>36.0</td>\n",
              "      <td>6.250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1988</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.840000</td>\n",
              "      <td>0.0910</td>\n",
              "      <td>51.800</td>\n",
              "      <td>6.00</td>\n",
              "      <td>11.400</td>\n",
              "      <td>33.0</td>\n",
              "      <td>6.350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1989</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.790000</td>\n",
              "      <td>0.1310</td>\n",
              "      <td>50.200</td>\n",
              "      <td>6.70</td>\n",
              "      <td>11.600</td>\n",
              "      <td>32.0</td>\n",
              "      <td>7.090</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1990</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.620000</td>\n",
              "      <td>0.1190</td>\n",
              "      <td>51.000</td>\n",
              "      <td>6.10</td>\n",
              "      <td>11.000</td>\n",
              "      <td>32.0</td>\n",
              "      <td>6.030</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1991</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.810000</td>\n",
              "      <td>0.0990</td>\n",
              "      <td>50.600</td>\n",
              "      <td>5.60</td>\n",
              "      <td>11.400</td>\n",
              "      <td>38.0</td>\n",
              "      <td>6.390</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1992</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.800000</td>\n",
              "      <td>0.1120</td>\n",
              "      <td>52.800</td>\n",
              "      <td>5.70</td>\n",
              "      <td>11.500</td>\n",
              "      <td>37.0</td>\n",
              "      <td>6.170</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1993</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.070500</td>\n",
              "      <td>0.0965</td>\n",
              "      <td>51.450</td>\n",
              "      <td>5.95</td>\n",
              "      <td>12.700</td>\n",
              "      <td>35.5</td>\n",
              "      <td>6.095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1994</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.341000</td>\n",
              "      <td>0.0810</td>\n",
              "      <td>50.100</td>\n",
              "      <td>6.20</td>\n",
              "      <td>13.900</td>\n",
              "      <td>34.0</td>\n",
              "      <td>6.020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1995</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.920000</td>\n",
              "      <td>0.0630</td>\n",
              "      <td>51.600</td>\n",
              "      <td>6.60</td>\n",
              "      <td>13.700</td>\n",
              "      <td>32.0</td>\n",
              "      <td>6.300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1996</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.840000</td>\n",
              "      <td>0.0760</td>\n",
              "      <td>54.400</td>\n",
              "      <td>6.20</td>\n",
              "      <td>13.500</td>\n",
              "      <td>31.0</td>\n",
              "      <td>6.310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1997</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.890000</td>\n",
              "      <td>0.0770</td>\n",
              "      <td>54.400</td>\n",
              "      <td>6.40</td>\n",
              "      <td>14.500</td>\n",
              "      <td>28.0</td>\n",
              "      <td>6.240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1998</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2.410000</td>\n",
              "      <td>0.0610</td>\n",
              "      <td>51.600</td>\n",
              "      <td>6.70</td>\n",
              "      <td>13.300</td>\n",
              "      <td>30.0</td>\n",
              "      <td>5.870</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1999</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2.550000</td>\n",
              "      <td>0.0720</td>\n",
              "      <td>53.600</td>\n",
              "      <td>6.10</td>\n",
              "      <td>13.500</td>\n",
              "      <td>36.0</td>\n",
              "      <td>6.240</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b89f11e1-df71-46cc-873b-1ac8bfcc0279')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b89f11e1-df71-46cc-873b-1ac8bfcc0279 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b89f11e1-df71-46cc-873b-1ac8bfcc0279');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 520
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "concatenated_df[('pH','Raw')].fillna(concatenated_df[('pH','Finish')], inplace=True)"
      ],
      "metadata": {
        "id": "dTtSNGtr5nAy"
      },
      "execution_count": 521,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "concatenated_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "1N1qdZ9k6CeK",
        "outputId": "4da09433-8c04-4e81-8fbb-4e9b136e2f2f"
      },
      "execution_count": 522,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         pH Chlorine Turbidity Conductivity Alkalinity Temperature Colour  \\\n",
              "     Finish     Free    Finish       Finish     Finish      Finish  Raw T   \n",
              "0      7.35    1.820     0.134         48.6       10.0        3.40   40.0   \n",
              "1      7.22    1.790     0.138         56.4       10.0        3.70  176.0   \n",
              "2      7.34    1.820     0.120         53.6       10.0        3.70   54.0   \n",
              "3      7.29    1.785     0.141         54.2       10.0        3.65   74.0   \n",
              "4      7.24    1.750     0.162         54.8       10.0        3.60   94.0   \n",
              "...     ...      ...       ...          ...        ...         ...    ...   \n",
              "3689   6.95    1.730     0.497         37.7        5.9        5.10   44.0   \n",
              "3690   0.00    0.000     0.000          0.0        0.0        0.00    0.0   \n",
              "3691   7.02    1.820     0.592         35.3        6.1        5.40   53.0   \n",
              "3692   7.39    1.540     0.736         36.3        5.9        6.00   51.0   \n",
              "3693   6.74    1.710     0.720         33.7        5.9        6.00   40.0   \n",
              "\n",
              "        pH  \n",
              "       Raw  \n",
              "0     7.35  \n",
              "1     7.22  \n",
              "2     7.34  \n",
              "3     7.29  \n",
              "4     7.24  \n",
              "...    ...  \n",
              "3689  6.95  \n",
              "3690  0.00  \n",
              "3691  7.02  \n",
              "3692  7.39  \n",
              "3693  6.74  \n",
              "\n",
              "[3694 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-48317a5d-886c-4672-979c-4f643ba9bd09\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>pH</th>\n",
              "      <th>Chlorine</th>\n",
              "      <th>Turbidity</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Alkalinity</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Colour</th>\n",
              "      <th>pH</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>Finish</th>\n",
              "      <th>Free</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Finish</th>\n",
              "      <th>Raw T</th>\n",
              "      <th>Raw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.35</td>\n",
              "      <td>1.820</td>\n",
              "      <td>0.134</td>\n",
              "      <td>48.6</td>\n",
              "      <td>10.0</td>\n",
              "      <td>3.40</td>\n",
              "      <td>40.0</td>\n",
              "      <td>7.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7.22</td>\n",
              "      <td>1.790</td>\n",
              "      <td>0.138</td>\n",
              "      <td>56.4</td>\n",
              "      <td>10.0</td>\n",
              "      <td>3.70</td>\n",
              "      <td>176.0</td>\n",
              "      <td>7.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.34</td>\n",
              "      <td>1.820</td>\n",
              "      <td>0.120</td>\n",
              "      <td>53.6</td>\n",
              "      <td>10.0</td>\n",
              "      <td>3.70</td>\n",
              "      <td>54.0</td>\n",
              "      <td>7.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7.29</td>\n",
              "      <td>1.785</td>\n",
              "      <td>0.141</td>\n",
              "      <td>54.2</td>\n",
              "      <td>10.0</td>\n",
              "      <td>3.65</td>\n",
              "      <td>74.0</td>\n",
              "      <td>7.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7.24</td>\n",
              "      <td>1.750</td>\n",
              "      <td>0.162</td>\n",
              "      <td>54.8</td>\n",
              "      <td>10.0</td>\n",
              "      <td>3.60</td>\n",
              "      <td>94.0</td>\n",
              "      <td>7.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3689</th>\n",
              "      <td>6.95</td>\n",
              "      <td>1.730</td>\n",
              "      <td>0.497</td>\n",
              "      <td>37.7</td>\n",
              "      <td>5.9</td>\n",
              "      <td>5.10</td>\n",
              "      <td>44.0</td>\n",
              "      <td>6.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3690</th>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3691</th>\n",
              "      <td>7.02</td>\n",
              "      <td>1.820</td>\n",
              "      <td>0.592</td>\n",
              "      <td>35.3</td>\n",
              "      <td>6.1</td>\n",
              "      <td>5.40</td>\n",
              "      <td>53.0</td>\n",
              "      <td>7.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3692</th>\n",
              "      <td>7.39</td>\n",
              "      <td>1.540</td>\n",
              "      <td>0.736</td>\n",
              "      <td>36.3</td>\n",
              "      <td>5.9</td>\n",
              "      <td>6.00</td>\n",
              "      <td>51.0</td>\n",
              "      <td>7.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3693</th>\n",
              "      <td>6.74</td>\n",
              "      <td>1.710</td>\n",
              "      <td>0.720</td>\n",
              "      <td>33.7</td>\n",
              "      <td>5.9</td>\n",
              "      <td>6.00</td>\n",
              "      <td>40.0</td>\n",
              "      <td>6.74</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3694 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48317a5d-886c-4672-979c-4f643ba9bd09')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-48317a5d-886c-4672-979c-4f643ba9bd09 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-48317a5d-886c-4672-979c-4f643ba9bd09');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 522
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_coefficient = concatenated_df[('Conductivity', 'Finish')].corr(concatenated_df[('Temperature','Finish')])"
      ],
      "metadata": {
        "id": "CI6jq_KvzG_x"
      },
      "execution_count": 523,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(correlation_coefficient)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "24752b2b-ebcc-42be-fab9-484b1a539b1a",
        "id": "6Mcnc2yTzG_y"
      },
      "execution_count": 524,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.21901232423056424\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.scatter(concatenated_df[('Conductivity', 'Finish')], concatenated_df[('Temperature','Finish')])\n",
        "plt.xlabel('Conductivity-Finish')\n",
        "plt.ylabel('Temperature-Finish')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "0aa75c2e-64af-4aa8-8af7-b6862c35a8f3",
        "id": "LC2tDMZKzG_z"
      },
      "execution_count": 525,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "concatenated_df.to_csv('Preprocessed_Data.csv', index=False)"
      ],
      "metadata": {
        "id": "ZgbeeJgc-BSx"
      },
      "execution_count": 526,
      "outputs": []
    }
  ]
}